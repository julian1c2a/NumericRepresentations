<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_num_repr" xml:lang="es">
<title>Referencia del Namespace NumRepr</title>
<indexterm><primary>NumRepr</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_num_repr_1_1auxiliary__functions">auxiliary_functions</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_num_repr_1_1auxiliary__types">auxiliary_types</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_num_repr_1_1detail">detail</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_num_repr_1_1lex">lex</link></para>
</listitem>
            <listitem><para>namespace <link linkend="_namespace_num_repr_1_1type__traits">type_traits</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Clases    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_num_repr_1_1base__num__t">base_num_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_num_repr_1_1dig__t">dig_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_num_repr_1_1nat__rat__fixed__reg__t">nat_rat_fixed_reg_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link></para>

<para>DEFINCION DE template&lt;uint128_t Radix&gt; register_of_digits_t{};. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_namespace_num_repr_1ac8b645f8109f8fe793fac08c3c19b496">chint_t</link> = char</para>

<para>NUEVOS NOMBRES PARA LOS ENTEROS O PARECIDOS. </para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08">schint_t</link> = signed char</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">ssint_t</link> = signed short int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">sint_t</link> = signed int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">slint_t</link> = signed long int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">sllint_t</link> = signed long long int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link> = unsigned char</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link> = unsigned short int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link> = unsigned int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link> = unsigned long int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link> = unsigned long long int</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> = __uint128_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link> = __int128_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> = std::size_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a08fdac8ec5e7198e046fbb1a55170acb">sint8_t</link> = std::int8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1af5fe3bff90648275268a6f85b4628ae9">sint16_t</link> = std::int16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a6858219eef04d10b215c3fa36d322a8b">sint32_t</link> = std::int32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a3aa23f70e9c473be1b4af85b168951c7">sint64_t</link> = std::int64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ab62814b3ad5f294a66f378fd28f90113">int8_t</link> = std::int8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ae5e30e655c1f741255ac5600f98a46fc">int16_t</link> = std::int16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link> = std::int32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link> = std::int64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a6d251e3fdf293ad7f699785ca3818bac">fast8_t</link> = std::int_fast8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a156f412cea618e4883ed355e5c5abb9d">fast16_t</link> = std::int_fast16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a26a5d9833bf7b207952d1b90280f401a">fast32_t</link> = std::int_fast32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a749d85495bf08b4447fb5253ec897dd5">fast64_t</link> = std::int_fast64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a1246598aa532c1bda5c564b135c9c7bd">least8_t</link> = std::int_least8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1afb6f5a3a759aae83ce3ce7d660c943d5">least16_t</link> = std::int_least16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a4dd4d4221988de1b8b49404cf4fddd0b">least32_t</link> = std::int_least32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a84148be2ce937dca85ea677ab335dfa7">least64_t</link> = std::int_least64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ac5b617f84b139672d691e24c196528e9">uint8_t</link> = std::uint8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1aaf7419192485988c57254740ce16da9b">uint16_t</link> = std::uint16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a4f502071a1f4a9b34611a4b2c96b7a4a">uint32_t</link> = std::uint32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">uint64_t</link> = std::uint64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a9b374efcf2955b0e2aeda6eb50941ebe">ufast8_t</link> = std::uint_fast8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a64a10bd5751a508132b709300a8e916c">ufast16_t</link> = std::uint_fast16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1afcff0725f2a8a3faed491cc9224d6d4d">ufast32_t</link> = std::uint_fast32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a17e6e77298f11036961bd9d19fdc94a7">ufast64_t</link> = std::uint_fast64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a7fe44611f6ab312ef9f2eb05d88a8423">uleast8_t</link> = std::uint_least8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ae2745e872cfa96ef2667e58a861f4964">uleast16_t</link> = std::uint_least16_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1aaf4382c6067f3c175866881db9ed85fd">uleast32_t</link> = std::uint_least32_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a5345c86c32fe5fbecb4673408fd9cdf4">uleast64_t</link> = std::uint_least64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1a76e930f3badebdae54ceb6d60d001a0e">intmax_t</link> = std::intmax_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_num_repr_1ab66bf498bebe15bc960b29f844a1d069">uintmax_t</link> = std::uintmax_t</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> B&gt; </para><para>using <link linkend="_namespace_num_repr_1a3a5ba1b030588c94513fdad9a1b44ef1">digit_t</link> = <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t</link>&lt; static_cast&lt; <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> &gt;(B)&gt;, static_cast&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t</link>&lt; static_cast&lt; <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> &gt;(B)&gt; &gt;(static_cast&lt; <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> &gt;(B)) &gt;</para>

<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </para><para>using <link linkend="_namespace_num_repr_1a162b6953f603031db66e18e2b8240bc2">register_of_digits_t</link> = <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t</link>&lt; B &gt;, static_cast&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t</link>&lt; B &gt; &gt;(B), L &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </para><para>using <link linkend="_namespace_num_repr_1adee56f6cb05bebc237af032f75d2c03b">register_digs_t</link> = <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&lt; static_cast&lt; <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> &gt;(B)&gt;, static_cast&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&lt; static_cast&lt; <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> &gt;(B)&gt; &gt;(static_cast&lt; <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> &gt;(B)), L &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumeraciones    </title>
        <itemizedlist>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link> : bool { <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link> = true
, <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link> = false
 }</para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0">sign_funct_e</link> : char { <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859">vzero</link> = 0
, <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0a664d33ce0500d45dc2e44770723ba7d1">vminus</link> = -1
, <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link> = +1
 }</para>

<para>INTRODUCIDO. </para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46">dig_format_e</link> : unsigned char { <?linebreak?><link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a2a0e86af18f652069a49330979c008a6">BINnat</link> =0
, <link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a11ed08d0994e9c768353601d9ea12741">BCDnat</link> =1
, <link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a1459599c082addf48ba502cbd852f111">BCDexc3</link> =2
, <link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a45848ac572e88361fe73ae60787a780b">BCDaitk</link> =3
, <?linebreak?><link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a7a5896262db09a2cd411bf1cdbb56de5">johnson_n</link> =4
, <link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46ac9f595e6a66c4856892cd21e81c6a67d">biquinario</link> =5
 }</para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7">num_type_e</link> : unsigned char { <link linkend="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a8f4ef05b543fb6157b374099100574b3">natural</link> =0
, <link linkend="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a0e1ffddb2cb5f112904e70bc30478dc0">entero</link> =1
, <link linkend="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a6e4fb67cd72a9935a571e3cb1110005e">racional</link> =2
, <link linkend="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a4bca24304861acde5770fdbe3cc2503b">real</link> =3
 }</para>

<para>A INTRODUCIR. </para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08">nat_num_format_e</link> : bool { <link linkend="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a8f4ef05b543fb6157b374099100574b3">natural</link> =false
, <link linkend="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a28485a5b2bfa6868f834fe7f61b46f5f">exc_n</link> =true
 }</para>

<para>YA INTRODUCIDO, PERO NO EXPLICITAMENTE NI COMPLETAMENTE. </para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634">int_num_format_e</link> : unsigned char { <link linkend="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634afc47fff21fb7613d155583803fc2949e">int_CB</link> =0
, <link linkend="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634a23db6f34a6b9b864ba35e2ae374c6aa3">int_CBm1</link> =1
, <link linkend="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634abfdb019232f14bf7a7519785d14a1e75">int_MS</link> =2
, <link linkend="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634abc6d44509ed50fd5177f78049c59c446">int_EXC_n</link> =3
 }</para>

<para>SOLO NATURAL. </para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dc">rat_num_format_e</link> : unsigned char { <link linkend="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcadbb955c289fb915e797daeaa9b736e9a">pair_num_den</link> =0
, <link linkend="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dca12efa49e18cac717f7afe7fbc0db6ae2">fxd_pt</link> =1
, <link linkend="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcaa412206072b5acc1c9ca53f8fa8cc586">flt_pt</link> =2
 }</para>

<para>EN C_B YA QUEDA EN MS. </para>
</listitem>
            <listitem><para>enum class <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> { <?linebreak?><link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">add</link>
, <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">sub</link>
, <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a0f9f2d92c2583ef952556e1f382d0974">mult</link>
, <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a38696558dc98494c08d951c052900a2a">div</link>
, <?linebreak?><link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>
, <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">fediv</link>
, <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf">other</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Funciones    </title>
        <itemizedlist>
            <listitem><para>constexpr <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link> <link linkend="_namespace_num_repr_1a267abda3e78b6a487e39c4de923838bf">Char2Sign</link> (char ch) noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::arith_integral_c IntT&gt; </para><para>constexpr <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link> <link linkend="_namespace_num_repr_1ae6e314ed88507b46a8155893a823049c">Int2Sign</link> (IntT nu) noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::arith_integral_c IntT&gt; </para><para>constexpr <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0">sign_funct_e</link> <link linkend="_namespace_num_repr_1a396b4de02e34550acddc2664931975d8">Int2SignFunct</link> (IntT nu) noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::arith_natural_c NatIntT&gt; </para><para>constexpr <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0">sign_funct_e</link> <link linkend="_namespace_num_repr_1af38005a1c9fb23a68d4651abc72ddf25">Nat2SignFunct</link> (NatIntT nu) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename Int_T , usint B&gt; </para><para>constexpr ullint <link linkend="_namespace_num_repr_1a518d83628ca3a414ac5e12e47bd7bd5b">pot_max_base_B_en_Int_T</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;typename Int_T , ullint B&gt; </para><para>constexpr ullint <link linkend="_namespace_num_repr_1a0c4ce13b175150d7a33d5c7b515f9dfa">num_digs_max_base_B_en_Int_T</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;typename Int_T , ullint B&gt; </para><para>constexpr ullint <link linkend="_namespace_num_repr_1aeced1290d3d28bee5b4a0e22840a72db">max_base_B_en_Int_T</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T, B&gt;())</para><para>consteval UINT_T <link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T, B&gt;())</para><para>consteval <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; <link linkend="_namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5">dig_max</link> () noexcept</para>

<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T Base&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,Base&gt;())</para><para>std::istream &amp; <link linkend="_namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac">operator&gt;&gt;</link> (std::istream &amp;is, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, Base &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T Base&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,Base&gt;())</para><para>std::ostream &amp; <link linkend="_namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8">operator&lt;&lt;</link> (std::ostream &amp;os, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, Base &gt; arg)</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c Int_Type, Int_Type Base, std::size_t Length&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))</para><para>std::istream &amp; <link linkend="_namespace_num_repr_1ab9f98f4d0eefbee0c13e52061d4a5c2d">operator&gt;&gt;</link> (std::istream &amp;is, pfx_rat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c Int_Type, Int_Type Base, std::size_t Long&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;())</para><para>std::ostream &amp; <link linkend="_namespace_num_repr_1aa425b3bf3dd35e9867de22ac45a46616">operator&lt;&lt;</link> (std::ostream &amp;os, const pfx_rat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> LE&gt; </para><para>bool <link linkend="_namespace_num_repr_1a89c726416380167073c3a39632cf2fa9">is_nat_reg_digs_type_id</link> (std::string in)</para>

<para>ESPECIALIZACIONES PARA NAT_REG_DIGS. </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> LE&gt; </para><para>std::string <link linkend="_namespace_num_repr_1a9bda15db6ff37b4d5247ca097156679c">to_nat_reg_digs_type_string</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> LE&gt; </para><para><link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> <link linkend="_namespace_num_repr_1a0c896afd9a215a562fdc0280a545cf49">size_of_nat_reg_digs_type_string_idT</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c Int_Type, Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Length&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))</para><para>std::istream &amp; <link linkend="_namespace_num_repr_1abc220e2b8550522f9cb96ecd95d172bb">operator&gt;&gt;</link> (std::istream &amp;is, <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; Int_Type, Base, Length &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c Int_Type, Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Long&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;())</para><para>std::ostream &amp; <link linkend="_namespace_num_repr_1aee52933f615df4b729ccc06310036b16">operator&lt;&lt;</link> (std::ostream &amp;os, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; Int_Type, Base, Long &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; <link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; &amp;larg) noexcept</para>

<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; <?linebreak?>requires ((N&gt;0)&amp;&amp;(M&gt;0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+M &gt; <link linkend="_namespace_num_repr_1a164d8860f3a0813504ee30c88c7bcab0">concat</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M &gt; &amp;rarg) noexcept</para>

<para>STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N &gt; 0)</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+1 &gt; <link linkend="_namespace_num_repr_1afb9644c35a4bfb14155cb38894940e10">concat</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; &amp;larg, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; rarg) noexcept</para>

<para>STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; <?linebreak?>requires (M &gt; 0)</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 1+M &gt; <link linkend="_namespace_num_repr_1a991ca8bb9c18feb0b5e776550b7ad703">concat</link> (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M &gt; &amp;rarg) noexcept</para>

<para>STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 1 &gt; <link linkend="_namespace_num_repr_1a90dce0ccc34796d52120a70c0abe2fb3">concat</link> (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; larg) noexcept</para>

<para>STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 2 &gt; <link linkend="_namespace_num_repr_1a064a18e22bc1be2b2a8b4bd9b8bfcafb">concat</link> (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; larg, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; rarg) noexcept</para>

<para>STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) </para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, typename T0 , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T0,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;) )</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 1+(sizeof ...(Ts))&gt; <link linkend="_namespace_num_repr_1ad235de59c6fb0e337d7d1974999b7c90">concat</link> (T0 dig0, Ts ... dig_pack) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, typename T , typename ... Ts&gt; <?linebreak?>requires (((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;(N&gt;0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+1+(sizeof ...(Ts))&gt; <link linkend="_namespace_num_repr_1a0706a8207d9326e70eb68286a809eac0">concat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; larg, T dig, Ts ... dig_pack) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M, typename T , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;) &amp;&amp; (M&gt;0) )</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M+1+(sizeof ...(Ts))&gt; <link linkend="_namespace_num_repr_1a4725158490aa07256f8ba8b9bb7179e4">concat</link> (T dig, Ts ... dig_pack, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M &gt; rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ... N_pack&gt; <?linebreak?>requires ((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+(...+(N_pack))&gt; <link linkend="_namespace_num_repr_1af76d4c574256a8ae2913dd960c035d9a">concat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; larg, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N_pack &gt; ... rarg_pack) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a3e02d589f6de47a7861f7d11e76d4d73">operator&lt;&lt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; <link linkend="_namespace_num_repr_1aa578c0c4c9f69c8a6949ae841ab20a14">operator&lt;&lt;=</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; <link linkend="_namespace_num_repr_1a9da1c60e9a0710e6940735e5aa6471e2">operator&gt;&gt;=</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a02cf5374fb604e0ac92479795f57be45">operator&gt;&gt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee">rem_B</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; <link linkend="_namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad">m_rem_B</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a791ee564df192b445483d0088d163710">mer_B</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; <link linkend="_namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb">m_mer_B</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; <link linkend="_namespace_num_repr_1af300f03bc135c81afa3965c905feda49">operator|=</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a688d5f9678ad6dca21557cc629c46c8e">operator|</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; <link linkend="_namespace_num_repr_1a0a2d2cfc3bfc462709ba6cc17b5cd0d4">operator&amp;=</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a342a2a8c42d37ee5900c73815b5f289b">operator&amp;</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254">m_incr</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</para>

<para>TODO 31/12/2022. </para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; <link linkend="_namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6">m_sum_digs_carryin1</link> (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; &amp;left, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; right) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; <link linkend="_namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0">m_sum_digs_carryin0</link> (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; &amp;left, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; right) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; <link linkend="_namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3">m_sum</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;1)</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7">aprox_units_divB</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;arg) noexcept</para>

<para>&lt; PRECONDITIONS : ARG != 0 AND ARG != 1 &gt; </para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n &gt; 0) &amp;&amp; (n &lt; N) &amp;&amp; (N &gt; 1))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; <link linkend="_namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08">aprox_units_divB_n</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N &gt; 0)</para><para>constexpr std::array&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt;, 2 &gt; <link linkend="_namespace_num_repr_1a42cc99f9e1a6096b619df7c44eb7b33e">aprox_coc_rem</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;dsor) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N &gt; 0)</para><para>constexpr std::array&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt;, 2 &gt; <link linkend="_namespace_num_repr_1a3e8c6b3fe06161bb9befa0f2cc00c57d">aprox_coc_rem</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;dsor, <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt; coc_calculado, <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt; rem_calculado) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; <?linebreak?>requires (N &gt; 0)&amp;&amp;(M &gt; 0)</para><para>constexpr std::array&lt; <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, std::max(N, M)&gt;, 2 &gt; <link linkend="_namespace_num_repr_1a1924720464e58ae5372de9b39a45d496">fediv</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, M &gt; &amp;rarg) noexcept</para>

<para>END. </para>
</listitem>
            <listitem><para>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </para><para>bool <link linkend="_namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad">get_digit_token</link> (std::istream &amp;is, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; &amp;dig_value)</para>

<para>FUNCION QUE CONSIGUE EL TOKEN DIGITO. </para>
</listitem>
            <listitem><para>template&lt;type_traits::unsigned_integral_c T, T B&gt; </para><para>bool <link linkend="_namespace_num_repr_1a4a43d171097231b9c153662a4d96d170">get_radix_token</link> (std::istream &amp;is)</para>

<para>FUNCION QUE CONSIGUE EL TOKEN BASE. </para>
</listitem>
            <listitem><para>template&lt;type_traits::unsigned_integral_c T, T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </para><para>bool <link linkend="_namespace_num_repr_1a6fdae534a76a017d02140a70aa7dc8a3">get_digit_loop_token</link> (std::istream &amp;is, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; T, B, L &gt; &amp;value) noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::unsigned_integral_c T, T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </para><para>bool <link linkend="_namespace_num_repr_1a1cdc1a9d45497ce154566f6f15abdc32">read</link> (std::istream &amp;is, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; T, B, L &gt; &amp;value) noexcept</para>

<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
</listitem>
            <listitem><para>template&lt;typename Int_Type , Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Length&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))</para><para>std::istream &amp; <link linkend="_namespace_num_repr_1a8f0cf6e39391a7fdc66a01db667b98de">operator&gt;&gt;</link> (std::istream &amp;is, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; Int_Type, Base, Length &gt; &amp;arg)</para>

<para>SOBRECARGA DE ISTREAM Y OSTREAM CON LOS OPERADORES DE DESPLAZAMEINTO. </para>
</listitem>
            <listitem><para>template&lt;typename Int_Type , Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Long&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;())</para><para>std::ostream &amp; <link linkend="_namespace_num_repr_1aef762c1b9785e93fffd3336262a8e096">operator&lt;&lt;</link> (std::ostream &amp;os, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; Int_Type, Base, Long &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a349a510b43badac76cd86e34dcbb8288">display_constr_UINT_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a27cd3b07e101240bdd85b9248f428585">display_constr_SINT_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a65c9d82e583a5b64b3b94c10ae46e80b">display_constr_defecto_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a2abf3d71843768521c5b7b608137bcf4">display_constr_copia_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a50ed09e5a479347d085a2dff28299e9b">display_constr_movimiento_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1acd7f0f0f3ad4af5e2a8b26aaf92e59ce">display_operator_assign_UINT_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ad70bf53a8ff03d0d407bd0b88aac90bb">display_operator_assign_SINT_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1aba82289a413133952ad74254c7d86fde">display_operator_assign_copia_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a3e7eb3c76c069bbf89a13630f24df04c">display_operator_assign_movimiento_dig_t</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a6b984dcc8ef024c9c42fcfbc897bb060">display_operator_preincrement</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1aa5d4ce0684eb1ed7d51e2bd7351b9f4c">display_operator_postincrement</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a17e46977769b816d0006e7b22c0b3a86">display_operator_predecrement</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ad1dcf3e9f99dd7325a7ac774a3908389">display_operator_postdecrement</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ae5396bd9648b4535ea252118b48abed0">display_operator_add_assign</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a06390888c1a5aa13471f73214555a6ab">display_operator_add_assign_uint</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a02cc28145662d4c0eb86cc8bba1b2890">display_operator_substract_assign</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1aff607bfd703ccc92f0394a2d53e5a978">display_operator_substract_assign_uint</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1adf2a3579520b2a41803827f71117b59c">display_operator_mult_assign</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a1bfea978c2c4f02951d0aaba99c33277">display_operator_mult_assign_uint</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a4f2823e0e1c7c97f647e2c49d5386dd6">display_operator_ediv_assign</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a40d1a413dfb00f54f7e5e57ba120e1b9">display_operator_ediv_assign_uint</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ab5cfacf83cb5ad8c3ea473eb5f07bed8">display_operator_erem_assign</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ae8f3b3b914ffe3ce9448c8a384a77fe4">display_operator_erem_assign_uint</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1aef173813ec54d5567be3954915e1c675">display_operator_add</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a69df9f333832a022d004ed63d0d01c15">display_operator_add_int</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a0e28a120b130962ea0116df58c03c6f4">display_operator_substract</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1acabc08f11c12fb6d9f9e790e9030f3a4">display_operator_substract_int</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a8060f5d58bba169daf225959a72bd68a">display_operator_multiply</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1aa553f82b42704b3381cd71b67855b1fe">display_operator_multiply_int</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a30555c61063d5a6531aad5685221fd1e">display_operator_edivision</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ada3dbd81393ca220f533ea9c7b59326c">display_operator_edivision_int</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a0aa113da9c3c91f1af1c073958cc12a3">display_operator_C_B</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a2525ee5f113018fcb89a1c8a6a28aa31">display_operator_C_Bm1</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1aec8203e0be75e913ece973211c4b1386">display_prop_C_B_eq_inv_C_B</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1adb8c5e5fc5db353e6db6327ac4c62742">display_prop_C_Bm1_eq_inv_C_Bm1</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ae0fc1d1a1935c51de9fa9490f212c168">display_prop_C_B_minus_1_eq_C_Bm1</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1a49752c01c024e2da6e67837bde614d76">display_unary_operator_minus</link> ()</para>
</listitem>
            <listitem><para>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</para><para>void <link linkend="_namespace_num_repr_1ad2ec78854da2abb21348af8322a61571">display_unary_operator_neg</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Documentación de los &apos;typedefs&apos;</title>
<anchor xml:id="_namespace_num_repr_1ac8b645f8109f8fe793fac08c3c19b496"/><section>
    <title>chint_t</title>
<indexterm><primary>chint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>chint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ac8b645f8109f8fe793fac08c3c19b496">NumRepr::chint_t</link> = typedef char</computeroutput></para><para>

<para>NUEVOS NOMBRES PARA LOS ENTEROS O PARECIDOS. </para>
</para>
<para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00058">58</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a3a5ba1b030588c94513fdad9a1b44ef1"/><section>
    <title>digit_t</title>
<indexterm><primary>digit_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>digit_t</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> B&gt; </computeroutput><para><computeroutput>using <link linkend="_namespace_num_repr_1a3a5ba1b030588c94513fdad9a1b44ef1">NumRepr::digit_t</link> = typedef <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&lt;static_cast&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&gt;(B)&gt;, static_cast&lt;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&lt;static_cast&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&gt;(B)&gt; &gt;(static_cast&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&gt;(B)) &gt;</computeroutput></para><para>

<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
</para>
<para>
Definición en la línea <link linkend="_dig__t_8hpp_source_1l01494">1494</link> del archivo <link linkend="_dig__t_8hpp_source">dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a156f412cea618e4883ed355e5c5abb9d"/><section>
    <title>fast16_t</title>
<indexterm><primary>fast16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fast16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a156f412cea618e4883ed355e5c5abb9d">NumRepr::fast16_t</link> = typedef std::int_fast16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00081">81</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a26a5d9833bf7b207952d1b90280f401a"/><section>
    <title>fast32_t</title>
<indexterm><primary>fast32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fast32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a26a5d9833bf7b207952d1b90280f401a">NumRepr::fast32_t</link> = typedef std::int_fast32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00082">82</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a749d85495bf08b4447fb5253ec897dd5"/><section>
    <title>fast64_t</title>
<indexterm><primary>fast64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fast64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a749d85495bf08b4447fb5253ec897dd5">NumRepr::fast64_t</link> = typedef std::int_fast64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00083">83</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a6d251e3fdf293ad7f699785ca3818bac"/><section>
    <title>fast8_t</title>
<indexterm><primary>fast8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fast8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a6d251e3fdf293ad7f699785ca3818bac">NumRepr::fast8_t</link> = typedef std::int_fast8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00080">80</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae5e30e655c1f741255ac5600f98a46fc"/><section>
    <title>int16_t</title>
<indexterm><primary>int16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ae5e30e655c1f741255ac5600f98a46fc">NumRepr::int16_t</link> = typedef std::int16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00077">77</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862"/><section>
    <title>int32_t</title>
<indexterm><primary>int32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">NumRepr::int32_t</link> = typedef std::int32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00078">78</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa"/><section>
    <title>int64_t</title>
<indexterm><primary>int64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">NumRepr::int64_t</link> = typedef std::int64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00079">79</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ab62814b3ad5f294a66f378fd28f90113"/><section>
    <title>int8_t</title>
<indexterm><primary>int8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ab62814b3ad5f294a66f378fd28f90113">NumRepr::int8_t</link> = typedef std::int8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00076">76</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a76e930f3badebdae54ceb6d60d001a0e"/><section>
    <title>intmax_t</title>
<indexterm><primary>intmax_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>intmax_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a76e930f3badebdae54ceb6d60d001a0e">NumRepr::intmax_t</link> = typedef std::intmax_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00104">104</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1afb6f5a3a759aae83ce3ce7d660c943d5"/><section>
    <title>least16_t</title>
<indexterm><primary>least16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>least16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1afb6f5a3a759aae83ce3ce7d660c943d5">NumRepr::least16_t</link> = typedef std::int_least16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00085">85</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a4dd4d4221988de1b8b49404cf4fddd0b"/><section>
    <title>least32_t</title>
<indexterm><primary>least32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>least32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a4dd4d4221988de1b8b49404cf4fddd0b">NumRepr::least32_t</link> = typedef std::int_least32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00086">86</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a84148be2ce937dca85ea677ab335dfa7"/><section>
    <title>least64_t</title>
<indexterm><primary>least64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>least64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a84148be2ce937dca85ea677ab335dfa7">NumRepr::least64_t</link> = typedef std::int_least64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00087">87</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a1246598aa532c1bda5c564b135c9c7bd"/><section>
    <title>least8_t</title>
<indexterm><primary>least8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>least8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a1246598aa532c1bda5c564b135c9c7bd">NumRepr::least8_t</link> = typedef std::int_least8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00084">84</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1adee56f6cb05bebc237af032f75d2c03b"/><section>
    <title>register_digs_t</title>
<indexterm><primary>register_digs_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>register_digs_t</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>using <link linkend="_namespace_num_repr_1adee56f6cb05bebc237af032f75d2c03b">NumRepr::register_digs_t</link> = typedef <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&lt;static_cast&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&gt;(B)&gt;, static_cast&lt;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&lt;static_cast&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&gt;(B)&gt; &gt;(static_cast&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&gt;(B)), L &gt;</computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02434">2434</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a162b6953f603031db66e18e2b8240bc2"/><section>
    <title>register_of_digits_t</title>
<indexterm><primary>register_of_digits_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>register_of_digits_t</secondary></indexterm>
<computeroutput>template&lt;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link> B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>using <link linkend="_namespace_num_repr_1a162b6953f603031db66e18e2b8240bc2">NumRepr::register_of_digits_t</link> = typedef <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t</link>&lt;B&gt;, static_cast&lt;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t</link>&lt;B&gt; &gt;(B), L &gt;</computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01576">1576</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08"/><section>
    <title>schint_t</title>
<indexterm><primary>schint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>schint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08">NumRepr::schint_t</link> = typedef signed char</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00059">59</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502"/><section>
    <title>sint128_t</title>
<indexterm><primary>sint128_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sint128_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">NumRepr::sint128_t</link> = typedef __int128_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00070">70</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1af5fe3bff90648275268a6f85b4628ae9"/><section>
    <title>sint16_t</title>
<indexterm><primary>sint16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sint16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1af5fe3bff90648275268a6f85b4628ae9">NumRepr::sint16_t</link> = typedef std::int16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00073">73</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a6858219eef04d10b215c3fa36d322a8b"/><section>
    <title>sint32_t</title>
<indexterm><primary>sint32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sint32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a6858219eef04d10b215c3fa36d322a8b">NumRepr::sint32_t</link> = typedef std::int32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00074">74</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a3aa23f70e9c473be1b4af85b168951c7"/><section>
    <title>sint64_t</title>
<indexterm><primary>sint64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sint64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a3aa23f70e9c473be1b4af85b168951c7">NumRepr::sint64_t</link> = typedef std::int64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00075">75</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a08fdac8ec5e7198e046fbb1a55170acb"/><section>
    <title>sint8_t</title>
<indexterm><primary>sint8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sint8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a08fdac8ec5e7198e046fbb1a55170acb">NumRepr::sint8_t</link> = typedef std::int8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00072">72</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3"/><section>
    <title>sint_t</title>
<indexterm><primary>sint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">NumRepr::sint_t</link> = typedef signed int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00061">61</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf"/><section>
    <title>size_t</title>
<indexterm><primary>size_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>size_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">NumRepr::size_t</link> = typedef std::size_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00071">71</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121"/><section>
    <title>slint_t</title>
<indexterm><primary>slint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>slint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">NumRepr::slint_t</link> = typedef signed long int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00062">62</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9"/><section>
    <title>sllint_t</title>
<indexterm><primary>sllint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sllint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">NumRepr::sllint_t</link> = typedef signed long long int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00063">63</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd"/><section>
    <title>ssint_t</title>
<indexterm><primary>ssint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ssint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">NumRepr::ssint_t</link> = typedef signed short int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00060">60</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f"/><section>
    <title>uchint_t</title>
<indexterm><primary>uchint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uchint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">NumRepr::uchint_t</link> = typedef unsigned char</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00064">64</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a64a10bd5751a508132b709300a8e916c"/><section>
    <title>ufast16_t</title>
<indexterm><primary>ufast16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ufast16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a64a10bd5751a508132b709300a8e916c">NumRepr::ufast16_t</link> = typedef std::uint_fast16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00094">94</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1afcff0725f2a8a3faed491cc9224d6d4d"/><section>
    <title>ufast32_t</title>
<indexterm><primary>ufast32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ufast32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1afcff0725f2a8a3faed491cc9224d6d4d">NumRepr::ufast32_t</link> = typedef std::uint_fast32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00095">95</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a17e6e77298f11036961bd9d19fdc94a7"/><section>
    <title>ufast64_t</title>
<indexterm><primary>ufast64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ufast64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a17e6e77298f11036961bd9d19fdc94a7">NumRepr::ufast64_t</link> = typedef std::uint_fast64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00096">96</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a9b374efcf2955b0e2aeda6eb50941ebe"/><section>
    <title>ufast8_t</title>
<indexterm><primary>ufast8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ufast8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a9b374efcf2955b0e2aeda6eb50941ebe">NumRepr::ufast8_t</link> = typedef std::uint_fast8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00093">93</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3"/><section>
    <title>uint128_t</title>
<indexterm><primary>uint128_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uint128_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">NumRepr::uint128_t</link> = typedef __uint128_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00069">69</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aaf7419192485988c57254740ce16da9b"/><section>
    <title>uint16_t</title>
<indexterm><primary>uint16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uint16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1aaf7419192485988c57254740ce16da9b">NumRepr::uint16_t</link> = typedef std::uint16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00090">90</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a4f502071a1f4a9b34611a4b2c96b7a4a"/><section>
    <title>uint32_t</title>
<indexterm><primary>uint32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uint32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a4f502071a1f4a9b34611a4b2c96b7a4a">NumRepr::uint32_t</link> = typedef std::uint32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00091">91</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988"/><section>
    <title>uint64_t</title>
<indexterm><primary>uint64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uint64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">NumRepr::uint64_t</link> = typedef std::uint64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00092">92</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ac5b617f84b139672d691e24c196528e9"/><section>
    <title>uint8_t</title>
<indexterm><primary>uint8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uint8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ac5b617f84b139672d691e24c196528e9">NumRepr::uint8_t</link> = typedef std::uint8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00089">89</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1abe459c705a15614f17087479127dab9f"/><section>
    <title>uint_t</title>
<indexterm><primary>uint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">NumRepr::uint_t</link> = typedef unsigned int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00066">66</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ab66bf498bebe15bc960b29f844a1d069"/><section>
    <title>uintmax_t</title>
<indexterm><primary>uintmax_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uintmax_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ab66bf498bebe15bc960b29f844a1d069">NumRepr::uintmax_t</link> = typedef std::uintmax_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00105">105</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae2745e872cfa96ef2667e58a861f4964"/><section>
    <title>uleast16_t</title>
<indexterm><primary>uleast16_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uleast16_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ae2745e872cfa96ef2667e58a861f4964">NumRepr::uleast16_t</link> = typedef std::uint_least16_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00098">98</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aaf4382c6067f3c175866881db9ed85fd"/><section>
    <title>uleast32_t</title>
<indexterm><primary>uleast32_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uleast32_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1aaf4382c6067f3c175866881db9ed85fd">NumRepr::uleast32_t</link> = typedef std::uint_least32_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00099">99</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a5345c86c32fe5fbecb4673408fd9cdf4"/><section>
    <title>uleast64_t</title>
<indexterm><primary>uleast64_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uleast64_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a5345c86c32fe5fbecb4673408fd9cdf4">NumRepr::uleast64_t</link> = typedef std::uint_least64_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00100">100</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a7fe44611f6ab312ef9f2eb05d88a8423"/><section>
    <title>uleast8_t</title>
<indexterm><primary>uleast8_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>uleast8_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a7fe44611f6ab312ef9f2eb05d88a8423">NumRepr::uleast8_t</link> = typedef std::uint_least8_t</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00097">97</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76"/><section>
    <title>ulint_t</title>
<indexterm><primary>ulint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ulint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">NumRepr::ulint_t</link> = typedef unsigned long int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00067">67</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826"/><section>
    <title>ullint_t</title>
<indexterm><primary>ullint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ullint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">NumRepr::ullint_t</link> = typedef unsigned long long int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00068">68</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a"/><section>
    <title>usint_t</title>
<indexterm><primary>usint_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>usint_t</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">NumRepr::usint_t</link> = typedef unsigned short int</computeroutput></para><para>
Definición en la línea <link linkend="_basic__types_8hpp_source_1l00065">65</link> del archivo <link linkend="_basic__types_8hpp_source">basic_types.hpp</link>.</para>
</section>
</section>
<section>
<title>Documentación de las enumeraciones</title>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8"/><section>
    <title>binop_e</title>
<indexterm><primary>binop_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>binop_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">NumRepr::binop_e</link><computeroutput>[strong]</computeroutput></computeroutput></para><informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>add</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>add</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332"/>add</entry><entry></entry></row><row><entry><indexterm><primary>sub</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sub</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140"/>sub</entry><entry></entry></row><row><entry><indexterm><primary>mult</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>mult</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a0f9f2d92c2583ef952556e1f382d0974"/>mult</entry><entry></entry></row><row><entry><indexterm><primary>div</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>div</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a38696558dc98494c08d951c052900a2a"/>div</entry><entry></entry></row><row><entry><indexterm><primary>rem</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>rem</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8"/>rem</entry><entry></entry></row><row><entry><indexterm><primary>fediv</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fediv</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9"/>fediv</entry><entry></entry></row><row><entry><indexterm><primary>other</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>other</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf"/>other</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00032">32</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46"/><section>
    <title>dig_format_e</title>
<indexterm><primary>dig_format_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>dig_format_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46">NumRepr::dig_format_e</link> : unsigned char<computeroutput>[strong]</computeroutput></computeroutput></para><informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>BINnat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>BINnat</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a2a0e86af18f652069a49330979c008a6"/>BINnat</entry><entry></entry></row><row><entry><indexterm><primary>BCDnat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>BCDnat</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a11ed08d0994e9c768353601d9ea12741"/>BCDnat</entry><entry></entry></row><row><entry><indexterm><primary>BCDexc3</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>BCDexc3</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a1459599c082addf48ba502cbd852f111"/>BCDexc3</entry><entry></entry></row><row><entry><indexterm><primary>BCDaitk</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>BCDaitk</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a45848ac572e88361fe73ae60787a780b"/>BCDaitk</entry><entry></entry></row><row><entry><indexterm><primary>johnson_n</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>johnson_n</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a7a5896262db09a2cd411bf1cdbb56de5"/>johnson_n</entry><entry></entry></row><row><entry><indexterm><primary>biquinario</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>biquinario</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46ac9f595e6a66c4856892cd21e81c6a67d"/>biquinario</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00017">17</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634"/><section>
    <title>int_num_format_e</title>
<indexterm><primary>int_num_format_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int_num_format_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634">NumRepr::int_num_format_e</link> : unsigned char<computeroutput>[strong]</computeroutput></computeroutput></para><para>

<para>SOLO NATURAL. </para>
</para>
<informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>int_CB</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int_CB</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634afc47fff21fb7613d155583803fc2949e"/>int_CB</entry><entry></entry></row><row><entry><indexterm><primary>int_CBm1</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int_CBm1</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634a23db6f34a6b9b864ba35e2ae374c6aa3"/>int_CBm1</entry><entry></entry></row><row><entry><indexterm><primary>int_MS</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int_MS</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634abfdb019232f14bf7a7519785d14a1e75"/>int_MS</entry><entry></entry></row><row><entry><indexterm><primary>int_EXC_n</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>int_EXC_n</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1afdb90f6611f73a430a615010f896f634abc6d44509ed50fd5177f78049c59c446"/>int_EXC_n</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00025">25</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08"/><section>
    <title>nat_num_format_e</title>
<indexterm><primary>nat_num_format_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>nat_num_format_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08">NumRepr::nat_num_format_e</link> : bool<computeroutput>[strong]</computeroutput></computeroutput></para><para>

<para>YA INTRODUCIDO, PERO NO EXPLICITAMENTE NI COMPLETAMENTE. </para>
</para>
<informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>natural</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>natural</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a8f4ef05b543fb6157b374099100574b3"/>natural</entry><entry></entry></row><row><entry><indexterm><primary>exc_n</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>exc_n</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a28485a5b2bfa6868f834fe7f61b46f5f"/>exc_n</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00022">22</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7"/><section>
    <title>num_type_e</title>
<indexterm><primary>num_type_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>num_type_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7">NumRepr::num_type_e</link> : unsigned char<computeroutput>[strong]</computeroutput></computeroutput></para><para>

<para>A INTRODUCIR. </para>
</para>
<informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>natural</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>natural</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a8f4ef05b543fb6157b374099100574b3"/>natural</entry><entry></entry></row><row><entry><indexterm><primary>entero</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>entero</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a0e1ffddb2cb5f112904e70bc30478dc0"/>entero</entry><entry></entry></row><row><entry><indexterm><primary>racional</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>racional</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a6e4fb67cd72a9935a571e3cb1110005e"/>racional</entry><entry></entry></row><row><entry><indexterm><primary>real</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>real</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a4bca24304861acde5770fdbe3cc2503b"/>real</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00019">19</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dc"/><section>
    <title>rat_num_format_e</title>
<indexterm><primary>rat_num_format_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>rat_num_format_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dc">NumRepr::rat_num_format_e</link> : unsigned char<computeroutput>[strong]</computeroutput></computeroutput></para><para>

<para>EN C_B YA QUEDA EN MS. </para>
</para>
<informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>pair_num_den</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>pair_num_den</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcadbb955c289fb915e797daeaa9b736e9a"/>pair_num_den</entry><entry></entry></row><row><entry><indexterm><primary>fxd_pt</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fxd_pt</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dca12efa49e18cac717f7afe7fbc0db6ae2"/>fxd_pt</entry><entry></entry></row><row><entry><indexterm><primary>flt_pt</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>flt_pt</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcaa412206072b5acc1c9ca53f8fa8cc586"/>flt_pt</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00028">28</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8"/><section>
    <title>sign_e</title>
<indexterm><primary>sign_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sign_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">NumRepr::sign_e</link> : bool<computeroutput>[strong]</computeroutput></computeroutput></para><informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>vminus</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>vminus</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1"/>vminus</entry><entry></entry></row><row><entry><indexterm><primary>vplus</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>vplus</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b"/>vplus</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00015">15</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0"/><section>
    <title>sign_funct_e</title>
<indexterm><primary>sign_funct_e</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>sign_funct_e</secondary></indexterm>
<para><computeroutput>enum class <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0">NumRepr::sign_funct_e</link> : char<computeroutput>[strong]</computeroutput></computeroutput></para><para>

<para>INTRODUCIDO. </para>
</para>
<informaltable frame="all">
<title>Valores de enumeraciones</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>vzero</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>vzero</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859"/>vzero</entry><entry></entry></row><row><entry><indexterm><primary>vminus</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>vminus</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0a664d33ce0500d45dc2e44770723ba7d1"/>vminus</entry><entry></entry></row><row><entry><indexterm><primary>vplus</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>vplus</secondary></indexterm>
<anchor xml:id="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b"/>vplus</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definición en la línea <link linkend="_auxiliary__types_8hpp_source_1l00016">16</link> del archivo <link linkend="_auxiliary__types_8hpp_source">auxiliary_types.hpp</link>.</para>
</section>
</section>
<section>
<title>Documentación de las funciones</title>
<anchor xml:id="_namespace_num_repr_1a42cc99f9e1a6096b619df7c44eb7b33e"/><section>
    <title>aprox_coc_rem()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>aprox_coc_rem</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>aprox_coc_rem</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N &gt; 0)</computeroutput><para><computeroutput>constexpr std::array&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt;, 2 &gt; NumRepr::aprox_coc_rem (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rem, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; dsor)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>std::array&lt;SIG_UINT_T,2&gt;{}[0] == COC std::array&lt;SIG_UINT_T,2&gt;{}[1] == REM PRECONDICION DSOR != 0 Y DSOR != 1 FUNCION DE RECURSION PARA LA DIVISION SOBRECARGA DE LA ANTERIOR PARA LA RECURSION QUE NO SEA EL PRIMER CASO </para>

<para>CASO EXACTO</para>

<para>SIZE(DIVISOR) == 1 DIGITO !=0 !=1</para>

<para>SIZE(DIVISOR) &gt;= 2 2545/278 o mayores</para>

<para>CORRECTO EN COC</para>

<para>NOS HEMOS PASADO EN EL COC</para>

<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02044">2044</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a3e8c6b3fe06161bb9befa0f2cc00c57d"/><section>
    <title>aprox_coc_rem()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>aprox_coc_rem</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>aprox_coc_rem</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N &gt; 0)</computeroutput><para><computeroutput>constexpr std::array&lt; <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt;, 2 &gt; NumRepr::aprox_coc_rem (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rem, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; dsor, <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt; coc_calculado, <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt; rem_calculado)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>std::array&lt;SIG_UINT_T,2&gt;{}[0] == COC std::array&lt;SIG_UINT_T,2&gt;{}[1] == REM PRECONDICION DSOR != 0 Y DSOR != 1 </para>

<para>SUPONEMOS QUE REM TIENE TAMANO 1 o 2</para>

<para>DSOR YA REDUCIDO TIENE TAMANO 1</para>

<para>SIZE(DIVISOR) == 1 DIGITO !=0 !=1</para>

<para>CORRECTO EN COC</para>

<para>NOS HEMOS PASADO EN EL COC</para>

<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>

<para>24/7</para>

<para>SIZE(DIVISOR) &gt;= 2 2545/278 o mayores</para>

<para>CORRECTO EN COC</para>

<para>NOS HEMOS PASADO EN EL COC</para>

<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02123">2123</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7"/><section>
    <title>aprox_units_divB()</title>
<indexterm><primary>aprox_units_divB</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>aprox_units_divB</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;1)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::aprox_units_divB (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>&lt; PRECONDITIONS : ARG != 0 AND ARG != 1 &gt; </para>
</para>

<para>FUNCIONES DE IMPLEMENTACION DE LA DIVISION ENTRE DOS REGISTROS DE DIGITOS BEGIN POSTCONDICION RET[N-1] == (DIG_1() | DIG_0()) POSTCONDICION RET[N-1] == DIG_1() =&gt; RET[N-2,0] == REGD_N_0() HAY QUE VER SI ES POTENCIA DE B : is_any_B_pow </para>

<para>CASO EN QUE LA LONGITUD PERMANECE 999 ; 998 ; 997 ; 996 099,9 ; 099,8 ; 099,7 ; 099,6 100 ; 100 ; 100 ; 100</para>

<para>CPARG == Bm1 Bm1 Bm1 ... Bm1 Bm1 Bm1 d0&lt;B/2</para>

<para>CPARG == Bm1 dnm2 dnm3 ... d3 d2 d1 d0</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01981">1981</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a59c4987f35abcca7f49e248841dbdda7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a59c4987f35abcca7f49e248841dbdda7_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08"/><section>
    <title>aprox_units_divB_n()</title>
<indexterm><primary>aprox_units_divB_n</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>aprox_units_divB_n</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n &gt; 0) &amp;&amp; (n &lt; N) &amp;&amp; (N &gt; 1))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::aprox_units_divB_n (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>FUNCION DE RECURSION PARA LA DIVISION APROX_COC_REM APROXIMA REMAINDER A 2 DIGITOS Y DIVISOR A 1 DIGITO </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02021">2021</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_ae65c8d3561b59553ca3379f80f42af08_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_ae65c8d3561b59553ca3379f80f42af08_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a267abda3e78b6a487e39c4de923838bf"/><section>
    <title>Char2Sign()</title>
<indexterm><primary>Char2Sign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>Char2Sign</secondary></indexterm>
<para><computeroutput>constexpr <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link> NumRepr::Char2Sign (char ch)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_auxiliary__functions_8hpp_source_1l00009">9</link> del archivo <link linkend="_auxiliary__functions_8hpp_source">auxiliary_functions.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424"/><section>
    <title>concat()<computeroutput>[1/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; NumRepr::concat (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) </para>
</para>

<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T...DIG_PACK) VARIADIC PACK </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01595">1595</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a6f762ec285d399a1aba905239740d424_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a6f762ec285d399a1aba905239740d424_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a164d8860f3a0813504ee30c88c7bcab0"/><section>
    <title>concat()<computeroutput>[2/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; <?linebreak?>requires ((N&gt;0)&amp;&amp;(M&gt;0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+M &gt; NumRepr::concat (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01604">1604</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a164d8860f3a0813504ee30c88c7bcab0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1afb9644c35a4bfb14155cb38894940e10"/><section>
    <title>concat()<computeroutput>[3/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N &gt; 0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+1 &gt; NumRepr::concat (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; &amp; larg, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01620">1620</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_afb9644c35a4bfb14155cb38894940e10_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a90dce0ccc34796d52120a70c0abe2fb3"/><section>
    <title>concat()<computeroutput>[4/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 1 &gt; NumRepr::concat (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01649">1649</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a90dce0ccc34796d52120a70c0abe2fb3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a991ca8bb9c18feb0b5e776550b7ad703"/><section>
    <title>concat()<computeroutput>[5/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; <?linebreak?>requires (M &gt; 0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 1+M &gt; NumRepr::concat (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01635">1635</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a991ca8bb9c18feb0b5e776550b7ad703_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a064a18e22bc1be2b2a8b4bd9b8bfcafb"/><section>
    <title>concat()<computeroutput>[6/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 2 &gt; NumRepr::concat (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; larg, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UInt_t, B &gt; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01655">1655</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a064a18e22bc1be2b2a8b4bd9b8bfcafb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1af76d4c574256a8ae2913dd960c035d9a"/><section>
    <title>concat()<computeroutput>[7/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ... N_pack&gt; <?linebreak?>requires ((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+(...+(N_pack))&gt; NumRepr::concat (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; larg, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N_pack &gt; ... rarg_pack)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>STATIC BASE_N_T&lt;SIZE_T N,SIZE_T ... N_PACK&gt; CONCAT(BASE_N_T&lt;N&gt; LARG,BASE_N_T&lt;N_PACK&gt; ... RARG_PACK) VARIADIC </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01713">1713</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_af76d4c574256a8ae2913dd960c035d9a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a0706a8207d9326e70eb68286a809eac0"/><section>
    <title>concat()<computeroutput>[8/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, typename T , typename ... Ts&gt; <?linebreak?>requires (((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;(N&gt;0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N+1+(sizeof ...(Ts))&gt; NumRepr::concat (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, N &gt; larg, T dig, Ts ... dig_pack)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>STATIC BASE_N_T&lt;N+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T,DIG_T ... DIG_PACK) VARIADIC </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01682">1682</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a0706a8207d9326e70eb68286a809eac0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a4725158490aa07256f8ba8b9bb7179e4"/><section>
    <title>concat()<computeroutput>[9/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M, typename T , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;) &amp;&amp; (M&gt;0) )</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M+1+(sizeof ...(Ts))&gt; NumRepr::concat (T dig, Ts ... dig_pack, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, M &gt; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>STATIC BASE_N_T&lt;M+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK,BASE_N_T&lt;M&gt;) VARIADIC </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01699">1699</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a4725158490aa07256f8ba8b9bb7179e4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1ad235de59c6fb0e337d7d1974999b7c90"/><section>
    <title>concat()<computeroutput>[10/10]</computeroutput></title>
<indexterm><primary>concat</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>concat</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, typename T0 , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T0,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;UInt_t,B&gt;&gt;) )</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UInt_t, B, 1+(sizeof ...(Ts))&gt; NumRepr::concat (T0 dig0, Ts ... dig_pack)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK) VARIADIC </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01671">1671</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_ad235de59c6fb0e337d7d1974999b7c90_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5"/><section>
    <title>dig_max()</title>
<indexterm><primary>dig_max</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>dig_max</secondary></indexterm>
<computeroutput>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T, B&gt;())</computeroutput><para><computeroutput>consteval <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; NumRepr::dig_max ( )<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
</para>
<para>
Definición en la línea <link linkend="_dig__t_8hpp_source_1l01488">1488</link> del archivo <link linkend="_dig__t_8hpp_source">dig_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a46e6abf96f0de3f606c367f6217adfc5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a2abf3d71843768521c5b7b608137bcf4"/><section>
    <title>display_constr_copia_dig_t()</title>
<indexterm><primary>display_constr_copia_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_constr_copia_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_constr_copia_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00066">66</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a65c9d82e583a5b64b3b94c10ae46e80b"/><section>
    <title>display_constr_defecto_dig_t()</title>
<indexterm><primary>display_constr_defecto_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_constr_defecto_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_constr_defecto_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00051">51</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a50ed09e5a479347d085a2dff28299e9b"/><section>
    <title>display_constr_movimiento_dig_t()</title>
<indexterm><primary>display_constr_movimiento_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_constr_movimiento_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_constr_movimiento_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00087">87</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a27cd3b07e101240bdd85b9248f428585"/><section>
    <title>display_constr_SINT_dig_t()</title>
<indexterm><primary>display_constr_SINT_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_constr_SINT_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_constr_SINT_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00028">28</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a349a510b43badac76cd86e34dcbb8288"/><section>
    <title>display_constr_UINT_dig_t()</title>
<indexterm><primary>display_constr_UINT_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_constr_UINT_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_constr_UINT_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00010">10</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aef173813ec54d5567be3954915e1c675"/><section>
    <title>display_operator_add()</title>
<indexterm><primary>display_operator_add</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_add</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_add ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00770">770</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae5396bd9648b4535ea252118b48abed0"/><section>
    <title>display_operator_add_assign()</title>
<indexterm><primary>display_operator_add_assign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_add_assign</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_add_assign ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00309">309</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a06390888c1a5aa13471f73214555a6ab"/><section>
    <title>display_operator_add_assign_uint()</title>
<indexterm><primary>display_operator_add_assign_uint</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_add_assign_uint</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_add_assign_uint ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00348">348</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a69df9f333832a022d004ed63d0d01c15"/><section>
    <title>display_operator_add_int()</title>
<indexterm><primary>display_operator_add_int</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_add_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_add_int ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00812">812</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aba82289a413133952ad74254c7d86fde"/><section>
    <title>display_operator_assign_copia_dig_t()</title>
<indexterm><primary>display_operator_assign_copia_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_assign_copia_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_assign_copia_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00151">151</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a3e7eb3c76c069bbf89a13630f24df04c"/><section>
    <title>display_operator_assign_movimiento_dig_t()</title>
<indexterm><primary>display_operator_assign_movimiento_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_assign_movimiento_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_assign_movimiento_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00174">174</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ad70bf53a8ff03d0d407bd0b88aac90bb"/><section>
    <title>display_operator_assign_SINT_dig_t()</title>
<indexterm><primary>display_operator_assign_SINT_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_assign_SINT_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_assign_SINT_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00133">133</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1acd7f0f0f3ad4af5e2a8b26aaf92e59ce"/><section>
    <title>display_operator_assign_UINT_dig_t()</title>
<indexterm><primary>display_operator_assign_UINT_dig_t</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_assign_UINT_dig_t</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_assign_UINT_dig_t ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00113">113</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a0aa113da9c3c91f1af1c073958cc12a3"/><section>
    <title>display_operator_C_B()</title>
<indexterm><primary>display_operator_C_B</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_C_B</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_C_B ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01133">1133</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a0aa113da9c3c91f1af1c073958cc12a3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a2525ee5f113018fcb89a1c8a6a28aa31"/><section>
    <title>display_operator_C_Bm1()</title>
<indexterm><primary>display_operator_C_Bm1</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_C_Bm1</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_C_Bm1 ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01178">1178</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a2525ee5f113018fcb89a1c8a6a28aa31_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a4f2823e0e1c7c97f647e2c49d5386dd6"/><section>
    <title>display_operator_ediv_assign()</title>
<indexterm><primary>display_operator_ediv_assign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_ediv_assign</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_ediv_assign ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00552">552</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a40d1a413dfb00f54f7e5e57ba120e1b9"/><section>
    <title>display_operator_ediv_assign_uint()</title>
<indexterm><primary>display_operator_ediv_assign_uint</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_ediv_assign_uint</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_ediv_assign_uint ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00603">603</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a30555c61063d5a6531aad5685221fd1e"/><section>
    <title>display_operator_edivision()</title>
<indexterm><primary>display_operator_edivision</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_edivision</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_edivision ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01019">1019</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ada3dbd81393ca220f533ea9c7b59326c"/><section>
    <title>display_operator_edivision_int()</title>
<indexterm><primary>display_operator_edivision_int</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_edivision_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_edivision_int ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01080">1080</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ab5cfacf83cb5ad8c3ea473eb5f07bed8"/><section>
    <title>display_operator_erem_assign()</title>
<indexterm><primary>display_operator_erem_assign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_erem_assign</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_erem_assign ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00661">661</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae8f3b3b914ffe3ce9448c8a384a77fe4"/><section>
    <title>display_operator_erem_assign_uint()</title>
<indexterm><primary>display_operator_erem_assign_uint</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_erem_assign_uint</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_erem_assign_uint ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00713">713</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1adf2a3579520b2a41803827f71117b59c"/><section>
    <title>display_operator_mult_assign()</title>
<indexterm><primary>display_operator_mult_assign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_mult_assign</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_mult_assign ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00466">466</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a1bfea978c2c4f02951d0aaba99c33277"/><section>
    <title>display_operator_mult_assign_uint()</title>
<indexterm><primary>display_operator_mult_assign_uint</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_mult_assign_uint</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_mult_assign_uint ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00509">509</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a8060f5d58bba169daf225959a72bd68a"/><section>
    <title>display_operator_multiply()</title>
<indexterm><primary>display_operator_multiply</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_multiply</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_multiply ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00936">936</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aa553f82b42704b3381cd71b67855b1fe"/><section>
    <title>display_operator_multiply_int()</title>
<indexterm><primary>display_operator_multiply_int</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_multiply_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_multiply_int ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00978">978</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ad1dcf3e9f99dd7325a7ac774a3908389"/><section>
    <title>display_operator_postdecrement()</title>
<indexterm><primary>display_operator_postdecrement</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_postdecrement</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_postdecrement ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00281">281</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aa5d4ce0684eb1ed7d51e2bd7351b9f4c"/><section>
    <title>display_operator_postincrement()</title>
<indexterm><primary>display_operator_postincrement</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_postincrement</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_postincrement ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00225">225</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a17e46977769b816d0006e7b22c0b3a86"/><section>
    <title>display_operator_predecrement()</title>
<indexterm><primary>display_operator_predecrement</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_predecrement</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_predecrement ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00253">253</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a6b984dcc8ef024c9c42fcfbc897bb060"/><section>
    <title>display_operator_preincrement()</title>
<indexterm><primary>display_operator_preincrement</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_preincrement</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_preincrement ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00197">197</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a0e28a120b130962ea0116df58c03c6f4"/><section>
    <title>display_operator_substract()</title>
<indexterm><primary>display_operator_substract</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_substract</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_substract ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00853">853</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a02cc28145662d4c0eb86cc8bba1b2890"/><section>
    <title>display_operator_substract_assign()</title>
<indexterm><primary>display_operator_substract_assign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_substract_assign</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_substract_assign ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00380">380</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aff607bfd703ccc92f0394a2d53e5a978"/><section>
    <title>display_operator_substract_assign_uint()</title>
<indexterm><primary>display_operator_substract_assign_uint</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_substract_assign_uint</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_substract_assign_uint ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00423">423</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1acabc08f11c12fb6d9f9e790e9030f3a4"/><section>
    <title>display_operator_substract_int()</title>
<indexterm><primary>display_operator_substract_int</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_operator_substract_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_operator_substract_int ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l00895">895</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aec8203e0be75e913ece973211c4b1386"/><section>
    <title>display_prop_C_B_eq_inv_C_B()</title>
<indexterm><primary>display_prop_C_B_eq_inv_C_B</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_prop_C_B_eq_inv_C_B</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_prop_C_B_eq_inv_C_B ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01223">1223</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_aec8203e0be75e913ece973211c4b1386_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae0fc1d1a1935c51de9fa9490f212c168"/><section>
    <title>display_prop_C_B_minus_1_eq_C_Bm1()</title>
<indexterm><primary>display_prop_C_B_minus_1_eq_C_Bm1</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_prop_C_B_minus_1_eq_C_Bm1</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_prop_C_B_minus_1_eq_C_Bm1 ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01291">1291</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_ae0fc1d1a1935c51de9fa9490f212c168_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1adb8c5e5fc5db353e6db6327ac4c62742"/><section>
    <title>display_prop_C_Bm1_eq_inv_C_Bm1()</title>
<indexterm><primary>display_prop_C_Bm1_eq_inv_C_Bm1</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_prop_C_Bm1_eq_inv_C_Bm1</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_prop_C_Bm1_eq_inv_C_Bm1 ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01257">1257</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_adb8c5e5fc5db353e6db6327ac4c62742_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a49752c01c024e2da6e67837bde614d76"/><section>
    <title>display_unary_operator_minus()</title>
<indexterm><primary>display_unary_operator_minus</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_unary_operator_minus</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_unary_operator_minus ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01327">1327</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1ad2ec78854da2abb21348af8322a61571"/><section>
    <title>display_unary_operator_neg()</title>
<indexterm><primary>display_unary_operator_neg</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>display_unary_operator_neg</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,B&gt;())</computeroutput><para><computeroutput>void NumRepr::display_unary_operator_neg ( )</computeroutput></para><para>
Definición en la línea <link linkend="_test__dig__t_8hpp_source_1l01372">1372</link> del archivo <link linkend="_test__dig__t_8hpp_source">test_dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a1924720464e58ae5372de9b39a45d496"/><section>
    <title>fediv()</title>
<indexterm><primary>fediv</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>fediv</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; <?linebreak?>requires (N &gt; 0)&amp;&amp;(M &gt; 0)</computeroutput><para><computeroutput>constexpr std::array&lt; <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, std::max(N, M)&gt;, 2 &gt; NumRepr::fediv (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, M &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>END. </para>
</para>

<para>FUNCIONES DE IMPLEMENTACION DE LA DIVISION ENTRE DOS REGISTROS DE DIGITOS </para>

<para>MOST SIGNIFICANT DIGIT DEL DIVISOR [DEL NUMERO NO DEL TIPO]</para>

<para>MOST SIGNIFICANT DIGIT DEL DIVIDENDO [DEL NUMERO NO DEL TIPO]</para>

<para>else if (rem &gt;= dsor*dig_B()) { este caso no se deberia de dar nunca }</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02205">2205</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a1924720464e58ae5372de9b39a45d496_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a1924720464e58ae5372de9b39a45d496_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a6fdae534a76a017d02140a70aa7dc8a3"/><section>
    <title>get_digit_loop_token()</title>
<indexterm><primary>get_digit_loop_token</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>get_digit_loop_token</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c T, T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>bool NumRepr::get_digit_loop_token (std::istream &amp; is, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; T, B, L &gt; &amp; value)<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02375">2375</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad"/><section>
    <title>get_digit_token()</title>
<indexterm><primary>get_digit_token</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>get_digit_token</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool NumRepr::get_digit_token (std::istream &amp; is, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; &amp; dig_value)</computeroutput></para><para>

<para>FUNCION QUE CONSIGUE EL TOKEN DIGITO. </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02298">2298</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a85361eaf407fae0ec70f013c1eec25ad_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a85361eaf407fae0ec70f013c1eec25ad_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a4a43d171097231b9c153662a4d96d170"/><section>
    <title>get_radix_token()</title>
<indexterm><primary>get_radix_token</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>get_radix_token</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c T, T B&gt; </computeroutput><para><computeroutput>bool NumRepr::get_radix_token (std::istream &amp; is)</computeroutput></para><para>

<para>FUNCION QUE CONSIGUE EL TOKEN BASE. </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02370">2370</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a4a43d171097231b9c153662a4d96d170_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a4a43d171097231b9c153662a4d96d170_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1ae6e314ed88507b46a8155893a823049c"/><section>
    <title>Int2Sign()</title>
<indexterm><primary>Int2Sign</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>Int2Sign</secondary></indexterm>
<computeroutput>template&lt;type_traits::arith_integral_c IntT&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link> NumRepr::Int2Sign (IntT nu)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_auxiliary__functions_8hpp_source_1l00019">19</link> del archivo <link linkend="_auxiliary__functions_8hpp_source">auxiliary_functions.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a396b4de02e34550acddc2664931975d8"/><section>
    <title>Int2SignFunct()</title>
<indexterm><primary>Int2SignFunct</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>Int2SignFunct</secondary></indexterm>
<computeroutput>template&lt;type_traits::arith_integral_c IntT&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0">sign_funct_e</link> NumRepr::Int2SignFunct (IntT nu)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_auxiliary__functions_8hpp_source_1l00029">29</link> del archivo <link linkend="_auxiliary__functions_8hpp_source">auxiliary_functions.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a89c726416380167073c3a39632cf2fa9"/><section>
    <title>is_nat_reg_digs_type_id()</title>
<indexterm><primary>is_nat_reg_digs_type_id</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>is_nat_reg_digs_type_id</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> LE&gt; </computeroutput><para><computeroutput>bool NumRepr::is_nat_reg_digs_type_id (std::string in)</computeroutput></para><para>

<para>ESPECIALIZACIONES PARA NAT_REG_DIGS. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01748">1748</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254"/><section>
    <title>m_incr()</title>
<indexterm><primary>m_incr</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>m_incr</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::m_incr (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>TODO 31/12/2022. </para>
</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01865">1865</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a47075bda02da4f0bcb6a4d3fd0f5b254_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a47075bda02da4f0bcb6a4d3fd0f5b254_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb"/><section>
    <title>m_mer_B()</title>
<indexterm><primary>m_mer_B</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>m_mer_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; NumRepr::m_mer_B (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01807">1807</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a24e1622d28f1fc5b86dac826d719cccb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a24e1622d28f1fc5b86dac826d719cccb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad"/><section>
    <title>m_rem_B()</title>
<indexterm><primary>m_rem_B</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>m_rem_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; NumRepr::m_rem_B (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01788">1788</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a76d56b1ce8fdf8fe9f2dad696d0793ad_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a76d56b1ce8fdf8fe9f2dad696d0793ad_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3"/><section>
    <title>m_sum()</title>
<indexterm><primary>m_sum</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>m_sum</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; NumRepr::m_sum (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01955">1955</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a259867ff7627eb58b940d354ed1f87e3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a259867ff7627eb58b940d354ed1f87e3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0"/><section>
    <title>m_sum_digs_carryin0()</title>
<indexterm><primary>m_sum_digs_carryin0</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>m_sum_digs_carryin0</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; NumRepr::m_sum_digs_carryin0 (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; &amp; left, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; right)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01934">1934</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_ad08658a7e95e0914597309c1243ea7f0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_ad08658a7e95e0914597309c1243ea7f0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6"/><section>
    <title>m_sum_digs_carryin1()</title>
<indexterm><primary>m_sum_digs_carryin1</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>m_sum_digs_carryin1</secondary></indexterm>
<computeroutput>template&lt;typename UINT_T , UINT_T B&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; NumRepr::m_sum_digs_carryin1 (<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; &amp; left, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, B &gt; right)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01906">1906</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a7a96dff18dd75c2309445fcf46a84be6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a7a96dff18dd75c2309445fcf46a84be6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1aeced1290d3d28bee5b4a0e22840a72db"/><section>
    <title>max_base_B_en_Int_T()</title>
<indexterm><primary>max_base_B_en_Int_T</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>max_base_B_en_Int_T</secondary></indexterm>
<computeroutput>template&lt;typename Int_T , ullint B&gt; </computeroutput><para><computeroutput>constexpr ullint NumRepr::max_base_B_en_Int_T ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_base__num__t_8hpp_source_1l00127">127</link> del archivo <link linkend="_base__num__t_8hpp_source">base_num_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a791ee564df192b445483d0088d163710"/><section>
    <title>mer_B()</title>
<indexterm><primary>mer_B</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>mer_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::mer_B (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01797">1797</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a791ee564df192b445483d0088d163710_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a791ee564df192b445483d0088d163710_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1af38005a1c9fb23a68d4651abc72ddf25"/><section>
    <title>Nat2SignFunct()</title>
<indexterm><primary>Nat2SignFunct</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>Nat2SignFunct</secondary></indexterm>
<computeroutput>template&lt;type_traits::arith_natural_c NatIntT&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0">sign_funct_e</link> NumRepr::Nat2SignFunct (NatIntT nu)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_auxiliary__functions_8hpp_source_1l00041">41</link> del archivo <link linkend="_auxiliary__functions_8hpp_source">auxiliary_functions.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a0c4ce13b175150d7a33d5c7b515f9dfa"/><section>
    <title>num_digs_max_base_B_en_Int_T()</title>
<indexterm><primary>num_digs_max_base_B_en_Int_T</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>num_digs_max_base_B_en_Int_T</secondary></indexterm>
<computeroutput>template&lt;typename Int_T , ullint B&gt; </computeroutput><para><computeroutput>constexpr ullint NumRepr::num_digs_max_base_B_en_Int_T ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_base__num__t_8hpp_source_1l00091">91</link> del archivo <link linkend="_base__num__t_8hpp_source">base_num_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a342a2a8c42d37ee5900c73815b5f289b"/><section>
    <title>operator&amp;()</title>
<indexterm><primary>operator&amp;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::operator&amp; (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01854">1854</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a0a2d2cfc3bfc462709ba6cc17b5cd0d4"/><section>
    <title>operator&amp;=()</title>
<indexterm><primary>operator&amp;=</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&amp;=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; NumRepr::operator&amp;= (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01841">1841</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a3e02d589f6de47a7861f7d11e76d4d73"/><section>
    <title>operator&lt;&lt;()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::operator&lt;&lt; (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01718">1718</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aee52933f615df4b729ccc06310036b16"/><section>
    <title>operator&lt;&lt;()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::uint_type_for_radix_c Int_Type, Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Long&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;())</computeroutput><para><computeroutput>std::ostream &amp; NumRepr::operator&lt;&lt; (std::ostream &amp; os, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; Int_Type, Base, Long &gt; &amp; arg)</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l02033">2033</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aa425b3bf3dd35e9867de22ac45a46616"/><section>
    <title>operator&lt;&lt;()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c Int_Type, Int_Type Base, std::size_t Long&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;())</computeroutput><para><computeroutput>std::ostream &amp; NumRepr::operator&lt;&lt; (std::ostream &amp; os, const pfx_rat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp; arg)</computeroutput></para><para>
Definición en la línea <link linkend="_nat__rat__fixed__reg__t_8hpp_source_1l02429">2429</link> del archivo <link linkend="_nat__rat__fixed__reg__t_8hpp_source">nat_rat_fixed_reg_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aef762c1b9785e93fffd3336262a8e096"/><section>
    <title>operator&lt;&lt;()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;typename Int_Type , Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Long&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;())</computeroutput><para><computeroutput>std::ostream &amp; NumRepr::operator&lt;&lt; (std::ostream &amp; os, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; Int_Type, Base, Long &gt; &amp; arg)</computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02711">2711</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8"/><section>
    <title>operator&lt;&lt;()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T Base&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,Base&gt;())</computeroutput><para><computeroutput>std::ostream &amp; NumRepr::operator&lt;&lt; (std::ostream &amp; os, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, Base &gt; arg)</computeroutput></para><para>
Definición en la línea <link linkend="_dig__t_8hpp_source_1l01608">1608</link> del archivo <link linkend="_dig__t_8hpp_source">dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aa578c0c4c9f69c8a6949ae841ab20a14"/><section>
    <title>operator&lt;&lt;=()</title>
<indexterm><primary>operator&lt;&lt;=</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&lt;&lt;=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; NumRepr::operator&lt;&lt;= (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01736">1736</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a02cf5374fb604e0ac92479795f57be45"/><section>
    <title>operator&gt;&gt;()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::operator&gt;&gt; (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01768">1768</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac"/><section>
    <title>operator&gt;&gt;()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T Base&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T,Base&gt;())</computeroutput><para><computeroutput>std::istream &amp; NumRepr::operator&gt;&gt; (std::istream &amp; is, <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt; UINT_T, Base &gt; &amp; arg)</computeroutput></para><para>
Definición en la línea <link linkend="_dig__t_8hpp_source_1l01508">1508</link> del archivo <link linkend="_dig__t_8hpp_source">dig_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1abc220e2b8550522f9cb96ecd95d172bb"/><section>
    <title>operator&gt;&gt;()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::uint_type_for_radix_c Int_Type, Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Length&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))</computeroutput><para><computeroutput>std::istream &amp; NumRepr::operator&gt;&gt; (std::istream &amp; is, <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; Int_Type, Base, Length &gt; &amp; arg)</computeroutput></para>
<para>TODO ESTA VERSION + VERSION CON TRATAMIENTO DE ERRORES EN RUNTIME </para>

<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>

<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>

<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>

<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>

<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>

<para>ESTADO ACTUAL</para>

<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>

<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>

<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01781">1781</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_abc220e2b8550522f9cb96ecd95d172bb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1ab9f98f4d0eefbee0c13e52061d4a5c2d"/><section>
    <title>operator&gt;&gt;()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::allowable_base_type_c Int_Type, Int_Type Base, std::size_t Length&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))</computeroutput><para><computeroutput>std::istream &amp; NumRepr::operator&gt;&gt; (std::istream &amp; is, pfx_rat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp; arg)</computeroutput></para>
<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>

<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>

<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>

<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>

<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>

<para>ESTADO ACTUAL</para>

<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>

<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>

<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
<para>
Definición en la línea <link linkend="_nat__rat__fixed__reg__t_8hpp_source_1l02177">2177</link> del archivo <link linkend="_nat__rat__fixed__reg__t_8hpp_source">nat_rat_fixed_reg_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a8f0cf6e39391a7fdc66a01db667b98de"/><section>
    <title>operator&gt;&gt;()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;typename Int_Type , Int_Type Base, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> Length&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))</computeroutput><para><computeroutput>std::istream &amp; NumRepr::operator&gt;&gt; (std::istream &amp; is, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; Int_Type, Base, Length &gt; &amp; arg)</computeroutput></para><para>

<para>SOBRECARGA DE ISTREAM Y OSTREAM CON LOS OPERADORES DE DESPLAZAMEINTO. </para>
</para>

<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>

<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>

<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>

<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>

<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>

<para>ESTADO ACTUAL</para>

<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>

<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>

<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02444">2444</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a9da1c60e9a0710e6940735e5aa6471e2"/><section>
    <title>operator&gt;&gt;=()</title>
<indexterm><primary>operator&gt;&gt;=</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator&gt;&gt;=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; NumRepr::operator&gt;&gt;= (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01752">1752</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a688d5f9678ad6dca21557cc629c46c8e"/><section>
    <title>operator|()</title>
<indexterm><primary>operator|</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator|</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::operator| (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01829">1829</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1af300f03bc135c81afa3965c905feda49"/><section>
    <title>operator|=()</title>
<indexterm><primary>operator|=</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>operator|=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; NumRepr::operator|= (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01816">1816</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a518d83628ca3a414ac5e12e47bd7bd5b"/><section>
    <title>pot_max_base_B_en_Int_T()</title>
<indexterm><primary>pot_max_base_B_en_Int_T</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>pot_max_base_B_en_Int_T</secondary></indexterm>
<computeroutput>template&lt;typename Int_T , usint B&gt; </computeroutput><para><computeroutput>constexpr ullint NumRepr::pot_max_base_B_en_Int_T ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_base__num__t_8hpp_source_1l00077">77</link> del archivo <link linkend="_base__num__t_8hpp_source">base_num_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a1cdc1a9d45497ce154566f6f15abdc32"/><section>
    <title>read()</title>
<indexterm><primary>read</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>read</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c T, T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>bool NumRepr::read (std::istream &amp; is, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; T, B, L &gt; &amp; value)<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
</para>

<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
<para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l02401">2401</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee"/><section>
    <title>rem_B()</title>
<indexterm><primary>rem_B</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>rem_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires ((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; NumRepr::rem_B (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt; &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_reg__digs__t_8hpp_source_1l01778">1778</link> del archivo <link linkend="_reg__digs__t_8hpp_source">reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_aabd0c98823a42f27c17a1392d05111ee_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_aabd0c98823a42f27c17a1392d05111ee_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_namespace_num_repr_1a0c896afd9a215a562fdc0280a545cf49"/><section>
    <title>size_of_nat_reg_digs_type_string_idT()</title>
<indexterm><primary>size_of_nat_reg_digs_type_string_idT</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>size_of_nat_reg_digs_type_string_idT</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> LE&gt; </computeroutput><para><computeroutput><link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> NumRepr::size_of_nat_reg_digs_type_string_idT ( )</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01770">1770</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a9bda15db6ff37b4d5247ca097156679c"/><section>
    <title>to_nat_reg_digs_type_string()</title>
<indexterm><primary>to_nat_reg_digs_type_string</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>to_nat_reg_digs_type_string</secondary></indexterm>
<computeroutput>template&lt;typename UInt_t , UInt_t B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> LE&gt; </computeroutput><para><computeroutput>std::string NumRepr::to_nat_reg_digs_type_string ( )</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01766">1766</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623"/><section>
    <title>ui_1()</title>
<indexterm><primary>ui_1</primary><secondary>NumRepr</secondary></indexterm>
<indexterm><primary>NumRepr</primary><secondary>ui_1</secondary></indexterm>
<computeroutput>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T B&gt; <?linebreak?>requires (<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>&lt;UINT_T, B&gt;())</computeroutput><para><computeroutput>consteval UINT_T NumRepr::ui_1 ( )<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_dig__t_8hpp_source_1l01484">1484</link> del archivo <link linkend="_dig__t_8hpp_source">dig_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_num_repr_a2546ea7fb1f063e87dbb450cfe5e3623_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
