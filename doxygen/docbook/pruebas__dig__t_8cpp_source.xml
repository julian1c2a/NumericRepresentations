<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_pruebas__dig__t_8cpp_source" xml:lang="es">
<title>pruebas_dig_t.cpp</title>
<indexterm><primary>pruebas_dig_t.cpp</primary></indexterm>
Ir a la documentaci√≥n de este archivo.<programlisting linenumbering="unnumbered"><anchor xml:id="_pruebas__dig__t_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_utilities_8hpp">utilities.hpp</link>&quot;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_nat__reg__digs__t_8hpp">nat_reg_digs_t.hpp</link>&quot;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;typeinfo&gt;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00004"/>00004 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00005"/>00005 <emphasis role="comment">//template&lt;NumRepr::uint128_t&#32;B,NumRepr::uint128_t&#32;L&gt;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00006"/>00006 <emphasis role="comment">//consteval&#32;inline</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00007"/>00007 <emphasis role="comment">//NumRepr::uint128_t&#32;Base_pow_to_Size()&#32;noexcept&#32;{</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00008"/>00008 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;constexpr&#32;(L==0)</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00009"/>00009 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;static_cast&lt;NumRepr::uint128_t&gt;(1);</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00010"/>00010 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;constexpr&#32;(L==1)</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00011"/>00011 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;static_cast&lt;NumRepr::uint128_t&gt;(B);</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00012"/>00012 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;constexpr&#32;(L==2)</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00013"/>00013 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;static_cast&lt;NumRepr::uint128_t&gt;(B)*static_cast&lt;NumRepr::uint128_t&gt;(B);</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00014"/>00014 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00015"/>00015 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;(static_cast&lt;NumRepr::uint128_t&gt;(B)*Base_pow_to_Size&lt;B,L-1&gt;());</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00016"/>00016 <emphasis role="comment">//}</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00017"/>00017 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00018"/>00018 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;L&gt;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00019"/>00019 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00020"/>00020 <link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">NumRepr::uint128_t</link>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00021"/><link linkend="_pruebas__dig__t_8cpp_1a6061ebc60c8900e8bd20afe55a04eaa9">00021</link> <link linkend="_pruebas__dig__t_8cpp_1a6061ebc60c8900e8bd20afe55a04eaa9">conversion_to_int</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">NumRepr::register_of_digits_t&lt;B,L&gt;</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>NR&#32;=&#32;<link linkend="_namespace_num_repr">NumRepr</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>us&#32;=&#32;<link linkend="_namespaceutilities_1_1special">utilities::special</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;us::conversion_to_int&lt;B,L,NR::register_of_digits_t&lt;B,L&gt;&gt;(arg);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00025"/>00025 }
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00026"/>00026 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00027"/><link linkend="_pruebas__dig__t_8cpp_1a13ad836519e767648b12d2910466d79a">00027</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="_pruebas__dig__t_8cpp_1a13ad836519e767648b12d2910466d79a">trisums_t</link>&#32;=&#32;std::tuple&lt;std::int64_t,std::int64_t,std::int64_t&gt;;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00028"/>00028 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00029"/><link linkend="_pruebas__dig__t_8cpp_1ade7291f8ff5bdbc6caa1c4b79da8004c">00029</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="_pruebas__dig__t_8cpp_1ade7291f8ff5bdbc6caa1c4b79da8004c">result_test_binop_con_asignacion</link>&#32;=&#32;std::vector&lt;trisums_t&gt;;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00030"/>00030 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00031"/><link linkend="_pruebas__dig__t_8cpp_1a9c9843b98bf8f42ee03c7d9a5f051d44">00031</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="_pruebas__dig__t_8cpp_1a9c9843b98bf8f42ee03c7d9a5f051d44">retorno_de_test_t</link>&#32;=&#32;std::tuple&lt;&#32;&#32;&#32;bool,
<anchor xml:id="_pruebas__dig__t_8cpp_source_1llink linkend="_pruebas__dig__t_8cpp_1ade7291f8ff5bdbc6caa1c4b79da8004c">result_test_binop_con_asignacion</link>,
<anchor xml:id="_pruebas__dig__t_8cpp_source_1llink linkend="_pruebas__dig__t_8cpp_1ade7291f8ff5bdbc6caa1c4b79da8004c">result_test_binop_con_asignacion</link>&gt;;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00034"/>00034 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00035"/>00035 <emphasis role="keyword">template</emphasis>&lt;NumRepr::ull<emphasis role="keywordtype">int</emphasis>_t&#32;Base,NumRepr::ull<emphasis role="keywordtype">int</emphasis>_t&#32;Longitud&gt;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00036"/><link linkend="_pruebas__dig__t_8cpp_1ab0db6da550ea974c5b97a28313d89163">00036</link> <link linkend="_pruebas__dig__t_8cpp_1a9c9843b98bf8f42ee03c7d9a5f051d44">retorno_de_test_t</link>&#32;<link linkend="_pruebas__dig__t_8cpp_1ab0db6da550ea974c5b97a28313d89163">test_suma_con_asignacion</link>()&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>rd_t&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">NumRepr::register_of_digits_t&lt;Base,Longitud&gt;</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>d_t&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">NumRepr::digit_t&lt;Base&gt;</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>us&#32;=&#32;<link linkend="_namespaceutilities_1_1special">utilities::special</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>NR&#32;=&#32;<link linkend="_namespace_num_repr">NumRepr</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;todo_correcto&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00042"/>00042 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;NR::uint128_t&#32;B2L{us::Base_pow_to_Size&lt;Base,Longitud&gt;()};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00044"/>00044 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;trisums_t&gt;&#32;correctos{};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;correctos.reserve(B2L*B2L);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;trisums_t&gt;&#32;errores{};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errores.reserve(B2L*B2L);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00049"/>00049 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;rd_x{};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rd_x.fill(d_t{0});
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;rd_y{};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rd_y.fill(d_t{0});
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::uint64_t&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;B2L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::uint64_t&#32;iy{0}&#32;;&#32;iy&#32;&lt;&#32;B2L&#32;;&#32;++iy)&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;rd_z{rd_x};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NR::m_sum(rd_z,rd_y);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::uint64_t&#32;iz&#32;=&#32;conversion_to_int&lt;Base,Longitud&gt;(rd_z);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::uint64_t&#32;iw&#32;=&#32;(ix+iy)%B2L;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;bien&#32;{iz==iw};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_pruebas__dig__t_8cpp_1a13ad836519e767648b12d2910466d79a">trisums_t</link>&#32;trio{ix,iy,iz};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!bien)&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;rd_w{rd_x};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;NR::m_sum(rd_w,rd_y);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errores.push_back(trio);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;correctos.push_back(trio);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;todo_correcto&#32;=&#32;todo_correcto&#32;&amp;&amp;&#32;bien;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_incr(rd_y);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_incr(rd_x);
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_pruebas__dig__t_8cpp_1a9c9843b98bf8f42ee03c7d9a5f051d44">retorno_de_test_t</link>{todo_correcto,correctos,errores};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00075"/>00075 }
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00076"/>00076 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00077"/>00077 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00078"/><link linkend="_pruebas__dig__t_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">00078</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_pruebas__dig__t_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4">main</link>()&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespace_num_repr">NumRepr</link>;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00082"/>00082 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;constexpr&#32;ullint_t&#32;B{10u};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00083"/>00083 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;//constexpr&#32;ullint_t&#32;Bm1{B-1};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00084"/>00084 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;constexpr&#32;size_t&#32;L{5};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00085"/>00085 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;using&#32;rd_t&#32;=&#32;register_of_digits_t&lt;B,L&gt;;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//using&#32;d_t&#32;=&#32;digit_t&lt;B&gt;;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00089"/>00089 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;opndo{1,3,5,2,6};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00090"/>00090 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00091"/>00091 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo.index_of_MSDig()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00092"/>00092 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;opndo&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00093"/>00093 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00094"/>00094 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo.index_of_MSDig()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00095"/>00095 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;opndo&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00096"/>00096 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00097"/>00097 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo.index_of_MSDig()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00098"/>00098 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;opndo&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00099"/>00099 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00100"/>00100 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo.index_of_MSDig()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00101"/>00101 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;opndo&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00102"/>00102 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00103"/>00103 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo.index_of_MSDig()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00104"/>00104 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;opndo&#32;&gt;&gt;=&#32;1;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00105"/>00105 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00106"/>00106 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;opndo.index_of_MSDig()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00107"/>00107 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;opndo&#32;=&#32;rd_t{6,6,7,9,5};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00108"/>00108 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;aprox&#32;to&#32;units&#32;of&#32;&quot;&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;(opndo=aprox_units_divB(opndo))&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00109"/>00109 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;aprox&#32;to&#32;units&#32;of&#32;&quot;&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;(opndo=aprox_units_divB(opndo))&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00110"/>00110 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;aprox&#32;to&#32;units&#32;of&#32;&quot;&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;(opndo=aprox_units_divB(opndo))&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00111"/>00111 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;aprox&#32;to&#32;units&#32;of&#32;&quot;&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;(opndo=aprox_units_divB(opndo))&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00112"/>00112 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;aprox&#32;to&#32;units&#32;of&#32;&quot;&#32;&lt;&lt;&#32;opndo&#32;&lt;&lt;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;(opndo=aprox_units_divB(opndo))&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00113"/>00113 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;lopndo{9,9,8,2,5};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00114"/>00114 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;rd_t&#32;ropndo{0,0,5,8,7};</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00115"/>00115 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;&#32;aprox&#32;of&#32;&quot;&#32;&lt;&lt;&#32;lopndo&#32;&#32;&lt;&lt;&#32;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;aprox_units_divB_n&lt;uchint_t,10,5,4&gt;(lopndo)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00116"/>00116 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;&#32;aprox&#32;of&#32;&quot;&#32;&lt;&lt;&#32;lopndo&#32;&#32;&lt;&lt;&#32;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;aprox_units_divB_n&lt;uchint_t,10,5,3&gt;(lopndo)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00117"/>00117 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;&#32;aprox&#32;of&#32;&quot;&#32;&lt;&lt;&#32;lopndo&#32;&#32;&lt;&lt;&#32;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;aprox_units_divB_n&lt;uchint_t,10,5,2&gt;(lopndo)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00118"/>00118 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;&#32;aprox&#32;of&#32;&quot;&#32;&lt;&lt;&#32;lopndo&#32;&#32;&lt;&lt;&#32;&#32;&quot;&#32;is&#32;&quot;&#32;&lt;&lt;&#32;aprox_units_divB_n&lt;uchint_t,10,5,1&gt;(lopndo)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00119"/>00119 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;B2{2u};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;L2{10};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::boolalpha;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;resultado{test_suma_con_asignacion&lt;B2,L2&gt;()};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;todo_correcto{std::get&lt;0&gt;(resultado)};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;correctos{std::get&lt;1&gt;(resultado)};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;errores{std::get&lt;2&gt;(resultado)};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;TEST&#32;para&#32;la&#32;suma&#32;y&#32;asignacion&#32;sobre&#32;el&#32;tipo&#32;register_of_digits_t&lt;&quot;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;int(B2)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&quot;</emphasis>&#32;&lt;&lt;&#32;int(L2)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;vector&#32;\&quot;correctos\&quot;&#32;tiene&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;correctos.size()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;elementos&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;vector&#32;\&quot;errores&#32;&#32;\&quot;&#32;tiene&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;errores.size()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;elementos&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Todo&#32;ha&#32;ido&#32;bien&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;todo_correcto&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;B1{10u};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;L1{3};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::boolalpha;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;resultado{test_suma_con_asignacion&lt;B1,L1&gt;()};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;todo_correcto{std::get&lt;0&gt;(resultado)};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;correctos{std::get&lt;1&gt;(resultado)};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;errores{std::get&lt;2&gt;(resultado)};
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;TEST&#32;para&#32;la&#32;suma&#32;y&#32;asignacion&#32;sobre&#32;el&#32;tipo&#32;register_of_digits_t&lt;&quot;</emphasis>
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;int(B1)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&quot;</emphasis>&#32;&lt;&lt;&#32;int(L1)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&gt;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;vector&#32;\&quot;correctos\&quot;&#32;tiene&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;correctos.size()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;elementos&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;vector&#32;\&quot;errores&#32;&#32;\&quot;&#32;tiene&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;errores.size()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;elementos&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Todo&#32;ha&#32;ido&#32;bien&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;todo_correcto&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00148"/>00148 
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00150"/>00150 }
<anchor xml:id="_pruebas__dig__t_8cpp_source_1l00151"/>00151 
</programlisting></section>
