.TH "utilities::special" 3 "Lunes, 2 de Enero de 2023" "NumericRepresentations" \" -*- nroff -*-
.ad l
.nh
.SH NAME
utilities::special
.SH SYNOPSIS
.br
.PP
.SS "Clases"

.in +1c
.ti -1c
.RI "struct \fBpow_B_to_E_t\fP"
.br
.RI "FORMA ANTIGUA PERO SEGURA DE CONSEGUIR POTENCIAS DE UNA BASE EN COMPILE TIME\&. "
.ti -1c
.RI "struct \fBpow_B_to_E_t< Base, 0 >\fP"
.br
.ti -1c
.RI "struct \fBpow_B_to_E_t< Base, 1 >\fP"
.br
.ti -1c
.RI "struct \fBpow_B_to_E_t< Base, 2 >\fP"
.br
.ti -1c
.RI "struct \fBtuple_builder_t\fP"
.br
.RI "TEMPLATE GENERAL\&. "
.ti -1c
.RI "struct \fBtuple_builder_t< BeginIntObj_ct, BeginIntObj_ct, EndIntObj_ct, Base, Funct_tt >\fP"
.br
.RI "ESPECIALIZACION DONDE INTOBJ_CT == BEGININTOBJ_CT\&. "
.ti -1c
.RI "struct \fBtuple_builder_t< EndIntObj_ct\-1, BeginIntObj_ct, EndIntObj_ct, Base, Funct_tt >\fP"
.br
.RI "ESPECIALIZACION DONDE INTOBJ_CT == ENDINTOBJ_CT-1\&. "
.ti -1c
.RI "struct \fBtuple_user_constructor_t\fP"
.br
.in -1c
.SS "Funciones"

.in +1c
.ti -1c
.RI "template<\fBNumRepr::usint_t\fP B, \fBNumRepr::usint_t\fP L> consteval \fBNumRepr::uint128_t\fP \fBBase_pow_to_Size\fP () noexcept"
.br
.RI "FORMA SENCILLA DE CONSEGUIR POTENCIAS DE UNA BASE EN COMPILE TIME\&. "
.ti -1c
.RI "template<std::size_t start, std::size_t Base, std::size_t \&.\&.\&. Is, template< std::size_t, std::size_t > typename Funct_tt, typename \&.\&.\&. Ts> constexpr void \fBctf_helper\fP (std::index_sequence< Is\&.\&.\&. >, std::tuple< Ts\&.\&.\&. > const &t) noexcept"
.br
.ti -1c
.RI "template<std::size_t start, std::size_t end, std::size_t Base, template< typename, std::size_t, std::size_t > typename Funct_tt, typename \&.\&.\&. Ts> constexpr void \fBct_for\fP (std::tuple< Ts\&.\&.\&. > const &t) noexcept"
.br
.ti -1c
.RI "template<auto B, auto L, typename A > constexpr \fBNumRepr::uint128_t\fP \fBconversion_to_int\fP (const A &arg) noexcept"
.br
.RI "CONVERSION DE REGISTRO DE DIGITOS A ENTERO EN TIEMPO DE COMPILACION\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "template<\fBNumRepr::usint_t\fP Base, \fBNumRepr::usint_t\fP Exp> constexpr \fBNumRepr::uint128_t\fP \fBPow_B2L_v\fP = \fBpow_B_to_E_t\fP<Base,Exp>::value"
.br
.ti -1c
.RI "template<std::int64_t BeginIntObj_ct, std::int64_t EndIntObj_ct, std::int64_t Base, template< std::int64_t, std::int64_t > class Funct_tt> constexpr auto \fBtuple_constr_v\fP"
.br
.in -1c
.SH "Descripción detallada"
.PP 
LA LLAMADA 'REAL' ES 
.PP
.nf
            assign_with_order(dest,args\&.\&.\&.);

.fi
.PP
 donde los 'args' son de tipo 'Ts' (que es uno solo, todos iguales entre si) 
.SH "Documentación de las funciones"
.PP 
.SS "template<\fBNumRepr::usint_t\fP B, \fBNumRepr::usint_t\fP L> consteval \fBNumRepr::uint128_t\fP utilities::special::Base_pow_to_Size ()\fC [inline]\fP, \fC [noexcept]\fP"

.PP
FORMA SENCILLA DE CONSEGUIR POTENCIAS DE UNA BASE EN COMPILE TIME\&. 
.PP
Definición en la línea \fB179\fP del archivo \fButilities\&.hpp\fP\&.
.SS "template<auto B, auto L, typename A > constexpr \fBNumRepr::uint128_t\fP utilities::special::conversion_to_int (const A & arg)\fC [inline]\fP, \fC [constexpr]\fP, \fC [noexcept]\fP"

.PP
CONVERSION DE REGISTRO DE DIGITOS A ENTERO EN TIEMPO DE COMPILACION\&. 
.PP
Definición en la línea \fB382\fP del archivo \fButilities\&.hpp\fP\&.
.SS "template<std::size_t start, std::size_t end, std::size_t Base, template< typename, std::size_t, std::size_t > typename Funct_tt, typename \&.\&.\&. Ts> constexpr void utilities::special::ct_for (std::tuple< Ts\&.\&.\&. > const & t)\fC [constexpr]\fP, \fC [noexcept]\fP"

.PP
Definición en la línea \fB374\fP del archivo \fButilities\&.hpp\fP\&.
.SS "template<std::size_t start, std::size_t Base, std::size_t \&.\&.\&. Is, template< std::size_t, std::size_t > typename Funct_tt, typename \&.\&.\&. Ts> constexpr void utilities::special::ctf_helper (std::index_sequence< Is\&.\&.\&. >, std::tuple< Ts\&.\&.\&. > const & t)\fC [constexpr]\fP, \fC [noexcept]\fP"

.PP
Definición en la línea \fB355\fP del archivo \fButilities\&.hpp\fP\&.
.SH "Documentación de las variables"
.PP 
.SS "template<\fBNumRepr::usint_t\fP Base, \fBNumRepr::usint_t\fP Exp> constexpr \fBNumRepr::uint128_t\fP utilities::special::Pow_B2L_v = \fBpow_B_to_E_t\fP<Base,Exp>::value\fC [constexpr]\fP"

.PP
Definición en la línea \fB218\fP del archivo \fButilities\&.hpp\fP\&.
.SS "template<std::int64_t BeginIntObj_ct, std::int64_t EndIntObj_ct, std::int64_t Base, template< std::int64_t, std::int64_t > class Funct_tt> constexpr auto utilities::special::tuple_constr_v\fC [constexpr]\fP"
\fBValor inicial:\fP.PP
.nf
=
        tuple_user_constructor_t<
                        BeginIntObj_ct,
                        EndIntObj_ct,
                        Base,
                        Funct_tt
        >::build()
.fi

.PP
Definición en la línea \fB336\fP del archivo \fButilities\&.hpp\fP\&.
.SH "Autor"
.PP 
Generado automáticamente por Doxygen para NumericRepresentations del código fuente\&.
