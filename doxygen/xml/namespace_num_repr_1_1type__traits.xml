<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="es">
  <compounddef id="namespace_num_repr_1_1type__traits" kind="namespace" language="C++">
    <compoundname>NumRepr::type_traits</compoundname>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1empty__type" prot="public">NumRepr::type_traits::empty_type</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1is__signed__sz__gt" prot="public">NumRepr::type_traits::is_signed_sz_gt</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1is__unsigned__sz__gt" prot="public">NumRepr::type_traits::is_unsigned_sz_gt</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix" prot="public">NumRepr::type_traits::UIntTypeForRadix</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01int64__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; int64_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01sint16__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; sint16_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01sint32__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; sint32_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01sint8__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; sint8_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01uint128__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; uint128_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01uint16__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; uint16_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01uint32__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; uint32_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01uint64__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; uint64_t, Radix &gt;</innerclass>
    <innerclass refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix_3_01uint8__t_00_01_radix_01_4" prot="public">NumRepr::type_traits::UIntTypeForRadix&lt; uint8_t, Radix &gt;</innerclass>
    <innernamespace refid="namespace_num_repr_1_1type__traits_1_1detail">NumRepr::type_traits::detail</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_num_repr_1_1type__traits_1aceacfae33a2bdedd9b890f2766f9b5a9" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>unsigned_integral_c</type>
            <declname>UInt_t</declname>
            <defname>UInt_t</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1type__traits_1_1detail_1_1____sig___u_int__for___u_int__t" kindref="compound">detail::__sig_UInt_for_UInt_t</ref>&lt; UInt_t &gt;::type</type>
        <definition>using NumRepr::type_traits::sig_UInt_for_UInt_t = typedef typename detail::__sig_UInt_for_UInt_t&lt;UInt_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>sig_UInt_for_UInt_t</name>
        <qualifiedname>NumRepr::type_traits::sig_UInt_for_UInt_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="258" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1_1type__traits_1a9b443da6cd532ae6d0d5482d8f610737" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>unsigned_integral_c</type>
            <declname>UInt_t</declname>
            <defname>UInt_t</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1type__traits_1_1detail_1_1____sig___s_int__for___u_int__t" kindref="compound">detail::__sig_SInt_for_UInt_t</ref>&lt; UInt_t &gt;::type</type>
        <definition>using NumRepr::type_traits::sig_SInt_for_UInt_t = typedef typename detail::__sig_SInt_for_UInt_t&lt;UInt_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>sig_SInt_for_UInt_t</name>
        <qualifiedname>NumRepr::type_traits::sig_SInt_for_UInt_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="294" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1_1type__traits_1a78161f55798c2f15126db200161b7cda" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>signed_integral_c</type>
            <declname>SInt_t</declname>
            <defname>SInt_t</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1type__traits_1_1detail_1_1____sig___u_int__for___s_int__t" kindref="compound">detail::__sig_UInt_for_SInt_t</ref>&lt; SInt_t &gt;::type</type>
        <definition>using NumRepr::type_traits::sig_UInt_for_SInt_t = typedef typename detail::__sig_UInt_for_SInt_t&lt;SInt_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>sig_UInt_for_SInt_t</name>
        <qualifiedname>NumRepr::type_traits::sig_UInt_for_SInt_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>METAFUNCION : DA EL SIGUIENTE TIPO ENTERO PARA EL ACTUAL TIPO ENTERO POR ESPCECIALIZACION EXPLICITA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="338" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1_1type__traits_1ad43c24c639cf0910d71316896a9f39c2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>signed_integral_c</type>
            <declname>SInt_t</declname>
            <defname>SInt_t</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1type__traits_1_1detail_1_1____sig___s_int__for___s_int__t" kindref="compound">detail::__sig_SInt_for_SInt_t</ref>&lt; SInt_t &gt;::type</type>
        <definition>using NumRepr::type_traits::sig_SInt_for_SInt_t = typedef typename detail::__sig_SInt_for_SInt_t&lt;SInt_t&gt;::type</definition>
        <argsstring></argsstring>
        <name>sig_SInt_for_SInt_t</name>
        <qualifiedname>NumRepr::type_traits::sig_SInt_for_SInt_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>METAFUNCIONES PARA DAR CON LOS MAXIMOS NUMEROS QUE CABEN EN UN TIPO Y SIMILARES </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="373" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1_1type__traits_1a351a7a8b4e624e101708c6d24ffeefb6" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>integral_c</type>
            <declname>Type</declname>
            <defname>Type</defname>
          </param>
          <param>
            <type>Type</type>
            <declname>Radix</declname>
            <defname>Radix</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1type__traits_1_1_u_int_type_for_radix" kindref="compound">UIntTypeForRadix</ref>&lt; Type, Radix &gt;::UIntType</type>
        <definition>using NumRepr::type_traits::UIntTypeForRadix_t = typedef typename UIntTypeForRadix&lt;Type,Radix&gt;::UIntType</definition>
        <argsstring></argsstring>
        <name>UIntTypeForRadix_t</name>
        <qualifiedname>NumRepr::type_traits::UIntTypeForRadix_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DEFINICION PARA ESPECIALIZACION TYPE_TRAITS::UINTTYPEFORRADIX UNSIGNED POSIBLY RADIX NON VALID </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="497" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1_1type__traits_1af319111801e531a4ba8fee6e00e5b0f3" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a8fe9f5218406354b79aac7a41bd4823f" kindref="member">uint128_t</ref></type>
            <declname>Radix</declname>
            <defname>Radix</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_num_repr_1_1type__traits_1a351a7a8b4e624e101708c6d24ffeefb6" kindref="member">UIntTypeForRadix_t</ref>&lt; decltype(Radix), Radix &gt;</type>
        <definition>using NumRepr::type_traits::TypeFromIntNumber_t = typedef UIntTypeForRadix_t&lt;decltype(Radix),Radix&gt;</definition>
        <argsstring></argsstring>
        <name>TypeFromIntNumber_t</name>
        <qualifiedname>NumRepr::type_traits::TypeFromIntNumber_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="715" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="715" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1abdd3c894685f7a3c5a75a1e11030be9f" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::has_the_same_size</definition>
        <argsstring></argsstring>
        <name>has_the_same_size</name>
        <qualifiedname>NumRepr::type_traits::has_the_same_size</qualifiedname>
        <initializer>= (sizeof(T)==sizeof(S))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="196" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1a6fbb9b711f734a52551166219e61a750" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>unsigned_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>unsigned_integral_c</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::is_unsigned_sz_gt_v</definition>
        <argsstring></argsstring>
        <name>is_unsigned_sz_gt_v</name>
        <qualifiedname>NumRepr::type_traits::is_unsigned_sz_gt_v</qualifiedname>
        <initializer>= <ref refid="struct_num_repr_1_1type__traits_1_1is__unsigned__sz__gt" kindref="compound">is_unsigned_sz_gt</ref>&lt;T,S&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="204" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1a789b3b413126236b864ee49857240dc9" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>unsigned_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>unsigned_integral_c</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::is_unsigned_sz_geqt_v</definition>
        <argsstring></argsstring>
        <name>is_unsigned_sz_geqt_v</name>
        <qualifiedname>NumRepr::type_traits::is_unsigned_sz_geqt_v</qualifiedname>
        <initializer>=	(<ref refid="namespace_num_repr_1_1type__traits_1a6fbb9b711f734a52551166219e61a750" kindref="member">is_unsigned_sz_gt_v</ref>&lt;T,S&gt; || std::is_same_v&lt;T,S&gt;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="207" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1a7c29ce492dab6daf5c494a845385d0b2" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>signed_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>signed_integral_c</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::is_signed_sz_gt_v</definition>
        <argsstring></argsstring>
        <name>is_signed_sz_gt_v</name>
        <qualifiedname>NumRepr::type_traits::is_signed_sz_gt_v</qualifiedname>
        <initializer>= <ref refid="struct_num_repr_1_1type__traits_1_1is__signed__sz__gt" kindref="compound">is_signed_sz_gt</ref>&lt;T,S&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="215" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1a20b53f5a6dfecf867091ecfc36246c2a" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>signed_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>unsigned_integral_c</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::is_signed_sz_geqt_v</definition>
        <argsstring></argsstring>
        <name>is_signed_sz_geqt_v</name>
        <qualifiedname>NumRepr::type_traits::is_signed_sz_geqt_v</qualifiedname>
        <initializer>=	<ref refid="namespace_num_repr_1_1type__traits_1a7c29ce492dab6daf5c494a845385d0b2" kindref="member">is_signed_sz_gt_v</ref>&lt;T,S&gt;
											||
											std::is_same_v&lt;T,S&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="218" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1abc08a96a36443cef681ab6550813015e" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>unsigned_integral_c</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::is_sz_gt_v</definition>
        <argsstring></argsstring>
        <name>is_sz_gt_v</name>
        <qualifiedname>NumRepr::type_traits::is_sz_gt_v</qualifiedname>
        <initializer>=   <ref refid="namespace_num_repr_1_1type__traits_1a7c29ce492dab6daf5c494a845385d0b2" kindref="member">is_signed_sz_gt_v</ref>&lt;T,S&gt;
										||
										<ref refid="namespace_num_repr_1_1type__traits_1a6fbb9b711f734a52551166219e61a750" kindref="member">is_unsigned_sz_gt_v</ref>&lt;T,S&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="223" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_num_repr_1_1type__traits_1af1b7c5a6fa97bd83aab53761c28f2ece" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>unsigned_integral_c</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::type_traits::is_sz_geqt_v</definition>
        <argsstring></argsstring>
        <name>is_sz_geqt_v</name>
        <qualifiedname>NumRepr::type_traits::is_sz_geqt_v</qualifiedname>
        <initializer>=	<ref refid="namespace_num_repr_1_1type__traits_1a20b53f5a6dfecf867091ecfc36246c2a" kindref="member">is_signed_sz_geqt_v</ref>&lt;T,S&gt;
										||
										<ref refid="namespace_num_repr_1_1type__traits_1a789b3b413126236b864ee49857240dc9" kindref="member">is_unsigned_sz_geqt_v</ref>&lt;T,S&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>METAFUNCION : DA EL SIGUIENTE TIPO NATURAL PARA EL ACTUAL TIPO NATURAL POR ESPECIALIZACION EXPLICITA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="227" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::maxbase</definition>
        <argsstring>()</argsstring>
        <name>maxbase</name>
        <qualifiedname>NumRepr::type_traits::maxbase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="378" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="378" bodyend="380"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="707" endline="731">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::assign</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="931" endline="944">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator Int_Type</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1ae6c52c70d58ecbc58b9ce8ddeff3c42e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::submaxbase</definition>
        <argsstring>()</argsstring>
        <name>submaxbase</name>
        <qualifiedname>NumRepr::type_traits::submaxbase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="383" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a1a5c6f8a01fa8a777470dd479b3ae87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::minbase</definition>
        <argsstring>()</argsstring>
        <name>minbase</name>
        <qualifiedname>NumRepr::type_traits::minbase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="388" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1ae6d7996db2b7cdee98b72342bc0f976b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::subminbase</definition>
        <argsstring>()</argsstring>
        <name>subminbase</name>
        <qualifiedname>NumRepr::type_traits::subminbase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="393" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="393" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a3265677e1277882355b102f90ce5fc69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::monobase</definition>
        <argsstring>()</argsstring>
        <name>monobase</name>
        <qualifiedname>NumRepr::type_traits::monobase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="398" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a1d046b3da7103b9ca5a7dacb674f49f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::nobase</definition>
        <argsstring>()</argsstring>
        <name>nobase</name>
        <qualifiedname>NumRepr::type_traits::nobase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="403" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="403" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1addc313fbab4434c736167b0510d95a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::maxdigit</definition>
        <argsstring>()</argsstring>
        <name>maxdigit</name>
        <qualifiedname>NumRepr::type_traits::maxdigit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="408" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a7197bd8a89fcc647c18b49f63a1b49f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::submaxdigit</definition>
        <argsstring>()</argsstring>
        <name>submaxdigit</name>
        <qualifiedname>NumRepr::type_traits::submaxdigit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="413" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="413" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a8c8928703a18d48613b88d4eee0e967a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::digit_0</definition>
        <argsstring>()</argsstring>
        <name>digit_0</name>
        <qualifiedname>NumRepr::type_traits::digit_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="418" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="418" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1ad0267c5c18b47ea7d823e17e735d1e42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::digit_1</definition>
        <argsstring>()</argsstring>
        <name>digit_1</name>
        <qualifiedname>NumRepr::type_traits::digit_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="423" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="423" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1ad3c536f8264351b7aa3d9bd8e648d2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::base_2</definition>
        <argsstring>()</argsstring>
        <name>base_2</name>
        <qualifiedname>NumRepr::type_traits::base_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="428" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="428" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a7fe2595394f638eb83fc857ba0076f09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>consteval bool NumRepr::type_traits::base_geqt_2</definition>
        <argsstring>()</argsstring>
        <name>base_geqt_2</name>
        <qualifiedname>NumRepr::type_traits::base_geqt_2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="433" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="433" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a10f4b5abfc1e0a202341bf4481596e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>consteval bool NumRepr::type_traits::base_leqt_max</definition>
        <argsstring>()</argsstring>
        <name>base_leqt_max</name>
        <qualifiedname>NumRepr::type_traits::base_leqt_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="438" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="438" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval bool</type>
        <definition>consteval bool NumRepr::type_traits::suitable_base</definition>
        <argsstring>()</argsstring>
        <name>suitable_base</name>
        <qualifiedname>NumRepr::type_traits::suitable_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="443" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="443" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1ab7aafe6bcb405d5c200145181755984f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::middle_max</definition>
        <argsstring>()</argsstring>
        <name>middle_max</name>
        <qualifiedname>NumRepr::type_traits::middle_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="448" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="448" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1_1type__traits_1a9c68ad4f3469998252d88633edf8e908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::type_traits::sqrt_max</definition>
        <argsstring>()</argsstring>
        <name>sqrt_max</name>
        <qualifiedname>NumRepr::type_traits::sqrt_max</qualifiedname>
        <briefdescription>
<para>DECLARACION DE UN TYPE_TRAITS PARA LITERALES INTEGRALES NOVALIDOS. </para>
        </briefdescription>
        <detaileddescription>
<para>QUEREMOS FABRICAR LA METAFUNCION TypeFromIntNumber_t&lt;numero_sin_signo&gt; QUE DEVUELVA EL TIPO ENTERO SIN SIGNO MAS PEQUENO PARA EL NUMERO numero_sin_signo </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="457" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="457" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="141" column="1"/>
  </compounddef>
</doxygen>
