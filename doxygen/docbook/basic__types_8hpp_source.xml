<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_basic__types_8hpp_source" xml:lang="es">
<title>basic_types.hpp</title>
<indexterm><primary>basic_types.hpp</primary></indexterm>
Ir a la documentaci√≥n de este archivo.<programlisting linenumbering="unnumbered"><anchor xml:id="_basic__types_8hpp_source_1l00001"/>00001 <emphasis role="comment">//&#32;***&#32;ADDED&#32;BY&#32;HEADER&#32;FIXUP&#32;***</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&quot;istream&quot;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00003"/>00003 <emphasis role="comment">//&#32;***&#32;END&#32;***</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00004"/>00004 
<anchor xml:id="_basic__types_8hpp_source_1l00005"/>00005 <emphasis role="comment">/*</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00006"/>00006 <emphasis role="comment">&#32;&#32;A&#32;list&#32;of&#32;valid&#32;replacements&#32;is&#32;as&#32;follows:</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00007"/>00007 <emphasis role="comment"></emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00008"/>00008 <emphasis role="comment">&#32;&#32;Use:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Instead&#32;of:</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00009"/>00009 <emphasis role="comment">&#32;&#32;&lt;sstream&gt;,&#32;basic_stringbuf&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;strstream&gt;,&#32;strstreambuf</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00010"/>00010 <emphasis role="comment">&#32;&#32;&lt;sstream&gt;,&#32;basic_istringstream&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;strstream&gt;,&#32;istrstream</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00011"/>00011 <emphasis role="comment">&#32;&#32;&lt;sstream&gt;,&#32;basic_ostringstream&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;strstream&gt;,&#32;ostrstream</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00012"/>00012 <emphasis role="comment">&#32;&#32;&lt;sstream&gt;,&#32;basic_stringstream&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;strstream&gt;,&#32;strstream</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00013"/>00013 <emphasis role="comment">&#32;&#32;&lt;unordered_set&gt;,&#32;unordered_set&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;ext/hash_set&gt;,&#32;hash_set</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00014"/>00014 <emphasis role="comment">&#32;&#32;&lt;unordered_set&gt;,&#32;unordered_multiset&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;ext/hash_set&gt;,&#32;hash_multiset</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00015"/>00015 <emphasis role="comment">&#32;&#32;&lt;unordered_map&gt;,&#32;unordered_map&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;ext/hash_map&gt;,&#32;hash_map</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00016"/>00016 <emphasis role="comment">&#32;&#32;&lt;unordered_map&gt;,&#32;unordered_multimap&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;ext/hash_map&gt;,&#32;hash_multimap</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00017"/>00017 <emphasis role="comment">&#32;&#32;&lt;functional&gt;,&#32;bind&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;functional&gt;,&#32;binder1st</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00018"/>00018 <emphasis role="comment">&#32;&#32;&lt;functional&gt;,&#32;bind&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;functional&gt;,&#32;binder2nd</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00019"/>00019 <emphasis role="comment">&#32;&#32;&lt;functional&gt;,&#32;bind&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;functional&gt;,&#32;bind1st</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00020"/>00020 <emphasis role="comment">&#32;&#32;&lt;functional&gt;,&#32;bind&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;functional&gt;,&#32;bind2nd</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00021"/>00021 <emphasis role="comment">&#32;&#32;&lt;memory&gt;,&#32;unique_ptr&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;memory&gt;,&#32;auto_ptr</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00022"/>00022 <emphasis role="comment">*/</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00023"/>00023 
<anchor xml:id="_basic__types_8hpp_source_1l00024"/>00024 <emphasis role="preprocessor">#ifndef&#32;BASIC_TYPES_HPP_INDLUDED</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00025"/>00025 <emphasis role="preprocessor">#define&#32;BASIC_TYPES_HPP_INDLUDED</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00026"/>00026 
<anchor xml:id="_basic__types_8hpp_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&lt;cinttypes&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00028"/>00028 
<anchor xml:id="_basic__types_8hpp_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&lt;optional&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&lt;compare&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&lt;concepts&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00033"/>00033 
<anchor xml:id="_basic__types_8hpp_source_1l00034"/>00034 <emphasis role="comment">//#include&#32;&lt;istream&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00035"/>00035 <emphasis role="comment">//#include&#32;&lt;ostream&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&lt;cstring&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00039"/>00039 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&lt;fstream&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00041"/>00041 <emphasis role="comment">//#include&#32;&lt;fmt/format.h&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00042"/>00042 
<anchor xml:id="_basic__types_8hpp_source_1l00043"/>00043 <emphasis role="preprocessor">#include&#32;&lt;array&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00044"/>00044 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00045"/>00045 <emphasis role="preprocessor">#include&#32;&lt;list&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00046"/>00046 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00047"/>00047 
<anchor xml:id="_basic__types_8hpp_source_1l00048"/>00048 <emphasis role="preprocessor">#include&#32;&lt;climits&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00049"/>00049 <emphasis role="preprocessor">#include&#32;&lt;numeric&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00050"/>00050 <emphasis role="preprocessor">#include&#32;&lt;limits&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00051"/>00051 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00052"/>00052 
<anchor xml:id="_basic__types_8hpp_source_1l00053"/>00053 <emphasis role="preprocessor">#include&#32;&lt;iterator&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00054"/>00054 <emphasis role="preprocessor">#include&#32;&lt;functional&gt;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00055"/>00055 
<anchor xml:id="_basic__types_8hpp_source_1l00056"/>00056 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_num_repr">NumRepr</link>&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00058"/><link linkend="_namespace_num_repr_1ac8b645f8109f8fe793fac08c3c19b496">00058</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ac8b645f8109f8fe793fac08c3c19b496">chint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;char;
<anchor xml:id="_basic__types_8hpp_source_1l00059"/><link linkend="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08">00059</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08">schint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">signed</emphasis>&#32;char;
<anchor xml:id="_basic__types_8hpp_source_1l00060"/><link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">00060</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">ssint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00061"/><link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">00061</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">sint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">signed</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00062"/><link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">00062</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">slint_t</link>&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00063"/><link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">00063</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">sllint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">signed</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00064"/><link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">00064</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;char;
<anchor xml:id="_basic__types_8hpp_source_1l00065"/><link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">00065</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">short</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00066"/><link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">00066</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00067"/><link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">00067</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00068"/><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">00068</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;int;
<anchor xml:id="_basic__types_8hpp_source_1l00069"/><link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">00069</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;__uint128_t;
<anchor xml:id="_basic__types_8hpp_source_1l00070"/><link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">00070</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;__int128_t;
<anchor xml:id="_basic__types_8hpp_source_1l00071"/><link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">00071</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::size_t;
<anchor xml:id="_basic__types_8hpp_source_1l00072"/><link linkend="_namespace_num_repr_1a08fdac8ec5e7198e046fbb1a55170acb">00072</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a08fdac8ec5e7198e046fbb1a55170acb">sint8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00073"/><link linkend="_namespace_num_repr_1af5fe3bff90648275268a6f85b4628ae9">00073</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1af5fe3bff90648275268a6f85b4628ae9">sint16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00074"/><link linkend="_namespace_num_repr_1a6858219eef04d10b215c3fa36d322a8b">00074</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a6858219eef04d10b215c3fa36d322a8b">sint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00075"/><link linkend="_namespace_num_repr_1a3aa23f70e9c473be1b4af85b168951c7">00075</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a3aa23f70e9c473be1b4af85b168951c7">sint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00076"/><link linkend="_namespace_num_repr_1ab62814b3ad5f294a66f378fd28f90113">00076</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ab62814b3ad5f294a66f378fd28f90113">int8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00077"/><link linkend="_namespace_num_repr_1ae5e30e655c1f741255ac5600f98a46fc">00077</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ae5e30e655c1f741255ac5600f98a46fc">int16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00078"/><link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">00078</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00079"/><link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">00079</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00080"/><link linkend="_namespace_num_repr_1a6d251e3fdf293ad7f699785ca3818bac">00080</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a6d251e3fdf293ad7f699785ca3818bac">fast8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_fast8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00081"/><link linkend="_namespace_num_repr_1a156f412cea618e4883ed355e5c5abb9d">00081</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a156f412cea618e4883ed355e5c5abb9d">fast16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_fast16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00082"/><link linkend="_namespace_num_repr_1a26a5d9833bf7b207952d1b90280f401a">00082</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a26a5d9833bf7b207952d1b90280f401a">fast32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_fast32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00083"/><link linkend="_namespace_num_repr_1a749d85495bf08b4447fb5253ec897dd5">00083</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a749d85495bf08b4447fb5253ec897dd5">fast64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_fast64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00084"/><link linkend="_namespace_num_repr_1a1246598aa532c1bda5c564b135c9c7bd">00084</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a1246598aa532c1bda5c564b135c9c7bd">least8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_least8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00085"/><link linkend="_namespace_num_repr_1afb6f5a3a759aae83ce3ce7d660c943d5">00085</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1afb6f5a3a759aae83ce3ce7d660c943d5">least16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_least16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00086"/><link linkend="_namespace_num_repr_1a4dd4d4221988de1b8b49404cf4fddd0b">00086</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a4dd4d4221988de1b8b49404cf4fddd0b">least32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_least32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00087"/><link linkend="_namespace_num_repr_1a84148be2ce937dca85ea677ab335dfa7">00087</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a84148be2ce937dca85ea677ab335dfa7">least64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::int_least64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00088"/>00088 <emphasis role="comment">//using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ssize_t&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::ssize_t;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00089"/><link linkend="_namespace_num_repr_1ac5b617f84b139672d691e24c196528e9">00089</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ac5b617f84b139672d691e24c196528e9">uint8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00090"/><link linkend="_namespace_num_repr_1aaf7419192485988c57254740ce16da9b">00090</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1aaf7419192485988c57254740ce16da9b">uint16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00091"/><link linkend="_namespace_num_repr_1a4f502071a1f4a9b34611a4b2c96b7a4a">00091</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a4f502071a1f4a9b34611a4b2c96b7a4a">uint32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00092"/><link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">00092</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">uint64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00093"/><link linkend="_namespace_num_repr_1a9b374efcf2955b0e2aeda6eb50941ebe">00093</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a9b374efcf2955b0e2aeda6eb50941ebe">ufast8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_fast8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00094"/><link linkend="_namespace_num_repr_1a64a10bd5751a508132b709300a8e916c">00094</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a64a10bd5751a508132b709300a8e916c">ufast16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_fast16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00095"/><link linkend="_namespace_num_repr_1afcff0725f2a8a3faed491cc9224d6d4d">00095</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1afcff0725f2a8a3faed491cc9224d6d4d">ufast32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_fast32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00096"/><link linkend="_namespace_num_repr_1a17e6e77298f11036961bd9d19fdc94a7">00096</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a17e6e77298f11036961bd9d19fdc94a7">ufast64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_fast64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00097"/><link linkend="_namespace_num_repr_1a7fe44611f6ab312ef9f2eb05d88a8423">00097</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a7fe44611f6ab312ef9f2eb05d88a8423">uleast8_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_least8_t;
<anchor xml:id="_basic__types_8hpp_source_1l00098"/><link linkend="_namespace_num_repr_1ae2745e872cfa96ef2667e58a861f4964">00098</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ae2745e872cfa96ef2667e58a861f4964">uleast16_t</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_least16_t;
<anchor xml:id="_basic__types_8hpp_source_1l00099"/><link linkend="_namespace_num_repr_1aaf4382c6067f3c175866881db9ed85fd">00099</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1aaf4382c6067f3c175866881db9ed85fd">uleast32_t</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_least32_t;
<anchor xml:id="_basic__types_8hpp_source_1l00100"/><link linkend="_namespace_num_repr_1a5345c86c32fe5fbecb4673408fd9cdf4">00100</link> <emphasis role="keyword">using&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a5345c86c32fe5fbecb4673408fd9cdf4">uleast64_t</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uint_least64_t;
<anchor xml:id="_basic__types_8hpp_source_1l00101"/>00101 <emphasis role="comment">//using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uchint8&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::char8_t;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00102"/>00102 <emphasis role="comment">//using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uchint16&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::char16_t;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00103"/>00103 <emphasis role="comment">//using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uchint32&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::char32_t;</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00104"/><link linkend="_namespace_num_repr_1a76e930f3badebdae54ceb6d60d001a0e">00104</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1a76e930f3badebdae54ceb6d60d001a0e">intmax_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::intmax_t;
<anchor xml:id="_basic__types_8hpp_source_1l00105"/><link linkend="_namespace_num_repr_1ab66bf498bebe15bc960b29f844a1d069">00105</link> <emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_namespace_num_repr_1ab66bf498bebe15bc960b29f844a1d069">uintmax_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::uintmax_t;
<anchor xml:id="_basic__types_8hpp_source_1l00106"/>00106 
<anchor xml:id="_basic__types_8hpp_source_1l00107"/><link linkend="_namespace_num_repr_1_1type__traits">00107</link> <emphasis role="keyword">namespace&#32;</emphasis>type_traits&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00109"/>00109 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;IntT&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00110"/><link linkend="_concept_num_repr_1_1type__traits_1_1arith__integral__c">00110</link> <emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1arith__integral__c">arith_integral_c</link>&#32;=&#32;&#32;&#32;&#32;&#32;&#32;std::is_arithmetic_v&lt;IntT&gt;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_basic__types_8hpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::is_integral_v&lt;IntT&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00112"/>00112 
<anchor xml:id="_basic__types_8hpp_source_1l00113"/>00113 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;NatIntT&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00114"/><link linkend="_concept_num_repr_1_1type__traits_1_1arith__natural__c">00114</link> <emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1arith__natural__c">arith_natural_c</link>&#32;=&#32;&#32;&#32;std::is_arithmetic_v&lt;NatIntT&gt;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_basic__types_8hpp_source_1lstd::is_unsigned_v&lt;NatIntT&gt;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_basic__types_8hpp_source_1lstd::is_integral_v&lt;NatIntT&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00117"/>00117 
<anchor xml:id="_basic__types_8hpp_source_1l00118"/>00118 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;CharT&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00119"/><link linkend="_concept_num_repr_1_1type__traits_1_1char__type__c">00119</link> <emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1char__type__c">char_type_c</link>&#32;=&#32;std::is_same_v&lt;CharT,char&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||
<anchor xml:id="_basic__types_8hpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::is_same_v&lt;CharT,signed&#32;char&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||
<anchor xml:id="_basic__types_8hpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::is_same_v&lt;CharT,unsigned&#32;char&gt;&#32;&#32;&#32;&#32;&#32;||
<anchor xml:id="_basic__types_8hpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::is_same_v&lt;CharT,wchar_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00123"/>00123 
<anchor xml:id="_basic__types_8hpp_source_1l00124"/>00124 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">char</emphasis>_type_c&#32;CharT&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00125"/>00125 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00126"/><link linkend="_namespace_num_repr_1_1type__traits_1a3c2cd8d77157f93388df22fc683352c6">00126</link> CharT&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a3c2cd8d77157f93388df22fc683352c6">nullchar</link>&#32;{CharT(<emphasis role="charliteral">&apos;\0&apos;</emphasis>)};
<anchor xml:id="_basic__types_8hpp_source_1l00127"/>00127 
<anchor xml:id="_basic__types_8hpp_source_1l00128"/><link linkend="_namespace_num_repr_1_1type__traits_1a167f2f4507b6f1cbc6fd15d365570c1f">00128</link> <emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a167f2f4507b6f1cbc6fd15d365570c1f">clear_ccad</link>(<emphasis role="keywordtype">char</emphasis>&#32;*,<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>);
<anchor xml:id="_basic__types_8hpp_source_1l00129"/>00129 
<anchor xml:id="_basic__types_8hpp_source_1l00130"/>00130 <emphasis role="keyword">template</emphasis>&lt;&#32;<emphasis role="keyword">template</emphasis>&lt;uch<emphasis role="keywordtype">int</emphasis>_t&#32;B&gt;&#32;<emphasis role="keyword">class&#32;</emphasis>T&#32;&#32;,&#32;<link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>&#32;B&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00131"/>00131 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00132"/><link linkend="_namespace_num_repr_1_1type__traits_1a88d9d80805fd8fe7d5662340a7e92344">00132</link> <emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a88d9d80805fd8fe7d5662340a7e92344">devCadenaC</link>(T&lt;B&gt;&#32;arg,std::size_t&#32;long_ccad&#32;=&#32;64)&#32;noexcept&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>*&#32;c_cad&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>[long_ccad];
<anchor xml:id="_basic__types_8hpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c_cad&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a167f2f4507b6f1cbc6fd15d365570c1f">clear_ccad</link>(c_cad,long_ccad);
<anchor xml:id="_basic__types_8hpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::stringstream&#32;pre_cad;
<anchor xml:id="_basic__types_8hpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pre_cad&#32;&lt;&lt;&#32;arg;
<anchor xml:id="_basic__types_8hpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;cad(pre_cad.str());
<anchor xml:id="_basic__types_8hpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;longitud&#32;=&#32;cad.length();
<anchor xml:id="_basic__types_8hpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=0;i&lt;longitud;++i)&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c_cad[i]&#32;=&#32;cad[i];
<anchor xml:id="_basic__types_8hpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=longitud;i&lt;long_ccad;++i)&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c_cad[i]&#32;=&#32;nullchar&lt;char&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;c_cad;
<anchor xml:id="_basic__types_8hpp_source_1l00146"/>00146 }
<anchor xml:id="_basic__types_8hpp_source_1l00147"/>00147 
<anchor xml:id="_basic__types_8hpp_source_1l00148"/>00148 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00149"/><link linkend="_namespace_num_repr_1_1type__traits_1a234b3a7127ab242615f060f6d137995e">00149</link> <emphasis role="keywordtype">char</emphasis>*&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a167f2f4507b6f1cbc6fd15d365570c1f">clear_ccad</link>(<emphasis role="keywordtype">char</emphasis>&#32;*&#32;cad_c,std::size_t&#32;long_de_cad_c)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;I=0&#32;;&#32;I&#32;&lt;&#32;long_de_cad_c&#32;;&#32;++I&#32;)
<anchor xml:id="_basic__types_8hpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cad_c[I]=nullchar&lt;char&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cad_c;
<anchor xml:id="_basic__types_8hpp_source_1l00153"/>00153 }
<anchor xml:id="_basic__types_8hpp_source_1l00154"/>00154 
<anchor xml:id="_basic__types_8hpp_source_1l00155"/>00155 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00156"/><link linkend="_namespace_num_repr_1_1type__traits_1a195d25ead4c5c820f8a04e30205ed306">00156</link> <emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a195d25ead4c5c820f8a04e30205ed306">atoull</link>(<emphasis role="keywordtype">char</emphasis>*&#32;text)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=0;
<anchor xml:id="_basic__types_8hpp_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(*text)
<anchor xml:id="_basic__types_8hpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i=(i&lt;&lt;3)&#32;+&#32;(i&lt;&lt;1)&#32;+&#32;(*text&#32;-&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_basic__types_8hpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++text;
<anchor xml:id="_basic__types_8hpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(i);
<anchor xml:id="_basic__types_8hpp_source_1l00164"/>00164 }
<anchor xml:id="_basic__types_8hpp_source_1l00165"/>00165 
<anchor xml:id="_basic__types_8hpp_source_1l00170"/>00170 
<anchor xml:id="_basic__types_8hpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;variable&#32;on&#32;compile&#32;time&#32;for&#32;concept&#32;on&#32;UINT_T&#32;for&#32;BASE</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00175"/><link linkend="_namespace_num_repr_1_1type__traits_1a25a6c0b36e21a705612679155c625fea">00175</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a25a6c0b36e21a705612679155c625fea">is_uint_type_for_radix_v</link>&#32;=&#32;std::is_unsigned_v&lt;UINT_T&gt;&#32;&amp;&amp;&#32;(!&#32;std::is_same_v&lt;UINT_T,uint128_t&gt;);
<anchor xml:id="_basic__types_8hpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00178"/><link linkend="_concept_num_repr_1_1type__traits_1_1uint__type__for__radix__c">00178</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1uint__type__for__radix__c">uint_type_for_radix_c</link>&#32;=&#32;is_uint_type_for_radix_v&lt;UINT_T&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00179"/>00179 
<anchor xml:id="_basic__types_8hpp_source_1l00183"/>00183 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;&#32;<emphasis role="comment">//&#32;variable&#32;on&#32;compile&#32;time&#32;for&#32;concept&#32;on&#32;UINT_T</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00184"/><link linkend="_namespace_num_repr_1_1type__traits_1a14ca6c2ae135eb7b3434518245aa6e32">00184</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a14ca6c2ae135eb7b3434518245aa6e32">is_unsigned_type_v</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_uint_type_for_radix_v&lt;UINT_T&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same_v&lt;UINT_T,uint128_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00188"/><link linkend="_concept_num_repr_1_1type__traits_1_1unsigned__integral__c">00188</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1unsigned__integral__c">unsigned_integral_c</link>&#32;=&#32;is_unsigned_type_v&lt;UINT_T&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00189"/>00189 
<anchor xml:id="_basic__types_8hpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SINT_T&gt;&#32;<emphasis role="comment">//&#32;concept&#32;on&#32;SINT_T</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00192"/><link linkend="_namespace_num_repr_1_1type__traits_1ac835cd50de7fc16126659350e707d90b">00192</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ac835cd50de7fc16126659350e707d90b">is_signed_type_v</link>&#32;=&#32;std::is_signed_v&lt;SINT_T&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00195"/><link linkend="_concept_num_repr_1_1type__traits_1_1signed__integral__c">00195</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1signed__integral__c">signed_integral_c</link>&#32;=&#32;is_signed_type_v&lt;SINT_T&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00196"/>00196 
<anchor xml:id="_basic__types_8hpp_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;INT_TYPE&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00199"/><link linkend="_namespace_num_repr_1_1type__traits_1a70c8833df04d2280e43efc6c786255d5">00199</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a70c8833df04d2280e43efc6c786255d5">is_integral_type_v</link>&#32;=&#32;std::is_integral_v&lt;INT_TYPE&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00200"/>00200 
<anchor xml:id="_basic__types_8hpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;INT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00202"/><link linkend="_concept_num_repr_1_1type__traits_1_1integral__c">00202</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">concept&#32;</emphasis><link linkend="_concept_num_repr_1_1type__traits_1_1integral__c">integral_c</link>&#32;=&#32;is_integral_type_v&lt;INT_T&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00203"/>00203 
<anchor xml:id="_basic__types_8hpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;S&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00206"/><link linkend="_namespace_num_repr_1_1type__traits_1a630fe884d2ee01fc50ace1a6caada422">00206</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a630fe884d2ee01fc50ace1a6caada422">eq_sz_v</link>&#32;=&#32;(<emphasis role="keyword">sizeof</emphasis>(T)&#32;==&#32;<emphasis role="keyword">sizeof</emphasis>(S));
<anchor xml:id="_basic__types_8hpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;S&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00208"/><link linkend="_namespace_num_repr_1_1type__traits_1ac18e09ed303195401d9c8761d19c445d">00208</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ac18e09ed303195401d9c8761d19c445d">gt_sz_v</link>&#32;=&#32;(<emphasis role="keyword">sizeof</emphasis>(T)&#32;&gt;&#32;<emphasis role="keyword">sizeof</emphasis>(S));
<anchor xml:id="_basic__types_8hpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;S&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00210"/><link linkend="_namespace_num_repr_1_1type__traits_1a8f400870614660673c711d0901466df9">00210</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a8f400870614660673c711d0901466df9">lt_sz_v</link>&#32;=&#32;(<emphasis role="keyword">sizeof</emphasis>(T)&#32;&lt;&#32;<emphasis role="keyword">sizeof</emphasis>(S));
<anchor xml:id="_basic__types_8hpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;S&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00212"/><link linkend="_namespace_num_repr_1_1type__traits_1a960a0fb19a2a30ba524a3d5243973f4f">00212</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a960a0fb19a2a30ba524a3d5243973f4f">ge_sz_v</link>&#32;=&#32;gt_sz_v&lt;T,S&gt;||eq_sz_v&lt;T,S&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;S&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00214"/><link linkend="_namespace_num_repr_1_1type__traits_1a26bf1fb2c8481ad4420be9bd6e46f474">00214</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a26bf1fb2c8481ad4420be9bd6e46f474">le_sz_v</link>&#32;=&#32;lt_sz_v&lt;T,S&gt;||eq_sz_v&lt;T,S&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00215"/>00215 
<anchor xml:id="_basic__types_8hpp_source_1l00218"/><link linkend="_namespace_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int">00218</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ugly_details_UInt_for_UInt&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;UInt_t&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00220"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">00220</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t">__sig_UInt_for_UInt_t</link>&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">type</link>&#32;=&#32;void;};
<anchor xml:id="_basic__types_8hpp_source_1l00221"/>00221 
<anchor xml:id="_basic__types_8hpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00223"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ullint__t_01_4">00223</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t">__sig_UInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00224"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ullint__t_01_4_1afc3c860e8fae4200a94354fd8e72521b">00224</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ullint__t_01_4_1afc3c860e8fae4200a94354fd8e72521b">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00225"/>00225 
<anchor xml:id="_basic__types_8hpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00227"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ulint__t_01_4">00227</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t">__sig_UInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;u<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00230"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ulint__t_01_4_1aee9d105f2637463838afae36f07586e4">00230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;uint_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;uint_type,ulint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00231"/>00231 
<anchor xml:id="_basic__types_8hpp_source_1l00232"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ulint__t_01_4_1ad50900f36fdafaf4203409a880829248">00232</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01ulint__t_01_4_1ad50900f36fdafaf4203409a880829248">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_type_gt_this_type_v&lt;ullint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">__sig_UInt_for_UInt_t&lt;ullint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00240"/>00240 
<anchor xml:id="_basic__types_8hpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00242"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uint__t_01_4">00242</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t">__sig_UInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;u<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00245"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uint__t_01_4_1aa22c3f1ef101376638fe6e4f69c563f1">00245</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;uint_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;uint_type,uint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00246"/>00246 
<anchor xml:id="_basic__types_8hpp_source_1l00247"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uint__t_01_4_1ac08efef71c354d2b2c1f386ab5d84d8d">00247</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uint__t_01_4_1ac08efef71c354d2b2c1f386ab5d84d8d">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_type_gt_this_type_v&lt;ulint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">__sig_UInt_for_UInt_t&lt;ulint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00254"/>00254 
<anchor xml:id="_basic__types_8hpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00256"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01usint__t_01_4">00256</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t">__sig_UInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;u<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00259"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01usint__t_01_4_1a0b10558b9931ea2b903718a658ff823e">00259</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;uint_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;uint_type,usint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00260"/>00260 
<anchor xml:id="_basic__types_8hpp_source_1l00261"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01usint__t_01_4_1a7a458fc3b3b2c66319ac9b5a2a48f411">00261</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01usint__t_01_4_1a7a458fc3b3b2c66319ac9b5a2a48f411">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_type_gt_this_type_v&lt;uint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">__sig_UInt_for_UInt_t&lt;uint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00268"/>00268 
<anchor xml:id="_basic__types_8hpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00270"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uchint__t_01_4">00270</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t">__sig_UInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;u<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00273"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uchint__t_01_4_1a0a8b2b42603967993e18e4e7c503d3e1">00273</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;uint_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;uint_type,uchint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00274"/>00274 
<anchor xml:id="_basic__types_8hpp_source_1l00275"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uchint__t_01_4_1aba9a90d4e87b107aacb0c45563b73502">00275</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_3_01uchint__t_01_4_1aba9a90d4e87b107aacb0c45563b73502">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_type_gt_this_type_v&lt;usint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">__sig_UInt_for_UInt_t&lt;usint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00282"/>00282 
<anchor xml:id="_basic__types_8hpp_source_1l00283"/>00283 
<anchor xml:id="_basic__types_8hpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00285"/>00285 
<anchor xml:id="_basic__types_8hpp_source_1l00286"/>00286 
<anchor xml:id="_basic__types_8hpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00288"/><link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">00288</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___u_int_1_1____sig___u_int__for___u_int__t_1ada94fe97b9960b2660c09c60abf24dd6">ugly_details_UInt_for_UInt::__sig_UInt_for_UInt_t&lt;UInt_t&gt;::type</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00290"/>00290 
<anchor xml:id="_basic__types_8hpp_source_1l00293"/><link linkend="_namespace_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int">00293</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ugly_details_sig_SInt_for_UInt&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00295"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">00295</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">__sig_SInt_for_UInt_t</link>
<anchor xml:id="_basic__types_8hpp_source_1l00296"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">00296</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">type</link>&#32;=&#32;void;};
<anchor xml:id="_basic__types_8hpp_source_1l00297"/>00297 
<anchor xml:id="_basic__types_8hpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00299"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__ff1416f88b005f06eae8d4695658d20cf">00299</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">__sig_SInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00300"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__ff1416f88b005f06eae8d4695658d20cf_1ab7595f5bad2e354646e01c92c369ccfd">00300</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__ff1416f88b005f06eae8d4695658d20cf_1ab7595f5bad2e354646e01c92c369ccfd">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00301"/>00301 
<anchor xml:id="_basic__types_8hpp_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00303"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01ulint__t_01_4">00303</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">__sig_SInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00306"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01ulint__t_01_4_1a69366acfbda3bf147a983dfa01aba4f3">00306</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;int_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;int_type,ulint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00307"/>00307 
<anchor xml:id="_basic__types_8hpp_source_1l00308"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01ulint__t_01_4_1aebd87e0c693939e602d0a1a290e68c4c">00308</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01ulint__t_01_4_1aebd87e0c693939e602d0a1a290e68c4c">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_type_gt_this_type_v&lt;sllint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">sllint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">__sig_SInt_for_UInt_t&lt;ullint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00315"/>00315 
<anchor xml:id="_basic__types_8hpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00317"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01uint__t_01_4">00317</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">__sig_SInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00320"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01uint__t_01_4_1ac4c91657414512a592c12549d55a170b">00320</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;int_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;int_type,uint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00321"/>00321 
<anchor xml:id="_basic__types_8hpp_source_1l00322"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01uint__t_01_4_1ab87b54453ac95c61deb66d71f96855d9">00322</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01uint__t_01_4_1ab87b54453ac95c61deb66d71f96855d9">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_type_gt_this_type_v&lt;slint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">slint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">__sig_SInt_for_UInt_t&lt;ulint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00327"/>00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00329"/>00329 
<anchor xml:id="_basic__types_8hpp_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00331"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01usint__t_01_4">00331</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">__sig_SInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00334"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01usint__t_01_4_1aa1f9560694562373222314dad9a98505">00334</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;int_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;int_type,usint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00335"/>00335 
<anchor xml:id="_basic__types_8hpp_source_1l00336"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01usint__t_01_4_1a5b3daf91bf3c10fab77819caac1b092c">00336</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_3_01usint__t_01_4_1a5b3daf91bf3c10fab77819caac1b092c">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_type_gt_this_type_v&lt;sint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">sint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">__sig_SInt_for_UInt_t&lt;uint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00343"/>00343 
<anchor xml:id="_basic__types_8hpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00345"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__f5c7e6520cd5a6a0cbb51fbfe418cdc8c">00345</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t">__sig_SInt_for_UInt_t</link>&lt;<link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>_type&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00348"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__f5c7e6520cd5a6a0cbb51fbfe418cdc8c_1ad8e6211f038b3cf53dbeec5ea98e9254">00348</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;int_type_gt_this_type_v&#32;=&#32;gt_sz_v&lt;int_type,uchint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00349"/>00349 
<anchor xml:id="_basic__types_8hpp_source_1l00350"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__f5c7e6520cd5a6a0cbb51fbfe418cdc8c_1a6bc2c0112c6d2cc4054fbc9eea1400b5">00350</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__f5c7e6520cd5a6a0cbb51fbfe418cdc8c_1a6bc2c0112c6d2cc4054fbc9eea1400b5">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_type_gt_this_type_v&lt;ssint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">ssint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">__sig_SInt_for_UInt_t&lt;usint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00357"/>00357 
<anchor xml:id="_basic__types_8hpp_source_1l00358"/>00358 
<anchor xml:id="_basic__types_8hpp_source_1l00359"/>00359 
<anchor xml:id="_basic__types_8hpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00361"/>00361 
<anchor xml:id="_basic__types_8hpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00363"/><link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">00363</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">sig_SInt_for_UInt_t</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__sig___s_int__for___u_int_1_1____sig___s_int__for___u_int__t_1af49eceee08b20b4e6dd4e3ac179e494d">ugly_details_sig_SInt_for_UInt::__sig_SInt_for_UInt_t&lt;UInt_t&gt;::type</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00365"/>00365 
<anchor xml:id="_basic__types_8hpp_source_1l00368"/><link linkend="_namespace_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int">00368</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ugly_details_UInt_for_SInt&#32;&#32;&#32;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SInt&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00370"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">00370</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>
<anchor xml:id="_basic__types_8hpp_source_1l00371"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_1ae9c82365041859dee1a533ef67d6ce0e">00371</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_1ae9c82365041859dee1a533ef67d6ce0e">type</link>&#32;=&#32;void;};
<anchor xml:id="_basic__types_8hpp_source_1l00372"/>00372 
<anchor xml:id="_basic__types_8hpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00374"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sint128__t_01_4">00374</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00375"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sint128__t_01_4_1a2fb40b332cde49f780fc5c5ed696f849">00375</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sint128__t_01_4_1a2fb40b332cde49f780fc5c5ed696f849">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00376"/>00376 
<anchor xml:id="_basic__types_8hpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00378"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01schint__t_01_4">00378</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08">schint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00379"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01schint__t_01_4_1aee6ac6fb8bf9ef40924cca1bb0fcc9a0">00379</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01schint__t_01_4_1aee6ac6fb8bf9ef40924cca1bb0fcc9a0">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00380"/>00380 
<anchor xml:id="_basic__types_8hpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00382"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01ssint__t_01_4">00382</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">ssint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00383"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01ssint__t_01_4_1ab1b35011e1d4d02940db255aa570c621">00383</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01ssint__t_01_4_1ab1b35011e1d4d02940db255aa570c621">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00384"/>00384 
<anchor xml:id="_basic__types_8hpp_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00386"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sint__t_01_4">00386</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">sint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00387"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sint__t_01_4_1a34a592b0a615dd7448442b91d9b0c00d">00387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sint__t_01_4_1a34a592b0a615dd7448442b91d9b0c00d">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00388"/>00388 
<anchor xml:id="_basic__types_8hpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00390"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01slint__t_01_4">00390</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">slint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00391"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01slint__t_01_4_1aa501584f9397f11567bc67d210a9a002">00391</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01slint__t_01_4_1aa501584f9397f11567bc67d210a9a002">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00392"/>00392 
<anchor xml:id="_basic__types_8hpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00394"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sllint__t_01_4">00394</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t">__sig_UInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">sllint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00395"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sllint__t_01_4_1aa30c0e9caacaf8d92fbe4eda67a7cf29">00395</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_3_01sllint__t_01_4_1aa30c0e9caacaf8d92fbe4eda67a7cf29">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00396"/>00396 
<anchor xml:id="_basic__types_8hpp_source_1l00397"/>00397 
<anchor xml:id="_basic__types_8hpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00399"/>00399 
<anchor xml:id="_basic__types_8hpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Int_t&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00401"/><link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">00401</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">sig_UInt_for_SInt_t</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___u_int__for___s_int_1_1____sig___u_int__for___s_int__t_1ae9c82365041859dee1a533ef67d6ce0e">ugly_details_UInt_for_SInt::__sig_UInt_for_SInt_t&lt;Int_t&gt;::type</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00403"/>00403 
<anchor xml:id="_basic__types_8hpp_source_1l00406"/><link linkend="_namespace_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int">00406</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ugly_details_SInt_for_SInt&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00407"/>00407 
<anchor xml:id="_basic__types_8hpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SInt&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00409"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">00409</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">__sig_SInt_for_SInt_t</link>
<anchor xml:id="_basic__types_8hpp_source_1l00410"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">00410</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">type</link>&#32;=&#32;void;};
<anchor xml:id="_basic__types_8hpp_source_1l00411"/>00411 
<anchor xml:id="_basic__types_8hpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00413"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sllint__t_01_4">00413</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">__sig_SInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">sllint_t</link>&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00414"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sllint__t_01_4_1af67e89f41b056345de037109dd9f799c">00414</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sllint__t_01_4_1af67e89f41b056345de037109dd9f799c">type</link>&#32;=&#32;<link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>;};
<anchor xml:id="_basic__types_8hpp_source_1l00415"/>00415 
<anchor xml:id="_basic__types_8hpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00417"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01slint__t_01_4">00417</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">__sig_SInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">slint_t</link>&gt;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">signed</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;SINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00419"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01slint__t_01_4_1aec7585d58a85ac8a6aa4d6090ad8cc0b">00419</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;signed_gt_signed_v&#32;=&#32;gt_sz_v&lt;SINT_T,slint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00420"/>00420 
<anchor xml:id="_basic__types_8hpp_source_1l00421"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01slint__t_01_4_1ac57951a7c5e413375de05ef101e1e1ed">00421</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01slint__t_01_4_1ac57951a7c5e413375de05ef101e1e1ed">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed_gt_signed_v&lt;sllint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a9d82304901860c9b6eb54079147861f9">sllint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">__sig_SInt_for_SInt_t&lt;sllint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00428"/>00428 
<anchor xml:id="_basic__types_8hpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00430"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sint__t_01_4">00430</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">__sig_SInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">sint_t</link>&gt;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00432"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sint__t_01_4_1a9d01401fc0830dc006319189c9f08c82">00432</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;signed_gt_signed_v&#32;=&#32;gt_sz_v&lt;SINT_T,sint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00433"/>00433 
<anchor xml:id="_basic__types_8hpp_source_1l00434"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sint__t_01_4_1a08d8d5b077075e6a6f55fc98acde7ac4">00434</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01sint__t_01_4_1a08d8d5b077075e6a6f55fc98acde7ac4">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed_gt_signed_v&lt;slint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121">slint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">__sig_SInt_for_SInt_t&lt;slint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00441"/>00441 
<anchor xml:id="_basic__types_8hpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00443"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01ssint__t_01_4">00443</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">__sig_SInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">ssint_t</link>&gt;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00445"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01ssint__t_01_4_1a047239ea583f9fd6802eb7c66f58ab34">00445</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;signed_gt_signed_v&#32;=&#32;gt_sz_v&lt;SINT_T,ssint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00446"/>00446 
<anchor xml:id="_basic__types_8hpp_source_1l00447"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01ssint__t_01_4_1a98e2a081548f7051c2b603cf2c140d04">00447</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01ssint__t_01_4_1a98e2a081548f7051c2b603cf2c140d04">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed_gt_signed_v&lt;sint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3">sint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">__sig_SInt_for_SInt_t&lt;sint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00454"/>00454 
<anchor xml:id="_basic__types_8hpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00456"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01schint__t_01_4">00456</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t">__sig_SInt_for_SInt_t</link>&lt;<link linkend="_namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08">schint_t</link>&gt;&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00458"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01schint__t_01_4_1a8534a65dd0dd70c73af0e265b61469be">00458</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;signed_gt_signed_v&#32;=&#32;gt_sz_v&lt;SINT_T,schint_t&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00459"/>00459 
<anchor xml:id="_basic__types_8hpp_source_1l00460"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01schint__t_01_4_1a75c74f1653c7ffc865f8639a6c3a9cd3">00460</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_3_01schint__t_01_4_1a75c74f1653c7ffc865f8639a6c3a9cd3">type</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signed_gt_signed_v&lt;ssint_t&gt;,
<anchor xml:id="_basic__types_8hpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd">ssint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">__sig_SInt_for_SInt_t&lt;ssint_t&gt;::type</link>
<anchor xml:id="_basic__types_8hpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00467"/>00467 
<anchor xml:id="_basic__types_8hpp_source_1l00468"/>00468 
<anchor xml:id="_basic__types_8hpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00470"/>00470 
<anchor xml:id="_basic__types_8hpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;SInt_t&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00472"/><link linkend="_namespace_num_repr_1_1type__traits_1ae5b5b95ff51b595abc85525d9ce48150">00472</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1ae5b5b95ff51b595abc85525d9ce48150">sig_SInt_for_SInt_t</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details___s_int__for___s_int_1_1____sig___s_int__for___s_int__t_1a81d8dde6672db80d2792f63450062a2c">ugly_details_SInt_for_SInt::__sig_SInt_for_SInt_t&lt;SInt_t&gt;::type</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00474"/>00474 
<anchor xml:id="_basic__types_8hpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00478"/><link linkend="_namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506">00478</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506">maxbase</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(std::numeric_limits&lt;UINT_T&gt;::max()));
<anchor xml:id="_basic__types_8hpp_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00481"/>00481 
<anchor xml:id="_basic__types_8hpp_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00483"/><link linkend="_namespace_num_repr_1_1type__traits_1ae6c52c70d58ecbc58b9ce8ddeff3c42e">00483</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ae6c52c70d58ecbc58b9ce8ddeff3c42e">submaxbase</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(maxbase&lt;UINT_T&gt;()-1);
<anchor xml:id="_basic__types_8hpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00486"/>00486 
<anchor xml:id="_basic__types_8hpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00488"/><link linkend="_namespace_num_repr_1_1type__traits_1a1a5c6f8a01fa8a777470dd479b3ae87a">00488</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a1a5c6f8a01fa8a777470dd479b3ae87a">minbase</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(2);
<anchor xml:id="_basic__types_8hpp_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00491"/>00491 
<anchor xml:id="_basic__types_8hpp_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00493"/><link linkend="_namespace_num_repr_1_1type__traits_1ae6d7996db2b7cdee98b72342bc0f976b">00493</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ae6d7996db2b7cdee98b72342bc0f976b">subminbase</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(3);
<anchor xml:id="_basic__types_8hpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00496"/>00496 
<anchor xml:id="_basic__types_8hpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00498"/><link linkend="_namespace_num_repr_1_1type__traits_1a3265677e1277882355b102f90ce5fc69">00498</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a3265677e1277882355b102f90ce5fc69">monobase</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(1);
<anchor xml:id="_basic__types_8hpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00501"/>00501 
<anchor xml:id="_basic__types_8hpp_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00503"/><link linkend="_namespace_num_repr_1_1type__traits_1a1d046b3da7103b9ca5a7dacb674f49f0">00503</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a1d046b3da7103b9ca5a7dacb674f49f0">nobase</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(0);
<anchor xml:id="_basic__types_8hpp_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00506"/>00506 
<anchor xml:id="_basic__types_8hpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00508"/><link linkend="_namespace_num_repr_1_1type__traits_1addc313fbab4434c736167b0510d95a97">00508</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1addc313fbab4434c736167b0510d95a97">maxdigit</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(submaxbase&lt;UINT_T&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00511"/>00511 
<anchor xml:id="_basic__types_8hpp_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00513"/><link linkend="_namespace_num_repr_1_1type__traits_1a7197bd8a89fcc647c18b49f63a1b49f5">00513</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a7197bd8a89fcc647c18b49f63a1b49f5">submaxdigit</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(submaxbase&lt;UINT_T&gt;()-1);
<anchor xml:id="_basic__types_8hpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00516"/>00516 
<anchor xml:id="_basic__types_8hpp_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00518"/><link linkend="_namespace_num_repr_1_1type__traits_1a8c8928703a18d48613b88d4eee0e967a">00518</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a8c8928703a18d48613b88d4eee0e967a">digit_0</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(0u);
<anchor xml:id="_basic__types_8hpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00521"/>00521 
<anchor xml:id="_basic__types_8hpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00523"/><link linkend="_namespace_num_repr_1_1type__traits_1ad0267c5c18b47ea7d823e17e735d1e42">00523</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ad0267c5c18b47ea7d823e17e735d1e42">digit_1</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(1u);
<anchor xml:id="_basic__types_8hpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00526"/>00526 
<anchor xml:id="_basic__types_8hpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00528"/><link linkend="_namespace_num_repr_1_1type__traits_1ad3c536f8264351b7aa3d9bd8e648d2e2">00528</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ad3c536f8264351b7aa3d9bd8e648d2e2">base_2</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(2u);
<anchor xml:id="_basic__types_8hpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00531"/>00531 
<anchor xml:id="_basic__types_8hpp_source_1l00532"/>00532 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00533"/><link linkend="_namespace_num_repr_1_1type__traits_1a7fe2595394f638eb83fc857ba0076f09">00533</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a7fe2595394f638eb83fc857ba0076f09">base_geqt_2</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(B&#32;&gt;=&#32;base_2&lt;UINT_T&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00536"/>00536 
<anchor xml:id="_basic__types_8hpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00538"/><link linkend="_namespace_num_repr_1_1type__traits_1a10f4b5abfc1e0a202341bf4481596e66">00538</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a10f4b5abfc1e0a202341bf4481596e66">base_leqt_max</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(B&#32;&lt;=&#32;maxbase&lt;UINT_T&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00541"/>00541 
<anchor xml:id="_basic__types_8hpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00543"/><link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">00543</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">suitable_base</link>()&#32;{&#32;<emphasis role="comment">//&#32;requires&#32;on&#32;B</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(base_geqt_2&lt;UINT_T,B&gt;()&#32;&amp;&amp;&#32;base_leqt_max&lt;UINT_T,B&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00546"/>00546 
<anchor xml:id="_basic__types_8hpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00548"/><link linkend="_namespace_num_repr_1_1type__traits_1ab7aafe6bcb405d5c200145181755984f">00548</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ab7aafe6bcb405d5c200145181755984f">middle_max</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG_UINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;SIG_UINT_T&#32;maximo&#32;=&#32;maxbase&lt;UINT_T&gt;();
<anchor xml:id="_basic__types_8hpp_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;SIG_UINT_T&#32;uno{1};
<anchor xml:id="_basic__types_8hpp_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;SIG_UINT_T&#32;dos{2};
<anchor xml:id="_basic__types_8hpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>((maximo+uno)/dos);
<anchor xml:id="_basic__types_8hpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00555"/>00555 
<anchor xml:id="_basic__types_8hpp_source_1l00556"/>00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00557"/><link linkend="_namespace_num_repr_1_1type__traits_1a9c68ad4f3469998252d88633edf8e908">00557</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9c68ad4f3469998252d88633edf8e908">sqrt_max</link>()&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG_UINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;SIG_UINT_T&#32;maximo{maxbase&lt;UINT_T&gt;()};
<anchor xml:id="_basic__types_8hpp_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;SIG_UINT_T&#32;uno{1};
<anchor xml:id="_basic__types_8hpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;SIG_UINT_T&#32;base{maximo+uno};
<anchor xml:id="_basic__types_8hpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;raiz_real{
<anchor xml:id="_basic__types_8hpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::sqrt(
<anchor xml:id="_basic__types_8hpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(
<anchor xml:id="_basic__types_8hpp_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>SIG_UINT_T<emphasis role="keyword">&gt;</emphasis>(base)
<anchor xml:id="_basic__types_8hpp_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_basic__types_8hpp_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_basic__types_8hpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(std::floor(raiz_real));
<anchor xml:id="_basic__types_8hpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00572"/>00572 
<anchor xml:id="_basic__types_8hpp_source_1l00575"/><link linkend="_namespace_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction">00575</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ugly_details_for_suitable_type_deduction&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;T&#32;Radix&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00577"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_for_radix">00577</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_for_radix">UIntTypeForRadix</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">int</emphasis>egral_c&#32;T,&#32;T&#32;Radix&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(Radix&#32;&gt;&#32;1)
<anchor xml:id="_basic__types_8hpp_source_1l00582"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed">00582</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_for_radix">UIntTypeForRadix&lt;T, Radix&gt;</link>&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00583"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1ada0266dfa9df721dbe57ef961c5d9402">00583</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_0_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(maxbase&lt;uchint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00584"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a52ddee9fa32a9c504fe6f45e642feb4d">00584</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_1_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(maxbase&lt;usint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00585"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a9779da56ee3c235a4212de95f07b2043">00585</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_2_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(maxbase&lt;uint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00586"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a982aac1fa3bcb76e1ae05c9dd9a9bc97">00586</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_3_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(maxbase&lt;ulint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00587"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a06ff9bd1233d7701f646b3819468d6b8">00587</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_4_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(maxbase&lt;ullint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00588"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a381738874e7eaeb0f8b4cbcc69cd39cf">00588</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(Radix);
<anchor xml:id="_basic__types_8hpp_source_1l00589"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a702620cb6ed7e034471a6293137d6d17">00589</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_3b69b34bf7723119f9a319c535d4b0ed_1a702620cb6ed7e034471a6293137d6d17">UIntType</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_0_max,
<anchor xml:id="_basic__types_8hpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_1_max,
<anchor xml:id="_basic__types_8hpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_2_max,
<anchor xml:id="_basic__types_8hpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_3_max,
<anchor xml:id="_basic__types_8hpp_source_1l00601"/>00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1luint_value&#32;&lt;=&#32;uint_value_4_max,
<anchor xml:id="_basic__types_8hpp_source_1llink linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1llink linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>
<anchor xml:id="_basic__types_8hpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00613"/>00613 
<anchor xml:id="_basic__types_8hpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>ugly_details_for_suitable_type_deduction;
<anchor xml:id="_basic__types_8hpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;ull<emphasis role="keywordtype">int</emphasis>_t&#32;Radix&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00620"/><link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">00620</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__suitable__type__deduction_1_1_u_int_type_for_radix">UIntTypeForRadix</link>&lt;<emphasis role="keyword">decltype</emphasis>(Radix),Radix&gt;::UIntType;
<anchor xml:id="_basic__types_8hpp_source_1l00622"/>00622 
<anchor xml:id="_basic__types_8hpp_source_1l00623"/>00623 
<anchor xml:id="_basic__types_8hpp_source_1l00627"/><link linkend="_namespace_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction">00627</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">namespace&#32;</emphasis>ugly_details_for_greater_suitable_type_deduction&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;T&#32;Radix&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00629"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e73c7ba18a323e7d8eda21299da56319">00629</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e73c7ba18a323e7d8eda21299da56319">UIntTypeForRadixContainsMultResult</link>;
<anchor xml:id="_basic__types_8hpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">int</emphasis>egral_c&#32;T,&#32;T&#32;Radix&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(Radix&#32;&gt;&#32;1)
<anchor xml:id="_basic__types_8hpp_source_1l00634"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef">00634</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e73c7ba18a323e7d8eda21299da56319">UIntTypeForRadixContainsMultResult&lt;T, Radix&gt;</link>&#32;{
<anchor xml:id="_basic__types_8hpp_source_1l00635"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1a259ff62ca37df44de1dce59715f0e8e0">00635</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_0_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(sqrt_max&lt;uchint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00636"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1a2be4ef20127d49eff43b607c7c9a67a9">00636</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_1_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(sqrt_max&lt;usint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00637"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1ae8e3b72992a8c7ddfdfc1075005be1d9">00637</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_2_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(sqrt_max&lt;uint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00638"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1a792dab0cd90dad3a8b3c42ceb32537e6">00638</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_3_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(sqrt_max&lt;ulint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00639"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1a8f530882bfbf045ffaf88f354266105b">00639</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value_4_max&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(sqrt_max&lt;ullint_t&gt;());
<anchor xml:id="_basic__types_8hpp_source_1l00640"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1aab81e2ce7f3466cc6ca227df409fb9d8">00640</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link><emphasis role="keyword">&gt;</emphasis>(Radix);
<anchor xml:id="_basic__types_8hpp_source_1l00641"/><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1a6254e16ed5823de3c7ebf3ea4d1d4792">00641</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e88b3502a0fe8dbb9cc27393bb43baef_1a6254e16ed5823de3c7ebf3ea4d1d4792">UIntType</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_0_max,
<anchor xml:id="_basic__types_8hpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f">uchint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_1_max,
<anchor xml:id="_basic__types_8hpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a">usint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_2_max,
<anchor xml:id="_basic__types_8hpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1abe459c705a15614f17087479127dab9f">uint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;&lt;=&#32;uint_value_3_max,
<anchor xml:id="_basic__types_8hpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76">ulint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::conditional_t&lt;
<anchor xml:id="_basic__types_8hpp_source_1luint_value&#32;&lt;=&#32;uint_value_4_max,
<anchor xml:id="_basic__types_8hpp_source_1llink linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>,
<anchor xml:id="_basic__types_8hpp_source_1llink linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link>
<anchor xml:id="_basic__types_8hpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_basic__types_8hpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_basic__types_8hpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_basic__types_8hpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>ugly_details_for_greater_suitable_type_deduction;
<anchor xml:id="_basic__types_8hpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">int</emphasis>egral_c&#32;IntType,&#32;IntType&#32;Radix&gt;
<anchor xml:id="_basic__types_8hpp_source_1l00671"/><link linkend="_namespace_num_repr_1_1type__traits_1ab19d1b291fb456e9c4d734340c99152e">00671</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1ab19d1b291fb456e9c4d734340c99152e">GreaterTypeFromIntNumber_t</link>&#32;=
<anchor xml:id="_basic__types_8hpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1type__traits_1_1ugly__details__for__greater__suitable__type__deduction_1_1_u_e73c7ba18a323e7d8eda21299da56319">UIntTypeForRadixContainsMultResult</link>&lt;<emphasis role="keyword">decltype</emphasis>(Radix),Radix&gt;::UIntType;
<anchor xml:id="_basic__types_8hpp_source_1l00673"/>00673 }<emphasis role="comment">//&#32;END&#32;NAMESPACE&#32;TYPE_TRAITS</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00674"/>00674 }<emphasis role="comment">//&#32;END&#32;NAMESPACE&#32;NUMREPR</emphasis>
<anchor xml:id="_basic__types_8hpp_source_1l00675"/>00675 
<anchor xml:id="_basic__types_8hpp_source_1l00676"/>00676 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;BASIC_TYPES_HPP_INCLUDED</emphasis>
</programlisting></section>
