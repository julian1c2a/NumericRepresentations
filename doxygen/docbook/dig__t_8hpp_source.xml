<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_dig__t_8hpp_source" xml:lang="es">
<title>dig_t.hpp</title>
<indexterm><primary>dig_t.hpp</primary></indexterm>
Ir a la documentaci√≥n de este archivo.<programlisting linenumbering="unnumbered"><anchor xml:id="_dig__t_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;DIG_T_HPP_INCLUDED</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;DIG_T_HPP_INCLUDED</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00003"/>00003 
<anchor xml:id="_dig__t_8hpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_auxiliary__functions_8hpp">auxiliary_functions.hpp</link>&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_auxiliary__types_8hpp">auxiliary_types.hpp</link>&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lexer__parser_8hpp">lexer_parser.hpp</link>&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00007"/>00007 
<anchor xml:id="_dig__t_8hpp_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_num_repr">NumRepr</link>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00009"/>00009 <emphasis role="keyword">using&#32;</emphasis>type_traits::uint_type_for_radix_c;
<anchor xml:id="_dig__t_8hpp_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00012"/>00012 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">type_traits::sig_SInt_for_UInt_t</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00013"/>00013 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506">type_traits::maxbase</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00017"/>00017 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,&#32;UINT_T&#32;B&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(suitable_base&lt;UINT_T,B&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l00019"/><link linkend="_struct_num_repr_1_1dig__t">00019</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00020"/>00020 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l00021"/><link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">00021</link> UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">m_d</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00022"/>00022 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SIG_UINT_T(uchint)&#32;-&gt;&#32;usint</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00024"/><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;SIG_SINT_T(uchint)&#32;-&gt;&#32;ssint</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00026"/><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">00026</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">sig_SInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00027"/>00027 
<anchor xml:id="_dig__t_8hpp_source_1l00028"/><link linkend="_struct_num_repr_1_1dig__t_1ae38e5e04d4c6c8993e3abc8d0e777efb">00028</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1ae38e5e04d4c6c8993e3abc8d0e777efb">uintspair</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::array&lt;UINT_T,2&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l00029"/><link linkend="_struct_num_repr_1_1dig__t_1a1051e56dae889dea37c0fc56c629ef47">00029</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a1051e56dae889dea37c0fc56c629ef47">digspair</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::array&lt;dig_t,2&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l00030"/><link linkend="_struct_num_repr_1_1dig__t_1a018d699b224ca5c7f35dfc5ed5882df9">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a018d699b224ca5c7f35dfc5ed5882df9">uintspairlist</link>&#32;=&#32;std::array&lt;uintspair,B&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l00031"/><link linkend="_struct_num_repr_1_1dig__t_1a66b00dc8a233028c0b8af1d6c8c968df">00031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a66b00dc8a233028c0b8af1d6c8c968df">uintspairtbl</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::array&lt;uintspairlist,B&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l00032"/>00032 
<anchor xml:id="_dig__t_8hpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;binop_e&#32;op&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00034"/><link linkend="_struct_num_repr_1_1dig__t_1ad0179be562c80f204f00fa63ee87f595">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1auxiliary__types_1_1resbinop__t">resbinop_t</link>&#32;=&#32;<link linkend="_struct_num_repr_1_1auxiliary__types_1_1resbinop__t">auxiliary_types::resbinop_t&lt;dig_t,op&gt;</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00035"/>00035 
<anchor xml:id="_dig__t_8hpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;UINT_T&#32;n,UINT_T&#32;m&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((n&lt;B)&amp;&amp;(m&lt;B))
<anchor xml:id="_dig__t_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00041"/><link linkend="_struct_num_repr_1_1dig__t_1a61783752fb9fa2c63d85aeb2a386abd5">00041</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae38e5e04d4c6c8993e3abc8d0e777efb">uintspair</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a61783752fb9fa2c63d85aeb2a386abd5">mult</link>()
<anchor xml:id="_dig__t_8hpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;&gt;&#32;type_traits::sqrt_max&lt;UINT_T&gt;())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;sup_n{n};
<anchor xml:id="_dig__t_8hpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;sup_m{m};
<anchor xml:id="_dig__t_8hpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;result{sup_n&#32;*&#32;sup_m};
<anchor xml:id="_dig__t_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;ret_1{result/B};&#32;<emphasis role="comment">//&#32;&quot;DECENAS&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;ret_0{result%B};&#32;<emphasis role="comment">//&#32;&quot;UNIDADES&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae38e5e04d4c6c8993e3abc8d0e777efb">uintspair</link>&#32;ret{ret_1,ret_0};
<anchor xml:id="_dig__t_8hpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;result{n&#32;*&#32;m};
<anchor xml:id="_dig__t_8hpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;ret_1{result/B};&#32;<emphasis role="comment">//&#32;&quot;DECENAS&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;ret_0{result%B};&#32;<emphasis role="comment">//&#32;&quot;UNIDADES&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae38e5e04d4c6c8993e3abc8d0e777efb">uintspair</link>&#32;ret{ret_1,ret_0};
<anchor xml:id="_dig__t_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00113"/>00113 
<anchor xml:id="_dig__t_8hpp_source_1l00114"/>00114 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l00115"/>00115 
<anchor xml:id="_dig__t_8hpp_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00117"/><link linkend="_struct_num_repr_1_1dig__t_1aafdbf9ec2e1c2c693053bddc9c3da18b">00117</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;UINT_T()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_d;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00119"/>00119 
<anchor xml:id="_dig__t_8hpp_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00121"/><link linkend="_struct_num_repr_1_1dig__t_1a41f650033f842a57e20462acf2d56bd3">00121</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UINT_T&amp;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a41f650033f842a57e20462acf2d56bd3">get</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d);&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00123"/>00123 
<anchor xml:id="_dig__t_8hpp_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00125"/><link linkend="_struct_num_repr_1_1dig__t_1a98f3c67f12b327b29cb7dd956979aa6b">00125</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(m_d);&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00127"/>00127 
<anchor xml:id="_dig__t_8hpp_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">explicit</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00129"/><link linkend="_struct_num_repr_1_1dig__t_1a11aa8890a01df04bb8c78e36b1671bcb">00129</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(m_d);&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00131"/>00131 
<anchor xml:id="_dig__t_8hpp_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00133"/><link linkend="_struct_num_repr_1_1dig__t_1aad3081cc834a2404026c745da3a19624">00133</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1aad3081cc834a2404026c745da3a19624">operator()</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d);&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00137"/>00137 
<anchor xml:id="_dig__t_8hpp_source_1l00138"/><link linkend="_struct_num_repr_1_1dig__t_1ab4dcf1d753e748b3d6b7a1060fab4ef6">00138</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ab4dcf1d753e748b3d6b7a1060fab4ef6">set_0</link>()&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00141"/><link linkend="_struct_num_repr_1_1dig__t_1a0c80d7466c95459dd00be306eead4646">00141</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a0c80d7466c95459dd00be306eead4646">set_1</link>()&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;1;
<anchor xml:id="_dig__t_8hpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00144"/><link linkend="_struct_num_repr_1_1dig__t_1a3b378922ef3003a5c8ea7a243a4a8303">00144</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a3b378922ef3003a5c8ea7a243a4a8303">set_Bm1</link>()&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;B-1;
<anchor xml:id="_dig__t_8hpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00147"/><link linkend="_struct_num_repr_1_1dig__t_1ad56cccb9f0884cea668bacef17054f72">00147</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ad56cccb9f0884cea668bacef17054f72">set_Bm2</link>()&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;B-2;
<anchor xml:id="_dig__t_8hpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00150"/>00150 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l00152"/><link linkend="_struct_num_repr_1_1dig__t_1a2e4a2d001d8b4a6e97639da50e33d3cb">00152</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a2e4a2d001d8b4a6e97639da50e33d3cb">is_prime</link>()&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1_1auxiliary__functions_1a6a368b190a18264af00c59b164dc1096">auxiliary_functions::is_prime</link>(<emphasis role="keyword">static_cast&lt;</emphasis>std::size_t<emphasis role="keyword">&gt;</emphasis>(B));
<anchor xml:id="_dig__t_8hpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00156"/><link linkend="_struct_num_repr_1_1dig__t_1a4295924ee3603c94ef1f1c7d83976be8">00156</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a4295924ee3603c94ef1f1c7d83976be8">dig_max</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(B-1u);};
<anchor xml:id="_dig__t_8hpp_source_1l00157"/><link linkend="_struct_num_repr_1_1dig__t_1a2f8231e5cfedba8aaef0a404ca8df5d5">00157</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a2f8231e5cfedba8aaef0a404ca8df5d5">dig_submax</link>()&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(B-2u);}
<anchor xml:id="_dig__t_8hpp_source_1l00158"/><link linkend="_struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856">00158</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856">dig_Bm1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(B-1u);}
<anchor xml:id="_dig__t_8hpp_source_1l00159"/><link linkend="_struct_num_repr_1_1dig__t_1a326196de3bd9537e5c23df66440b8a56">00159</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a326196de3bd9537e5c23df66440b8a56">dig_Bm2</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(B-2u);}
<anchor xml:id="_dig__t_8hpp_source_1l00160"/><link linkend="_struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3">00160</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3">dig_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>();}
<anchor xml:id="_dig__t_8hpp_source_1l00161"/><link linkend="_struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c">00161</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c">dig_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(1u);}
<anchor xml:id="_dig__t_8hpp_source_1l00163"/><link linkend="_struct_num_repr_1_1dig__t_1a91e737faa7255b8706deb3220ceaa336">00163</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1a91e737faa7255b8706deb3220ceaa336">ui_max</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(B-1u);}
<anchor xml:id="_dig__t_8hpp_source_1l00164"/><link linkend="_struct_num_repr_1_1dig__t_1a73c90f6b9bab2442e884cc30b0af258f">00164</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1a73c90f6b9bab2442e884cc30b0af258f">ui_submax</link>()&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(B-2u);}
<anchor xml:id="_dig__t_8hpp_source_1l00165"/><link linkend="_struct_num_repr_1_1dig__t_1a7cdf0d9df3dedb75f66d4d7eda2e2da5">00165</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1a7cdf0d9df3dedb75f66d4d7eda2e2da5">ui_Bm1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(B-1u);}
<anchor xml:id="_dig__t_8hpp_source_1l00166"/><link linkend="_struct_num_repr_1_1dig__t_1aaac3a2d93ea02d4860644ede5dc38506">00166</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1aaac3a2d93ea02d4860644ede5dc38506">ui_Bm2</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(B-2u);}
<anchor xml:id="_dig__t_8hpp_source_1l00167"/><link linkend="_struct_num_repr_1_1dig__t_1a76b5c675bb32de9c1803da4dd804d8e4">00167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1a76b5c675bb32de9c1803da4dd804d8e4">ui_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(0u);}
<anchor xml:id="_dig__t_8hpp_source_1l00168"/><link linkend="_struct_num_repr_1_1dig__t_1a7abd8bcb3f0bd6b749488dfad8e56da5">00168</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1a7abd8bcb3f0bd6b749488dfad8e56da5">ui_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(1u);}
<anchor xml:id="_dig__t_8hpp_source_1l00170"/><link linkend="_struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9">00170</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9">sui_B</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00173"/><link linkend="_struct_num_repr_1_1dig__t_1a9684eea2c5657f412de910eea97817c7">00173</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a9684eea2c5657f412de910eea97817c7">sui_max</link>()&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(B-1u);
<anchor xml:id="_dig__t_8hpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00176"/><link linkend="_struct_num_repr_1_1dig__t_1a9df237777f14cf1ebc8d550a885260ff">00176</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a9df237777f14cf1ebc8d550a885260ff">sui_submax</link>()&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(B-2u);
<anchor xml:id="_dig__t_8hpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00179"/><link linkend="_struct_num_repr_1_1dig__t_1aeb3cb9d0b23b1c211dff853083a6fe83">00179</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1aeb3cb9d0b23b1c211dff853083a6fe83">sui_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(0u);
<anchor xml:id="_dig__t_8hpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00182"/><link linkend="_struct_num_repr_1_1dig__t_1a43a4e505e240a8f1ad75f5ad5f8d1353">00182</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a43a4e505e240a8f1ad75f5ad5f8d1353">sui_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(1u);
<anchor xml:id="_dig__t_8hpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00186"/><link linkend="_struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179">00186</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179">ssi_B</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00189"/><link linkend="_struct_num_repr_1_1dig__t_1ae42291bd38bbbaffa802f75d6a1baeab">00189</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae42291bd38bbbaffa802f75d6a1baeab">ssi_max</link>()&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(B-1u);
<anchor xml:id="_dig__t_8hpp_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00192"/><link linkend="_struct_num_repr_1_1dig__t_1a73855570e049a9b032a7a49587fb6d90">00192</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a73855570e049a9b032a7a49587fb6d90">ssi_submax</link>()&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(B-2u);
<anchor xml:id="_dig__t_8hpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00195"/><link linkend="_struct_num_repr_1_1dig__t_1a287219a289b34f6f682e318b3ca1f92c">00195</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a287219a289b34f6f682e318b3ca1f92c">ssi_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(0u);
<anchor xml:id="_dig__t_8hpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00198"/><link linkend="_struct_num_repr_1_1dig__t_1af8eebfebac403516d028ecce97b98d63">00198</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1af8eebfebac403516d028ecce97b98d63">ssi_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(1u);
<anchor xml:id="_dig__t_8hpp_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00202"/>00202 
<anchor xml:id="_dig__t_8hpp_source_1l00203"/>00203 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l00204"/>00204 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;CONSTRUIR&#32;DIGITO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00208"/>00208 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00209"/>00209 
<anchor xml:id="_dig__t_8hpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00213"/><link linkend="_struct_num_repr_1_1dig__t_1aada07ff4de9c24f4824b65107df7ad68">00213</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1aada07ff4de9c24f4824b65107df7ad68">dig_t</link>()&#32;noexcept&#32;:&#32;m_d(0u)&#32;{}
<anchor xml:id="_dig__t_8hpp_source_1l00214"/>00214 
<anchor xml:id="_dig__t_8hpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00219"/><link linkend="_struct_num_repr_1_1dig__t_1a879e2a4684c282b6449f23a262c91ce3">00219</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT_T&#32;<link linkend="_struct_num_repr_1_1dig__t_1a879e2a4684c282b6449f23a262c91ce3">normaliza</link>(Int_t&#32;arg)
<anchor xml:id="_dig__t_8hpp_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(std::is_same_v&lt;Int_t,UINT_T&gt;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(arg%B);
<anchor xml:id="_dig__t_8hpp_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(std::is_signed_v&lt;Int_t&gt;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(
<anchor xml:id="_dig__t_8hpp_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_traits::maxbase&lt;Int_t&gt;()
<anchor xml:id="_dig__t_8hpp_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;=
<anchor xml:id="_dig__t_8hpp_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;type_traits::maxbase&lt;SIG_SINT_T&gt;()
<anchor xml:id="_dig__t_8hpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;Int_t&#32;sint_0{0};&#32;<emphasis role="comment">//&#32;ssi_0()</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;Int_t&#32;sint_B{B};&#32;<emphasis role="comment">//&#32;ssi_B()</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int_t&#32;cparg{arg};
<anchor xml:id="_dig__t_8hpp_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&lt;sint_0)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int_t&#32;coc{(-arg)/sint_B};
<anchor xml:id="_dig__t_8hpp_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;*=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;+=&#32;coc;
<anchor xml:id="_dig__t_8hpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&lt;0)
<anchor xml:id="_dig__t_8hpp_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;+=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&gt;=sint_B)
<anchor xml:id="_dig__t_8hpp_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;-=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;%=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(cparg);
<anchor xml:id="_dig__t_8hpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;sint_0{0};
<anchor xml:id="_dig__t_8hpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;sint_B{B};
<anchor xml:id="_dig__t_8hpp_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;cparg{arg};
<anchor xml:id="_dig__t_8hpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&lt;sint_0)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;coc{(-arg)/sint_B};
<anchor xml:id="_dig__t_8hpp_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;*=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;+=&#32;coc;
<anchor xml:id="_dig__t_8hpp_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&lt;0)
<anchor xml:id="_dig__t_8hpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;+=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&gt;=sint_B)
<anchor xml:id="_dig__t_8hpp_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;-=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00259"/>00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00260"/>00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00261"/>00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;%=&#32;sint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(cparg);
<anchor xml:id="_dig__t_8hpp_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(maxbase&lt;Int_t&gt;()&#32;&lt;&#32;maxbase&lt;UINT_T&gt;()&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;uint_B{B};
<anchor xml:id="_dig__t_8hpp_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;cparg{arg};
<anchor xml:id="_dig__t_8hpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&#32;&gt;=&#32;uint_B)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;%=&#32;uint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(cparg);
<anchor xml:id="_dig__t_8hpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;Int_t&#32;uint_B{B};
<anchor xml:id="_dig__t_8hpp_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int_t&#32;cparg{arg};
<anchor xml:id="_dig__t_8hpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&#32;&gt;=&#32;uint_B)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;%=&#32;uint_B;
<anchor xml:id="_dig__t_8hpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(cparg);
<anchor xml:id="_dig__t_8hpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00285"/>00285 
<anchor xml:id="_dig__t_8hpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00290"/><link linkend="_struct_num_repr_1_1dig__t_1a6a88c25f113c10a3e960dff6bc83209d">00290</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6a88c25f113c10a3e960dff6bc83209d">dig_t</link>(Int_t&#32;arg)&#32;noexcept&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d(normaliza&lt;Int_t&gt;(arg))
<anchor xml:id="_dig__t_8hpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
<anchor xml:id="_dig__t_8hpp_source_1l00293"/>00293 
<anchor xml:id="_dig__t_8hpp_source_1l00295"/><link linkend="_struct_num_repr_1_1dig__t_1af0449bb155f32b9f4d0a77616be964f5">00295</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1af0449bb155f32b9f4d0a77616be964f5">dig_t</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00297"/><link linkend="_struct_num_repr_1_1dig__t_1a0271247936d99587c10e4e7f793eca59">00297</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a0271247936d99587c10e4e7f793eca59">dig_t</link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&amp;)&#32;noexcept&#32;=&#32;default;
<anchor xml:id="_dig__t_8hpp_source_1l00298"/>00298 
<anchor xml:id="_dig__t_8hpp_source_1l00304"/>00304 
<anchor xml:id="_dig__t_8hpp_source_1l00305"/>00305 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;OPERADORES&#32;DE&#32;ASIGNACION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00309"/>00309 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00310"/>00310 
<anchor xml:id="_dig__t_8hpp_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;template&lt;type_traits::integral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constexpr&#32;inline
<anchor xml:id="_dig__t_8hpp_source_1l00314"/><link linkend="_struct_num_repr_1_1dig__t_1ae1e378970227631d984b568c6e87aea9">00314</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;=&#32;(const&#32;Int_t&#32;&amp;&#32;a)
<anchor xml:id="_dig__t_8hpp_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(std::is_same_v&lt;Int_t,UINT_T&gt;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&amp;a&#32;!=&#32;&amp;m_d)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;normaliza&lt;Int_t&gt;(a);
<anchor xml:id="_dig__t_8hpp_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;normaliza&lt;Int_t&gt;(a);
<anchor xml:id="_dig__t_8hpp_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00327"/><link linkend="_struct_num_repr_1_1dig__t_1a2c7df43b2672d12d58b0170564b65067">00327</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;=&#32;<emphasis role="keywordflow">default</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00329"/><link linkend="_struct_num_repr_1_1dig__t_1acd2c86722aea84ff8caa599f46143096">00329</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;=&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&amp;)&#32;noexcept&#32;=&#32;default;
<anchor xml:id="_dig__t_8hpp_source_1l00333"/>00333 
<anchor xml:id="_dig__t_8hpp_source_1l00337"/>00337 
<anchor xml:id="_dig__t_8hpp_source_1l00338"/><link linkend="_struct_num_repr_1_1dig__t_1aecc930e8cb3dbc3ede5beeff11ef77ee">00338</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;constexpr&#32;inline&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_unit()&#32;const&#32;noexcept&#32;{&#32;<emphasis role="comment">//&#32;FROM&#32;FINITE&#32;RINGS</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00343"/>00343 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(is_prime())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!is_0())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_1())
<anchor xml:id="_dig__t_8hpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(std::gcd(B,&#32;m_d)&#32;!=&#32;<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>())
<anchor xml:id="_dig__t_8hpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00361"/>00361 
<anchor xml:id="_dig__t_8hpp_source_1l00362"/><link linkend="_struct_num_repr_1_1dig__t_1a48f6d7f54f227eaf337438fccd8b9ff4">00362</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a48f6d7f54f227eaf337438fccd8b9ff4">is_0_divisor</link>()&#32;const&#32;noexcept&#32;{&#32;<emphasis role="comment">//&#32;FROM&#32;FINITE&#32;RINGS</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00367"/>00367 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(is_prime())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_0())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_0())
<anchor xml:id="_dig__t_8hpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(std::gcd(B,m_d)!=<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>())
<anchor xml:id="_dig__t_8hpp_source_1l00379"/>00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00384"/>00384 
<anchor xml:id="_dig__t_8hpp_source_1l00385"/><link linkend="_struct_num_repr_1_1dig__t_1aa62606aacfd127f2670db23a727e1689">00385</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1aa62606aacfd127f2670db23a727e1689">mult_inv</link>()&#32;const&#32;noexcept&#32;{&#32;<emphasis role="comment">//&#32;FROM&#32;FINITE&#32;RINGS</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_unit())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_1())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00389"/>00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_Bm1())&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5">dig_max</link>();
<anchor xml:id="_dig__t_8hpp_source_1l00391"/>00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;index(2);&#32;!is_Bm1();&#32;++index)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00393"/>00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(index.is_unit())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis&#32;*&#32;index).is_1())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;index;
<anchor xml:id="_dig__t_8hpp_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00398"/>00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00405"/>00405 
<anchor xml:id="_dig__t_8hpp_source_1l00406"/>00406 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;FUNCIONES&#32;PARA&#32;CONOCER&#32;EL&#32;CARRY&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00410"/>00410 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00411"/>00411 
<anchor xml:id="_dig__t_8hpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00413"/><link linkend="_struct_num_repr_1_1dig__t_1a081c0bf1162ff858903c226cb48b08e8">00413</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a081c0bf1162ff858903c226cb48b08e8">sum_carry</link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg_1,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg_2)
<anchor xml:id="_dig__t_8hpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;&lt;=&#32;type_traits::middle_max&lt;UINT_T&gt;())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;((B%2)&#32;==&#32;0)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;Bdiv2{B/2};
<anchor xml:id="_dig__t_8hpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((arg_1()&#32;&lt;&#32;Bdiv2)&amp;&amp;(arg_2()&#32;&lt;&#32;Bdiv2))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((arg_1()&#32;&gt;=&#32;Bdiv2)&amp;&amp;(arg_2()&#32;&gt;=&#32;Bdiv2))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;arg_1()&#32;&gt;=&#32;B-arg_2()&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;Bdiv2_1{B/2};
<anchor xml:id="_dig__t_8hpp_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;UINT_T&#32;Bdiv2_2{(B/2)+1};
<anchor xml:id="_dig__t_8hpp_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;&#32;&#32;((arg_1()&#32;&lt;&#32;Bdiv2_1)&amp;&amp;(arg_2()&#32;&lt;&#32;Bdiv2_2))
<anchor xml:id="_dig__t_8hpp_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;((arg_1()&#32;&lt;&#32;Bdiv2_2)&amp;&amp;(arg_2()&#32;&lt;&#32;Bdiv2_1))
<anchor xml:id="_dig__t_8hpp_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((arg_1()&#32;&gt;=&#32;Bdiv2_1)&amp;&amp;(arg_2()&#32;&gt;=&#32;Bdiv2_2))
<anchor xml:id="_dig__t_8hpp_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||((arg_1()&#32;&gt;=&#32;Bdiv2_2)&amp;&amp;(arg_2()&#32;&gt;=&#32;Bdiv2_1))
<anchor xml:id="_dig__t_8hpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;arg_1()&#32;&gt;=&#32;B-arg_2()&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;((B%2)&#32;==&#32;0)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;Bdiv2{B/2};
<anchor xml:id="_dig__t_8hpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((arg_1()&#32;&lt;&#32;Bdiv2)&amp;&amp;(arg_2()&#32;&lt;&#32;Bdiv2))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((arg_1()&#32;&gt;=&#32;Bdiv2)&amp;&amp;(arg_2()&#32;&gt;=&#32;Bdiv2))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;arg_1()&#32;&gt;=&#32;B-arg_2()&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;Bdiv2_1{B/2};
<anchor xml:id="_dig__t_8hpp_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;Bdiv2_2{(B/2)+1};
<anchor xml:id="_dig__t_8hpp_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;&#32;&#32;((arg_1()&#32;&lt;&#32;Bdiv2_1)&amp;&amp;(arg_2()&#32;&lt;&#32;Bdiv2_2))
<anchor xml:id="_dig__t_8hpp_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;((arg_1()&#32;&lt;&#32;Bdiv2_2)&amp;&amp;(arg_2()&#32;&lt;&#32;Bdiv2_1))
<anchor xml:id="_dig__t_8hpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((arg_1()&#32;&gt;=&#32;Bdiv2_1)&amp;&amp;(arg_2()&#32;&gt;=&#32;Bdiv2_2))
<anchor xml:id="_dig__t_8hpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||((arg_1()&#32;&gt;=&#32;Bdiv2_2)&amp;&amp;(arg_2()&#32;&gt;=&#32;Bdiv2_1))
<anchor xml:id="_dig__t_8hpp_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;arg_1()&#32;&gt;=&#32;B-arg_2()&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig_0();
<anchor xml:id="_dig__t_8hpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00475"/>00475 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;OPERADORES&#32;&amp;&#32;&amp;=&#32;|&#32;|=&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;FUNCIONAN&#32;COMO&#32;MAX&#32;Y&#32;MIN&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00480"/>00480 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00481"/>00481 
<anchor xml:id="_dig__t_8hpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00485"/><link linkend="_struct_num_repr_1_1dig__t_1aaad1f6b6c362bb8b79e308d8dbd3623e">00485</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_namespace_num_repr_1a342a2a8c42d37ee5900c73815b5f289b">operator &amp; </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((*<emphasis role="keyword">this</emphasis>)&lt;=arg)?(*<emphasis role="keyword">this</emphasis>):arg);
<anchor xml:id="_dig__t_8hpp_source_1l00489"/>00489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00490"/>00490 
<anchor xml:id="_dig__t_8hpp_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00494"/><link linkend="_struct_num_repr_1_1dig__t_1aadb521540be446f8f6affbe08593f521">00494</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1a0a2d2cfc3bfc462709ba6cc17b5cd0d4">operator &amp;= </link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)
<anchor xml:id="_dig__t_8hpp_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&#32;&lt;&#32;(*<emphasis role="keyword">this</emphasis>))
<anchor xml:id="_dig__t_8hpp_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*this)&#32;=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00501"/>00501 
<anchor xml:id="_dig__t_8hpp_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00505"/><link linkend="_struct_num_repr_1_1dig__t_1a3794e0222d9b563c1692006bba0af83e">00505</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_namespace_num_repr_1a688d5f9678ad6dca21557cc629c46c8e">operator | </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00508"/>00508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(((*<emphasis role="keyword">this</emphasis>)&gt;=arg)?(*<emphasis role="keyword">this</emphasis>):arg);
<anchor xml:id="_dig__t_8hpp_source_1l00509"/>00509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00510"/>00510 
<anchor xml:id="_dig__t_8hpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00514"/><link linkend="_struct_num_repr_1_1dig__t_1ab917ba177adf7c56596f814db3bc3e26">00514</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1af300f03bc135c81afa3965c905feda49">operator |= </link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)
<anchor xml:id="_dig__t_8hpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg&#32;&gt;&#32;(*<emphasis role="keyword">this</emphasis>))
<anchor xml:id="_dig__t_8hpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*this)&#32;=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00521"/>00521 
<anchor xml:id="_dig__t_8hpp_source_1l00522"/>00522 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/******************************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;OPERADORES&#32;*^n&#32;*^=nemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;FUNCIONAN&#32;COMO&#32;Power(*,n)&#32;y&#32;n&#32;=&#32;Power(*,n)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;DONDE&#32;nemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00528"/>00528 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/******************************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00529"/>00529 
<anchor xml:id="_dig__t_8hpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;UIntType&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00532"/><link linkend="_struct_num_repr_1_1dig__t_1abcc6416630883d3061eb2cc4a2b19b6d">00532</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;^=&#32;(UIntType&#32;exp)
<anchor xml:id="_dig__t_8hpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exp&#32;==&#32;0)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;=&#32;dig_1();
<anchor xml:id="_dig__t_8hpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_dig__t_8hpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exp&#32;==&#32;1)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_dig__t_8hpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(exp&#32;==&#32;2)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;*=&#32;cthis;
<anchor xml:id="_dig__t_8hpp_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_dig__t_8hpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&#32;vthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00549"/>00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;*=&#32;vthis;
<anchor xml:id="_dig__t_8hpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(UIntType&#32;ix{2}&#32;;&#32;ix&#32;&lt;&#32;exp&#32;;&#32;++ix)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;*=&#32;vthis;
<anchor xml:id="_dig__t_8hpp_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_dig__t_8hpp_source_1l00554"/>00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00555"/>00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00556"/>00556 
<anchor xml:id="_dig__t_8hpp_source_1l00557"/>00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;UIntType&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00559"/><link linkend="_struct_num_repr_1_1dig__t_1a38d52e65a990092a76e803e16e918fb7">00559</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;^&#32;(UIntType&#32;exp)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;cpthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpthis&#32;^=&#32;exp;
<anchor xml:id="_dig__t_8hpp_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpthis;
<anchor xml:id="_dig__t_8hpp_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00566"/>00566 
<anchor xml:id="_dig__t_8hpp_source_1l00567"/>00567 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;OPERADORES&#32;COMPARACION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00571"/>00571 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00572"/>00572 
<anchor xml:id="_dig__t_8hpp_source_1l00573"/><link linkend="_struct_num_repr_1_1dig__t_1a16d0da2599654bff077fbeca82c74935">00573</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;a)&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;((a()&#32;==&#32;m_d)?&#32;<emphasis role="keyword">true</emphasis>&#32;:&#32;<emphasis role="keyword">false</emphasis>);}
<anchor xml:id="_dig__t_8hpp_source_1l00575"/><link linkend="_struct_num_repr_1_1dig__t_1a47635d2d0ec4782ae299ee8d120e3382">00575</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;!=&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;a)&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;((a()&#32;!=&#32;m_d)?&#32;<emphasis role="keyword">true</emphasis>&#32;:&#32;<emphasis role="keyword">false</emphasis>);}
<anchor xml:id="_dig__t_8hpp_source_1l00577"/><link linkend="_struct_num_repr_1_1dig__t_1a2e48d921d1562d835c6fe6804ab2ec29">00577</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&gt;=&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;a)&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;((a()&#32;&lt;=&#32;m_d)?&#32;<emphasis role="keyword">true</emphasis>&#32;:&#32;<emphasis role="keyword">false</emphasis>);}
<anchor xml:id="_dig__t_8hpp_source_1l00579"/><link linkend="_struct_num_repr_1_1dig__t_1afefef1d7905f1b427805fed3bac47b6f">00579</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&gt;&#32;&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;a)&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00580"/>00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;((a()&#32;&lt;&#32;m_d&#32;)?&#32;<emphasis role="keyword">true</emphasis>&#32;:&#32;<emphasis role="keyword">false</emphasis>);}
<anchor xml:id="_dig__t_8hpp_source_1l00581"/><link linkend="_struct_num_repr_1_1dig__t_1acdc26317d35ccf448bf50bc5aa8a88e2">00581</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&lt;=&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;a)&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;((a()&#32;&gt;=&#32;m_d&#32;)?&#32;<emphasis role="keyword">true</emphasis>&#32;:&#32;<emphasis role="keyword">false</emphasis>);}
<anchor xml:id="_dig__t_8hpp_source_1l00583"/><link linkend="_struct_num_repr_1_1dig__t_1a541d4e253f487b533befc4b36db15b37">00583</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&lt;&#32;&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;a)&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00584"/>00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;((a()&#32;&gt;&#32;&#32;m_d&#32;)?&#32;<emphasis role="keyword">true</emphasis>&#32;:&#32;<emphasis role="keyword">false</emphasis>);}
<anchor xml:id="_dig__t_8hpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00589"/><link linkend="_struct_num_repr_1_1dig__t_1a6c213b8f2f95f130cd8557f4d910e645">00589</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::strong_ordering&#32;operator&#32;&lt;=&gt;&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00591"/>00591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;lhs_d{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00592"/>00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;rhs_d{rhs()};
<anchor xml:id="_dig__t_8hpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(
<anchor xml:id="_dig__t_8hpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(lhs_d&lt;rhs_d)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::strong_ordering::less&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((lhs_d&gt;rhs_d)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::strong_ordering::greater&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::strong_ordering::equal)
<anchor xml:id="_dig__t_8hpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="_dig__t_8hpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00601"/>00601 
<anchor xml:id="_dig__t_8hpp_source_1l00602"/>00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00604"/><link linkend="_struct_num_repr_1_1dig__t_1a98120e7f67bdd81793d79f21df596840">00604</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==&#32;(Int_t&#32;rhs)
<anchor xml:id="_dig__t_8hpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;lhs{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="_dig__t_8hpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(lhs.m_d&#32;==&#32;normaliza&lt;Int_t&gt;(rhs))&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">true</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">false</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00612"/>00612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="_dig__t_8hpp_source_1l00613"/>00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00617"/>00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00619"/><link linkend="_struct_num_repr_1_1dig__t_1ab70884cd01554850ffe4d26a86dc72e0">00619</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::weak_ordering&#32;operator&#32;&lt;=&gt;&#32;(Int_t&#32;rhs)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;lhs{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UINT_T&#32;rhs_B{normaliza&lt;Int_t&gt;(rhs)};
<anchor xml:id="_dig__t_8hpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((lhs()&#32;&lt;&#32;rhs_B)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::weak_ordering::less&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(lhs()&#32;&gt;&#32;rhs_B)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::weak_ordering::greater&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::weak_ordering::equivalent
<anchor xml:id="_dig__t_8hpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="_dig__t_8hpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00630"/>00630 
<anchor xml:id="_dig__t_8hpp_source_1l00631"/>00631 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/********************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;ARITMETICOS&#32;CON&#32;ASIGNACION&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00635"/>00635 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/********************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00636"/>00636 
<anchor xml:id="_dig__t_8hpp_source_1l00637"/><link linkend="_struct_num_repr_1_1dig__t_1aba27e3396b7ed8788f2cfe819f4d4bb3">00637</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;+=(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;&lt;&#32;type_traits::middle_max&lt;UINT_T&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00642"/>00642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;+=&#32;arg.<link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">m_d</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00643"/>00643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_d&#32;&gt;=&#32;B)
<anchor xml:id="_dig__t_8hpp_source_1l00644"/>00644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;-=&#32;B;
<anchor xml:id="_dig__t_8hpp_source_1l00645"/>00645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_dig__t_8hpp_source_1l00646"/>00646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00648"/>00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00649"/>00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;tmp{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;+=&#32;(arg.m_d);
<anchor xml:id="_dig__t_8hpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(tmp&gt;=B)
<anchor xml:id="_dig__t_8hpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;-=&#32;B;
<anchor xml:id="_dig__t_8hpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(tmp);
<anchor xml:id="_dig__t_8hpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_dig__t_8hpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00657"/>00657 
<anchor xml:id="_dig__t_8hpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00659"/><link linkend="_struct_num_repr_1_1dig__t_1ae24ff79c3041e20d742037441037d2b3">00659</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;+=(Int_t&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;&gt;=&#32;type_traits::middle_max&lt;UINT_T&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;arg1{normaliza&lt;Int_t&gt;(arg)};
<anchor xml:id="_dig__t_8hpp_source_1l00664"/>00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;arg2{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00665"/>00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg2+=arg1;
<anchor xml:id="_dig__t_8hpp_source_1l00666"/>00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg2&#32;&gt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>Int_t<emphasis role="keyword">&gt;</emphasis>(B))
<anchor xml:id="_dig__t_8hpp_source_1l00667"/>00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg2-=<emphasis role="keyword">static_cast&lt;</emphasis>Int_t<emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00668"/>00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(arg2);
<anchor xml:id="_dig__t_8hpp_source_1l00669"/>00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00670"/>00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;UINT_T&#32;arg1{normaliza&lt;Int_t&gt;(arg)};
<anchor xml:id="_dig__t_8hpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT_T&#32;arg2{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00673"/>00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg2+=arg1;
<anchor xml:id="_dig__t_8hpp_source_1l00674"/>00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg2&#32;&gt;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>Int_t<emphasis role="keyword">&gt;</emphasis>(B))
<anchor xml:id="_dig__t_8hpp_source_1l00675"/>00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg2-=<emphasis role="keyword">static_cast&lt;</emphasis>Int_t<emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00676"/>00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(arg2);
<anchor xml:id="_dig__t_8hpp_source_1l00677"/>00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00678"/>00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00679"/>00679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00680"/>00680 
<anchor xml:id="_dig__t_8hpp_source_1l00681"/><link linkend="_struct_num_repr_1_1dig__t_1aaea951b73ed6db7bbddace9d937e65e1">00681</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;-=(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00682"/>00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;cp_dm{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00684"/>00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cp_dm-=arg.<link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">m_d</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cp_dm&#32;&lt;&#32;0)
<anchor xml:id="_dig__t_8hpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cp_dm&#32;+=&#32;ssi_B();
<anchor xml:id="_dig__t_8hpp_source_1l00687"/>00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;cp_dm;
<anchor xml:id="_dig__t_8hpp_source_1l00688"/>00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00690"/>00690 
<anchor xml:id="_dig__t_8hpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00692"/><link linkend="_struct_num_repr_1_1dig__t_1a8ccb0b59a15564ffb2b293664267d5ec">00692</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;-=(Int_t&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00693"/>00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00694"/>00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;tmp{normaliza&lt;Int_t&gt;(arg)};
<anchor xml:id="_dig__t_8hpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;este{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00696"/>00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este-=tmp;
<anchor xml:id="_dig__t_8hpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(este&lt;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(0))
<anchor xml:id="_dig__t_8hpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;+=&#32;ssi_B();
<anchor xml:id="_dig__t_8hpp_source_1l00699"/>00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;este;
<anchor xml:id="_dig__t_8hpp_source_1l00700"/>00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00701"/>00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00702"/>00702 
<anchor xml:id="_dig__t_8hpp_source_1l00703"/><link linkend="_struct_num_repr_1_1dig__t_1a4a8206b542cb7f4b6346f8958757b977">00703</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;*=(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00704"/>00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00705"/>00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;&lt;&#32;type_traits::sqrt_max&lt;UINT_T&gt;())&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00706"/>00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;*=&#32;arg.<link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">m_d</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00707"/>00707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;%=&#32;B;
<anchor xml:id="_dig__t_8hpp_source_1l00708"/>00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00710"/>00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;tmp{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;*=&#32;arg.m_d;
<anchor xml:id="_dig__t_8hpp_source_1l00712"/>00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;%=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(tmp);
<anchor xml:id="_dig__t_8hpp_source_1l00714"/>00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00717"/>00717 
<anchor xml:id="_dig__t_8hpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00719"/><link linkend="_struct_num_repr_1_1dig__t_1a168a6f67f18e796f8873a0e6c2333d54">00719</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;*=(Int_t&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;Int_t&#32;tmp{normaliza&lt;Int_t&gt;(arg)};
<anchor xml:id="_dig__t_8hpp_source_1l00722"/>00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(std::is_signed_v&lt;Int_t&gt;)
<anchor xml:id="_dig__t_8hpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00724"/>00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(<emphasis role="keyword">sizeof</emphasis>(Int_t)&gt;<emphasis role="keyword">sizeof</emphasis>(UINT_T))
<anchor xml:id="_dig__t_8hpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG2_SINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1ae5b5b95ff51b595abc85525d9ce48150">type_traits::sig_SInt_for_SInt_t&lt;Int_t&gt;</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00727"/>00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG2_SINT_T&#32;norm_arg{tmp};
<anchor xml:id="_dig__t_8hpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG2_SINT_T&#32;este{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00729"/>00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;*=&#32;norm_arg;
<anchor xml:id="_dig__t_8hpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;%=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>SIG2_SINT_T<emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00731"/>00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(este);
<anchor xml:id="_dig__t_8hpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00733"/>00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00735"/>00735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00736"/>00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;norm_arg{tmp};
<anchor xml:id="_dig__t_8hpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link>&#32;este{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00738"/>00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;*=&#32;norm_arg;
<anchor xml:id="_dig__t_8hpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;%=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1a6593e326ad416014be397174d2be8f38">SIG_SINT_T</link><emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00740"/>00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(este);
<anchor xml:id="_dig__t_8hpp_source_1l00741"/>00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00742"/>00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00743"/>00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00744"/>00744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00745"/>00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00746"/>00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(<emphasis role="keyword">sizeof</emphasis>(Int_t)&gt;<emphasis role="keyword">sizeof</emphasis>(UINT_T))
<anchor xml:id="_dig__t_8hpp_source_1l00747"/>00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00748"/>00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG2_UINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;Int_t&gt;</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00749"/>00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG2_UINT_T&#32;norm_arg{tmp};
<anchor xml:id="_dig__t_8hpp_source_1l00750"/>00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG2_UINT_T&#32;este{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00751"/>00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;*=&#32;norm_arg;
<anchor xml:id="_dig__t_8hpp_source_1l00752"/>00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;%=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>SIG2_UINT_T<emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00753"/>00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(este);
<anchor xml:id="_dig__t_8hpp_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00755"/>00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00758"/>00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;norm_arg{tmp};
<anchor xml:id="_dig__t_8hpp_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link>&#32;este{m_d};
<anchor xml:id="_dig__t_8hpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;*=&#32;norm_arg;
<anchor xml:id="_dig__t_8hpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;este&#32;%=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1dig__t_1adc093164c56eece2aa8adb2ca2d2968a">SIG_UINT_T</link><emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l00762"/>00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>UINT_T<emphasis role="keyword">&gt;</emphasis>(este);
<anchor xml:id="_dig__t_8hpp_source_1l00763"/>00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00764"/>00764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00766"/>00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00767"/>00767 
<anchor xml:id="_dig__t_8hpp_source_1l00768"/><link linkend="_struct_num_repr_1_1dig__t_1ae6090e4504d28bdd974c7366150a5eaa">00768</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;/=(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00769"/>00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg.m_d&#32;!=&#32;ui_0())
<anchor xml:id="_dig__t_8hpp_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;/=&#32;arg.<link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">m_d</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00773"/>00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00774"/>00774 
<anchor xml:id="_dig__t_8hpp_source_1l00775"/>00775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00776"/><link linkend="_struct_num_repr_1_1dig__t_1a2ae86f82c15b23402ab0893d841e9f9f">00776</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;/=(Int_t&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00777"/>00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT_T&#32;cparg{normaliza&lt;Int_t&gt;(arg)};
<anchor xml:id="_dig__t_8hpp_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;tmp{cparg};
<anchor xml:id="_dig__t_8hpp_source_1l00780"/>00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tmp&#32;!=&#32;dig_0())
<anchor xml:id="_dig__t_8hpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*this)/=tmp;
<anchor xml:id="_dig__t_8hpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00784"/>00784 
<anchor xml:id="_dig__t_8hpp_source_1l00785"/><link linkend="_struct_num_repr_1_1dig__t_1a6c7356a5ae3558ef870ec13760e4cb8a">00785</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;%=(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00786"/>00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00787"/>00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg.m_d&#32;!=&#32;ui_0())
<anchor xml:id="_dig__t_8hpp_source_1l00788"/>00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;%=&#32;arg.<link linkend="_struct_num_repr_1_1dig__t_1ac0c7935b799a4e21bfafdd8f4b6a0bbc">m_d</link>;
<anchor xml:id="_dig__t_8hpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00790"/>00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00791"/>00791 
<anchor xml:id="_dig__t_8hpp_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_t&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00793"/><link linkend="_struct_num_repr_1_1dig__t_1a2c84aafb21be9d9cdbe35758bc44d98b">00793</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;operator&#32;%=(Int_t&#32;arg)&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;cparg{normaliza&lt;Int_t&gt;(arg)};
<anchor xml:id="_dig__t_8hpp_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&#32;!=&#32;dig_0())
<anchor xml:id="_dig__t_8hpp_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*this)%=cparg;
<anchor xml:id="_dig__t_8hpp_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00804"/>00804 
<anchor xml:id="_dig__t_8hpp_source_1l00805"/>00805 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/********************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PRE&#32;Y&#32;POST&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CIRCULARES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00810"/>00810 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/********************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00811"/>00811 
<anchor xml:id="_dig__t_8hpp_source_1l00812"/><link linkend="_struct_num_repr_1_1dig__t_1aaa1f4b500974e6fd56e680e03f29b2c2">00812</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;operator&#32;++&#32;()&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d&#32;&lt;&#32;ui_max())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00814"/>00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d+=<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>())&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d=ui_0());
<anchor xml:id="_dig__t_8hpp_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00818"/>00818 
<anchor xml:id="_dig__t_8hpp_source_1l00819"/><link linkend="_struct_num_repr_1_1dig__t_1a8870447b3f8ce7bd2a9119b6f7d4530c">00819</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;++&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++(*this);
<anchor xml:id="_dig__t_8hpp_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00823"/>00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00824"/>00824 
<anchor xml:id="_dig__t_8hpp_source_1l00825"/><link linkend="_struct_num_repr_1_1dig__t_1a760f7426a2aa1c3633499eb30faa47bc">00825</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;operator&#32;--&#32;()&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d&#32;=&#32;(m_d&#32;&gt;&#32;ui_0())&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d-<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>())&#32;&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(ui_max())&#32;&#32;&#32;&#32;&#32;&#32;;
<anchor xml:id="_dig__t_8hpp_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00831"/>00831 
<anchor xml:id="_dig__t_8hpp_source_1l00832"/><link linkend="_struct_num_repr_1_1dig__t_1a8c9932459b63c42c16f18da0e6b72b86">00832</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;--&#32;(<emphasis role="keywordtype">int</emphasis>)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--(*this);
<anchor xml:id="_dig__t_8hpp_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00837"/>00837 
<anchor xml:id="_dig__t_8hpp_source_1l00838"/>00838 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00840"/>00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;OPERADORES&#32;ARITMETICOS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00842"/>00842 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00843"/>00843 
<anchor xml:id="_dig__t_8hpp_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00845"/><link linkend="_struct_num_repr_1_1dig__t_1a0b75235bdbf8643db99997e9ecbb41fe">00845</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;+&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;+=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00851"/>00851 
<anchor xml:id="_dig__t_8hpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00853"/><link linkend="_struct_num_repr_1_1dig__t_1ac0fdb16b6029708a28c6db50eb5cf71d">00853</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;-&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00856"/>00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;-=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00859"/>00859 
<anchor xml:id="_dig__t_8hpp_source_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00861"/><link linkend="_struct_num_repr_1_1dig__t_1a13f9599ed8b248ba17c973f9044123da">00861</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;*&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;*=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00867"/>00867 
<anchor xml:id="_dig__t_8hpp_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00869"/><link linkend="_struct_num_repr_1_1dig__t_1af8bbcb61605057ec7caee066cec098d3">00869</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;/&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;/=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00875"/>00875 
<anchor xml:id="_dig__t_8hpp_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00877"/><link linkend="_struct_num_repr_1_1dig__t_1a81c124dfd1f9bec0d42a33229279d4c6">00877</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;%&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;%=&#32;arg;
<anchor xml:id="_dig__t_8hpp_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00883"/>00883 
<anchor xml:id="_dig__t_8hpp_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_type&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00886"/><link linkend="_struct_num_repr_1_1dig__t_1a00c1f1363179d60534b4c673ca1e1ca1">00886</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;+&#32;(Int_type&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;+=&#32;normaliza&lt;Int_type&gt;(arg);
<anchor xml:id="_dig__t_8hpp_source_1l00890"/>00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00892"/>00892 
<anchor xml:id="_dig__t_8hpp_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_type&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00895"/><link linkend="_struct_num_repr_1_1dig__t_1a4acce2a25030ead690d375a1953d8882">00895</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;-&#32;(Int_type&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;tmp(normaliza&lt;Int_type&gt;(arg));
<anchor xml:id="_dig__t_8hpp_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;-=&#32;tmp;
<anchor xml:id="_dig__t_8hpp_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00902"/>00902 
<anchor xml:id="_dig__t_8hpp_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_type&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00905"/><link linkend="_struct_num_repr_1_1dig__t_1a1914890e81afe75f7d090ff87ce82f22">00905</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;*&#32;(Int_type&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;tmp(normaliza&lt;Int_type&gt;(arg));
<anchor xml:id="_dig__t_8hpp_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;*=&#32;tmp;
<anchor xml:id="_dig__t_8hpp_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00912"/>00912 
<anchor xml:id="_dig__t_8hpp_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_type&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00915"/><link linkend="_struct_num_repr_1_1dig__t_1ac0d386b51a9b2d64547d64b98f903ef2">00915</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;/&#32;(Int_type&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;cparg(normaliza&lt;Int_type&gt;(arg));
<anchor xml:id="_dig__t_8hpp_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&#32;!=&#32;dig_0())
<anchor xml:id="_dig__t_8hpp_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;/=&#32;cparg;
<anchor xml:id="_dig__t_8hpp_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00923"/>00923 
<anchor xml:id="_dig__t_8hpp_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_type&gt;
<anchor xml:id="_dig__t_8hpp_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00926"/><link linkend="_struct_num_repr_1_1dig__t_1aef688b2a7dffda3d612f59446753074a">00926</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;%&#32;(Int_type&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;cparg(normaliza&lt;Int_type&gt;(arg));
<anchor xml:id="_dig__t_8hpp_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg&#32;!=&#32;dig_0())
<anchor xml:id="_dig__t_8hpp_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;%=&#32;cparg;
<anchor xml:id="_dig__t_8hpp_source_1l00932"/>00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00934"/>00934 
<anchor xml:id="_dig__t_8hpp_source_1l00935"/>00935 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;COMPLEMENTO&#32;BASE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Y&#32;BASE&#32;MENOS&#32;1&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00940"/>00940 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00941"/>00941 
<anchor xml:id="_dig__t_8hpp_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00944"/><link linkend="_struct_num_repr_1_1dig__t_1abfd426bf39f6c5e0421a0fa532e1d886">00944</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;!&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(ui_max()-m_d);
<anchor xml:id="_dig__t_8hpp_source_1l00947"/>00947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00949"/>00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00950"/><link linkend="_struct_num_repr_1_1dig__t_1a4d310043a6574e445b13cea0f7096690">00950</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;operator&#32;-&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>((m_d==0)?0:(B-m_d));
<anchor xml:id="_dig__t_8hpp_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00954"/>00954 
<anchor xml:id="_dig__t_8hpp_source_1l00955"/>00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;&#32;&#32;
<anchor xml:id="_dig__t_8hpp_source_1l00956"/><link linkend="_struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960">00956</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960">C_Bm1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00957"/>00957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(ui_max()-m_d);
<anchor xml:id="_dig__t_8hpp_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00960"/>00960 
<anchor xml:id="_dig__t_8hpp_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;&#32;
<anchor xml:id="_dig__t_8hpp_source_1l00962"/><link linkend="_struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70">00962</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70">C_B</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l00963"/>00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>((m_d==0)?0:(B-m_d));
<anchor xml:id="_dig__t_8hpp_source_1l00965"/>00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00966"/>00966 
<anchor xml:id="_dig__t_8hpp_source_1l00967"/>00967 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;MODIFICADORES&#32;COMPLEMENTO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00971"/>00971 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/****************************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00972"/>00972 
<anchor xml:id="_dig__t_8hpp_source_1l00973"/>00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00974"/><link linkend="_struct_num_repr_1_1dig__t_1aeaabd19b772acd490a224d21840165cf">00974</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1dig__t_1aeaabd19b772acd490a224d21840165cf">mC_Bm1</link>&#32;()
<anchor xml:id="_dig__t_8hpp_source_1l00975"/>00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00976"/>00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_d=(ui_max()-m_d);
<anchor xml:id="_dig__t_8hpp_source_1l00977"/>00977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00978"/>00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00979"/>00979 
<anchor xml:id="_dig__t_8hpp_source_1l00980"/>00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l00981"/><link linkend="_struct_num_repr_1_1dig__t_1a08ec2a242e2d81958e5b23970c16aab1">00981</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1dig__t_1a08ec2a242e2d81958e5b23970c16aab1">mC_B</link>&#32;()
<anchor xml:id="_dig__t_8hpp_source_1l00982"/>00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d==0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?
<anchor xml:id="_dig__t_8hpp_source_1l00984"/>00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(m_d=(B-m_d));
<anchor xml:id="_dig__t_8hpp_source_1l00986"/>00986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l00987"/>00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l00988"/>00988 
<anchor xml:id="_dig__t_8hpp_source_1l01005"/>01005 
<anchor xml:id="_dig__t_8hpp_source_1l01006"/>01006 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**********************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;NULO&#32;Y&#32;MAXIMO&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01010"/>01010 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/**********************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01011"/>01011 
<anchor xml:id="_dig__t_8hpp_source_1l01012"/>01012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01013"/><link linkend="_struct_num_repr_1_1dig__t_1adbf9db5f202d5b71069c34b1ea57cf4d">01013</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1adbf9db5f202d5b71069c34b1ea57cf4d">is_0</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01014"/>01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;==&#32;ui_0());
<anchor xml:id="_dig__t_8hpp_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01017"/>01017 
<anchor xml:id="_dig__t_8hpp_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01019"/><link linkend="_struct_num_repr_1_1dig__t_1ac906122dd220e44ed6762896888b8e4c">01019</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ac906122dd220e44ed6762896888b8e4c">is_1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;==&#32;<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>());
<anchor xml:id="_dig__t_8hpp_source_1l01022"/>01022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01023"/>01023 
<anchor xml:id="_dig__t_8hpp_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01025"/><link linkend="_struct_num_repr_1_1dig__t_1a3097efc035d69810593924081fe87698">01025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a3097efc035d69810593924081fe87698">is_0or1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01027"/>01027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;((m_d&#32;==&#32;ui_0())||(m_d&#32;==&#32;<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>()));
<anchor xml:id="_dig__t_8hpp_source_1l01028"/>01028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01029"/>01029 
<anchor xml:id="_dig__t_8hpp_source_1l01030"/>01030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01031"/><link linkend="_struct_num_repr_1_1dig__t_1a3f3fbeaf6b33d1715bbd18a32c9d786b">01031</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a3f3fbeaf6b33d1715bbd18a32c9d786b">is_not_1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;!=&#32;<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>());
<anchor xml:id="_dig__t_8hpp_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01035"/>01035 
<anchor xml:id="_dig__t_8hpp_source_1l01036"/>01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01037"/><link linkend="_struct_num_repr_1_1dig__t_1a8186108a31cd8a25848f0269a7d19a7c">01037</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a8186108a31cd8a25848f0269a7d19a7c">is_not_0</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01038"/>01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;!=&#32;ui_0());
<anchor xml:id="_dig__t_8hpp_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01041"/>01041 
<anchor xml:id="_dig__t_8hpp_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01043"/><link linkend="_struct_num_repr_1_1dig__t_1aacae804f80074c18f9ab9a84bd53b39b">01043</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1aacae804f80074c18f9ab9a84bd53b39b">is_not_0or1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(&#32;!&#32;is_0or1()&#32;);
<anchor xml:id="_dig__t_8hpp_source_1l01046"/>01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01047"/>01047 
<anchor xml:id="_dig__t_8hpp_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01049"/><link linkend="_struct_num_repr_1_1dig__t_1a56fcdfa556284892cd7de47c3787d32b">01049</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a56fcdfa556284892cd7de47c3787d32b">is_Bm1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01050"/>01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01051"/>01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;==&#32;ui_Bm1());
<anchor xml:id="_dig__t_8hpp_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01053"/>01053 
<anchor xml:id="_dig__t_8hpp_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01055"/><link linkend="_struct_num_repr_1_1dig__t_1a87c025873db95eaf29108ce9c9245dfd">01055</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a87c025873db95eaf29108ce9c9245dfd">is_not_Bm1</link>&#32;()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;!=&#32;ui_Bm1());
<anchor xml:id="_dig__t_8hpp_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01059"/>01059 
<anchor xml:id="_dig__t_8hpp_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01061"/><link linkend="_struct_num_repr_1_1dig__t_1a6c4fba7ed06b49210ef5ff28df23a668">01061</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6c4fba7ed06b49210ef5ff28df23a668">is_Bm1orBm2</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01062"/>01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01063"/>01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_Bm1()&#32;||&#32;is_Bm2());
<anchor xml:id="_dig__t_8hpp_source_1l01064"/>01064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01065"/>01065 
<anchor xml:id="_dig__t_8hpp_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01067"/><link linkend="_struct_num_repr_1_1dig__t_1a6ef1aa06ecb5f66b634124209f18cb2e">01067</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a6ef1aa06ecb5f66b634124209f18cb2e">is_not_Bm1orBm2</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_not_Bm1()&#32;&amp;&amp;&#32;is_not_Bm2());
<anchor xml:id="_dig__t_8hpp_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01071"/>01071 
<anchor xml:id="_dig__t_8hpp_source_1l01072"/>01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01073"/><link linkend="_struct_num_repr_1_1dig__t_1a8f6e6f45df7dc5326ff1006bf5bebd10">01073</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a8f6e6f45df7dc5326ff1006bf5bebd10">is_Bm2</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;==&#32;ui_Bm2());
<anchor xml:id="_dig__t_8hpp_source_1l01076"/>01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01077"/>01077 
<anchor xml:id="_dig__t_8hpp_source_1l01078"/>01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01079"/><link linkend="_struct_num_repr_1_1dig__t_1a7b1616ba435215cc41468ae13696a369">01079</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a7b1616ba435215cc41468ae13696a369">is_not_Bm2</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01080"/>01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(m_d&#32;!=&#32;ui_Bm2());
<anchor xml:id="_dig__t_8hpp_source_1l01082"/>01082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01083"/>01083 
<anchor xml:id="_dig__t_8hpp_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01085"/><link linkend="_struct_num_repr_1_1dig__t_1af27980a6204664a1333284ba9c60d316">01085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1af27980a6204664a1333284ba9c60d316">is_not_maxormin</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_not_0()&#32;&amp;&amp;&#32;is_not_Bm1());
<anchor xml:id="_dig__t_8hpp_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01089"/>01089 
<anchor xml:id="_dig__t_8hpp_source_1l01090"/>01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01091"/><link linkend="_struct_num_repr_1_1dig__t_1ad54d97fbbe203e3aecaf937df2600ba2">01091</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ad54d97fbbe203e3aecaf937df2600ba2">is_maxormin</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_0()&#32;||&#32;is_Bm1());
<anchor xml:id="_dig__t_8hpp_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01095"/>01095 
<anchor xml:id="_dig__t_8hpp_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01097"/><link linkend="_struct_num_repr_1_1dig__t_1ad5a111737f792b6ae0bf54153e4a8b17">01097</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ad5a111737f792b6ae0bf54153e4a8b17">is_far_maxormin</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;==&#32;2u)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_not_0()&#32;&amp;&amp;&#32;is_not_Bm1()&#32;&amp;&amp;&#32;is_not_1()&#32;&amp;&amp;&#32;is_not_Bm2());
<anchor xml:id="_dig__t_8hpp_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01106"/>01106 
<anchor xml:id="_dig__t_8hpp_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01108"/><link linkend="_struct_num_repr_1_1dig__t_1af91d529a5c32bcc62d02b4700713b512">01108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1af91d529a5c32bcc62d02b4700713b512">is_near_maxormin</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(B&#32;==&#32;2u)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01112"/>01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01113"/>01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01114"/>01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is_0()&#32;||&#32;is_Bm1()&#32;||&#32;is_1()&#32;||&#32;is_Bm2());
<anchor xml:id="_dig__t_8hpp_source_1l01115"/>01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01116"/>01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01117"/>01117 
<anchor xml:id="_dig__t_8hpp_source_1l01118"/>01118 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/********************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01119"/>01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;VARIOS&#32;CASTS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01122"/>01122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/********************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01123"/>01123 
<anchor xml:id="_dig__t_8hpp_source_1l01125"/>01125 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l01126"/>01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01127"/><link linkend="_struct_num_repr_1_1dig__t_1ae3669f0d5e1a3533692e714ed8381a19">01127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae3669f0d5e1a3533692e714ed8381a19">num_to_string</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_dig__t_8hpp_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::int64_t&#32;data_member&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>std::int64_t<emphasis role="keyword">&gt;</emphasis>(this-&gt;m_d);
<anchor xml:id="_dig__t_8hpp_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ostringstream&#32;fmtr_obj;
<anchor xml:id="_dig__t_8hpp_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmtr_obj&#32;&lt;&lt;&#32;data_member;
<anchor xml:id="_dig__t_8hpp_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;ret{fmtr_obj.str()};
<anchor xml:id="_dig__t_8hpp_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01136"/>01136 
<anchor xml:id="_dig__t_8hpp_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01138"/><link linkend="_struct_num_repr_1_1dig__t_1aafbbe9b31b632c19b6b161d7da7052c8">01138</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_struct_num_repr_1_1dig__t_1aafbbe9b31b632c19b6b161d7da7052c8">radix_str</link>()
<anchor xml:id="_dig__t_8hpp_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_dig__t_8hpp_source_1l01140"/>01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;std::int64_t&#32;radix&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis>std::int64_t<emphasis role="keyword">&gt;</emphasis>(B);
<anchor xml:id="_dig__t_8hpp_source_1l01142"/>01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ostringstream&#32;fmtr_obj;
<anchor xml:id="_dig__t_8hpp_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmtr_obj&#32;&lt;&lt;&#32;radix;
<anchor xml:id="_dig__t_8hpp_source_1l01144"/>01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;ret{<emphasis role="stringliteral">&quot;B&quot;</emphasis>+fmtr_obj.str()};
<anchor xml:id="_dig__t_8hpp_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l01146"/>01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01147"/>01147 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_dig__t_8hpp_source_1l01148"/>01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01149"/><link linkend="_struct_num_repr_1_1dig__t_1a485ebeb8d32500ce824d6e88e02f4eba">01149</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;<link linkend="_struct_num_repr_1_1dig__t_1a485ebeb8d32500ce824d6e88e02f4eba">to_string</link>()&#32;const
<anchor xml:id="_dig__t_8hpp_source_1l01150"/>01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_dig__t_8hpp_source_1l01151"/>01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01152"/>01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;num{this-&gt;num_to_string()};
<anchor xml:id="_dig__t_8hpp_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;std::string&#32;ret{<emphasis role="stringliteral">&quot;dig#&quot;</emphasis>+num+<emphasis role="stringliteral">&quot;#&quot;</emphasis>+radix_str()};
<anchor xml:id="_dig__t_8hpp_source_1l01154"/>01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_dig__t_8hpp_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01156"/>01156 
<anchor xml:id="_dig__t_8hpp_source_1l01157"/>01157 
<anchor xml:id="_dig__t_8hpp_source_1l01160"/>01160 
<anchor xml:id="_dig__t_8hpp_source_1l01161"/>01161 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01162"/><link linkend="_struct_num_repr_1_1dig__t_1a038d9d12be4bf69c11a1544a29698806">01162</link> &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a038d9d12be4bf69c11a1544a29698806">is_type_template_string_id</link>(std::string&#32;in)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01163"/>01163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="_dig__t_8hpp_source_1l01164"/>01164 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;dig_t&quot;</emphasis>)||
<anchor xml:id="_dig__t_8hpp_source_1l01165"/>01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;dig_&quot;</emphasis>)||
<anchor xml:id="_dig__t_8hpp_source_1l01166"/>01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;dig&quot;</emphasis>)||
<anchor xml:id="_dig__t_8hpp_source_1l01167"/>01167 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;di&quot;</emphasis>)||
<anchor xml:id="_dig__t_8hpp_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;d&quot;</emphasis>)
<anchor xml:id="_dig__t_8hpp_source_1l01169"/>01169 &#32;&#32;&#32;&#32;);
<anchor xml:id="_dig__t_8hpp_source_1l01170"/>01170 &#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01171"/>01171 
<anchor xml:id="_dig__t_8hpp_source_1l01172"/>01172 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01173"/><link linkend="_struct_num_repr_1_1dig__t_1a502583a59394f36d40dfc03402177c84">01173</link> &#32;&#32;std::string&#32;<link linkend="_struct_num_repr_1_1dig__t_1a502583a59394f36d40dfc03402177c84">to_type_template_string_id</link>()&#32;noexcept
<anchor xml:id="_dig__t_8hpp_source_1l01174"/>01174 &#32;&#32;{&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::string{<emphasis role="stringliteral">&quot;digs_t&quot;</emphasis>};&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01175"/>01175 
<anchor xml:id="_dig__t_8hpp_source_1l01176"/>01176 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01177"/><link linkend="_struct_num_repr_1_1dig__t_1a2818baa334a2d9efafc9dc3ce8fbfb25">01177</link> &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a2818baa334a2d9efafc9dc3ce8fbfb25">size_of_type_template_string_id</link>()&#32;noexcept
<anchor xml:id="_dig__t_8hpp_source_1l01178"/>01178 &#32;&#32;{&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(to_type_template_string_id()).size();&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01179"/>01179 
<anchor xml:id="_dig__t_8hpp_source_1l01180"/>01180 
<anchor xml:id="_dig__t_8hpp_source_1l01183"/><link linkend="_struct_num_repr_1_1dig__t_1aac7bbe0123608fe9eef2c9ef75b082f6">01183</link> &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1aac7bbe0123608fe9eef2c9ef75b082f6">get_type_template_string_id_token</link>(std::istream&amp;&#32;is)
<anchor xml:id="_dig__t_8hpp_source_1l01184"/>01184 &#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;input_char{<emphasis role="charliteral">&apos;\0&apos;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01186"/>01186 &#32;&#32;&#32;&#32;std::string&#32;old_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01187"/>01187 &#32;&#32;&#32;&#32;std::string&#32;new_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01188"/>01188 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;index{&#32;0&#32;};
<anchor xml:id="_dig__t_8hpp_source_1l01189"/>01189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01192"/>01192 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_type_template_string_id(new_input_string))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01194"/>01194 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;to_type_template_string_id()
<anchor xml:id="_dig__t_8hpp_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string
<anchor xml:id="_dig__t_8hpp_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01203"/>01203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01204"/>01204 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01205"/>01205 
<anchor xml:id="_dig__t_8hpp_source_1l01206"/>01206 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(new_input_string==to_type_template_string_id())
<anchor xml:id="_dig__t_8hpp_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01208"/>01208 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01210"/>01210 &#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01211"/>01211 &#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01212"/>01212 
<anchor xml:id="_dig__t_8hpp_source_1l01213"/>01213 <emphasis role="comment">//&#32;&#32;///&#32;FUNCION&#32;QUE&#32;CONSIGUE&#32;EL&#32;TOKEN&#32;PUNTO&#32;FIJO</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01214"/>01214 <emphasis role="comment">//&#32;&#32;bool&#32;get_fixed_point_token(std::istream&amp;&#32;is,std::ostream&amp;&#32;errs)</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01215"/>01215 <emphasis role="comment">//&#32;&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01216"/>01216 <emphasis role="comment">//&#32;&#32;&#32;&#32;std::string&#32;old_input_string{&quot;&quot;};</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01217"/>01217 <emphasis role="comment">//&#32;&#32;&#32;&#32;std::string&#32;new_input_string{&quot;&quot;};</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01218"/>01218 <emphasis role="comment">//&#32;&#32;&#32;&#32;size_t&#32;index{0};</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01219"/>01219 <emphasis role="comment">//&#32;&#32;&#32;&#32;char&#32;input_char&#32;=&#32;nullchar&lt;char&gt;;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01220"/>01220 <emphasis role="comment">//&#32;&#32;&#32;&#32;while(true)&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01221"/>01221 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01222"/>01222 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;((index==0)&amp;&amp;(is_separator(input_char)))&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01223"/>01223 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01224"/>01224 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01225"/>01225 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01226"/>01226 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01227"/>01227 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;((index&#32;==&#32;0)&amp;&amp;(!&#32;is_separator(input_char)))&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01228"/>01228 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01229"/>01229 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;\&quot;&#32;&quot;&#32;&lt;&lt;&#32;&apos;#&apos;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01230"/>01230 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01231"/>01231 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01232"/>01232 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01233"/>01233 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01234"/>01234 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01235"/>01235 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01236"/>01236 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;((index&#32;==&#32;1)&amp;&amp;(input_char&#32;==&#32;&apos;.&apos;))&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01237"/>01237 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01238"/>01238 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01239"/>01239 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01240"/>01240 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01241"/>01241 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01242"/>01242 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;\&quot;&#32;&quot;&#32;&lt;&lt;&#32;&quot;#.&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01243"/>01243 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01244"/>01244 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01245"/>01245 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01246"/>01246 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01247"/>01247 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01248"/>01248 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01249"/>01249 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01250"/>01250 <emphasis role="comment">//</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01251"/>01251 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(new_input_string==&quot;#.&quot;)</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01252"/>01252 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;true;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01253"/>01253 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01254"/>01254 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01255"/>01255 <emphasis role="comment">//&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01256"/>01256 <emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01257"/>01257 
<anchor xml:id="_dig__t_8hpp_source_1l01258"/>01258 <emphasis role="comment">//&#32;&#32;///&#32;FUNCION&#32;QUE&#32;CONSIGUE&#32;EL&#32;TOKEN&#32;SIGNO&#32;EXPLICITO</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01259"/>01259 <emphasis role="comment">//&#32;&#32;bool&#32;get_explicit_sign_token(</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01260"/>01260 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::istream&amp;&#32;is,std::ostream&amp;&#32;errs,sign_e&amp;&#32;signo</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01261"/>01261 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01262"/>01262 <emphasis role="comment">//&#32;&#32;&#32;&#32;std::string&#32;old_input_string{&quot;&quot;};</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01263"/>01263 <emphasis role="comment">//&#32;&#32;&#32;&#32;std::string&#32;new_input_string{&quot;&quot;};</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01264"/>01264 <emphasis role="comment">//&#32;&#32;&#32;&#32;size_t&#32;index{0};</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01265"/>01265 <emphasis role="comment">//&#32;&#32;&#32;&#32;char&#32;input_char&#32;=&#32;nullchar&lt;char&gt;;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01266"/>01266 <emphasis role="comment">//&#32;&#32;&#32;&#32;while(true)&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01267"/>01267 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01268"/>01268 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if&#32;((index==0)&amp;&amp;(is_separator(input_char)))&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01269"/>01269 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01270"/>01270 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01271"/>01271 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01272"/>01272 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01273"/>01273 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if&#32;(</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01274"/>01274 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(index&#32;==&#32;0)&amp;&amp;(!&#32;is_separator(input_char))</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01275"/>01275 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01276"/>01276 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01277"/>01277 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;\&quot;&#32;&quot;&#32;&lt;&lt;&#32;&apos;#&apos;&#32;&lt;&lt;&#32;&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01278"/>01278 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01279"/>01279 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01280"/>01280 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01281"/>01281 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01282"/>01282 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01283"/>01283 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01284"/>01284 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if((index==1)&amp;&amp;((input_char&#32;==&#32;&apos;+&apos;)||</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01285"/>01285 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(input_char&#32;==&#32;&apos;-&apos;)</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01286"/>01286 <emphasis role="commentemphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01287"/>01287 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01288"/>01288 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01289"/>01289 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01290"/>01290 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;sign_value(input_char);</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01291"/>01291 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;break;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01292"/>01292 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01293"/>01293 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else{</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01294"/>01294 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01295"/>01295 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&quot;&#32;escribir&#32;\&quot;&#32;&quot;&#32;&lt;&lt;&#32;&quot;#+&#32;o&#32;#-&quot;&#32;&lt;&lt;&#32;&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01296"/>01296 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01297"/>01297 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errs&#32;&lt;&lt;&#32;&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01298"/>01298 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01299"/>01299 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01300"/>01300 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01301"/>01301 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01302"/>01302 <emphasis role="comment">//</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01303"/>01303 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;if(&#32;(new_input_string==&quot;#+&quot;)||</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01304"/>01304 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(new_input_string==&quot;#-&quot;)&#32;&#32;&#32;&#32;)</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01305"/>01305 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;true;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01306"/>01306 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;else</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01307"/>01307 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;false;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01308"/>01308 <emphasis role="comment">//&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01309"/>01309 <emphasis role="comment">//&#32;&#32;}</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01310"/>01310 
<anchor xml:id="_dig__t_8hpp_source_1l01312"/>01312 &#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01313"/><link linkend="_struct_num_repr_1_1dig__t_1a7eaaf1b30f1b962c539ec833fa5b3c5f">01313</link> &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a7eaaf1b30f1b962c539ec833fa5b3c5f">get_digit_token</link>(std::istream&amp;&#32;is,UINT_T&amp;&#32;uint_value)
<anchor xml:id="_dig__t_8hpp_source_1l01314"/>01314 &#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01315"/>01315 &#32;&#32;&#32;&#32;std::string&#32;old_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01316"/>01316 &#32;&#32;&#32;&#32;std::string&#32;new_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01317"/>01317 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;index{0};
<anchor xml:id="_dig__t_8hpp_source_1l01318"/>01318 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;input_char&#32;=&#32;type_traits::nullchar&lt;char&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l01319"/>01319 &#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01320"/>01320 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index==0)&amp;&amp;(<link linkend="_namespace_num_repr_1_1lex_1ae1025f30c522d63347afa67829bd7216">NumRepr::lex::is_separator</link>(input_char)))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_dig__t_8hpp_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index&#32;==&#32;0)&amp;&amp;(!&#32;<link linkend="_namespace_num_repr_1_1lex_1ae1025f30c522d63347afa67829bd7216">lex::is_separator</link>(input_char)))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01328"/>01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;escribir&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01330"/>01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string
<anchor xml:id="_dig__t_8hpp_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;=1)&#32;&amp;&amp;&#32;<link linkend="_namespace_num_repr_1_1lex_1a74058f0e6bd43ed220a8a1b497b32c84">lex::is_digit</link>(input_char))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1_1lex_1af9280f97b4b77ecd1014186f30d34cd3">lex::digit_value</link>(input_char)&#32;&lt;&#32;B)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01339"/>01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;*=&#32;B;
<anchor xml:id="_dig__t_8hpp_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;+=&#32;<link linkend="_namespace_num_repr_1_1lex_1af9280f97b4b77ecd1014186f30d34cd3">lex::digit_value</link>(input_char);
<anchor xml:id="_dig__t_8hpp_source_1l01341"/>01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(uint_value&#32;&lt;&#32;B)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_dig__t_8hpp_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;<emphasis role="stringliteral">&quot;#&quot;</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01347"/>01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;poner&#32;un&#32;valor&#32;menor&#32;que&#32;la&#32;base&#32;y&#32;has&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;puesto&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;uint_value&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;escrito&#32;como&#32;\&quot;&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01350"/>01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01352"/>01352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;=1)&#32;&amp;&amp;&#32;!&#32;<link linkend="_namespace_num_repr_1_1lex_1a74058f0e6bd43ed220a8a1b497b32c84">lex::is_digit</link>(input_char)&#32;&amp;&amp;&#32;(input_char&#32;!=&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;caracter&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;input_char&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;no&#32;es&#32;valido&#32;aqui&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01362"/>01362 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;1)&amp;&amp;(input_char&#32;==&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01363"/>01363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01364"/>01364 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01365"/>01365 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_dig__t_8hpp_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;#digdigdig..._&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01368"/>01368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01370"/>01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01373"/>01373 &#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01374"/>01374 &#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01375"/>01375 
<anchor xml:id="_dig__t_8hpp_source_1l01377"/>01377 &#32;&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01378"/><link linkend="_struct_num_repr_1_1dig__t_1a256f1cc8420ff589031fef99193a1b52">01378</link> &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a256f1cc8420ff589031fef99193a1b52">get_radix_token</link>(std::istream&amp;&#32;is)
<anchor xml:id="_dig__t_8hpp_source_1l01379"/>01379 &#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01380"/>01380 &#32;&#32;&#32;&#32;std::string&#32;old_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01381"/>01381 &#32;&#32;&#32;&#32;std::string&#32;new_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_dig__t_8hpp_source_1l01382"/>01382 &#32;&#32;&#32;&#32;UINT_T&#32;uint_radix;
<anchor xml:id="_dig__t_8hpp_source_1l01383"/>01383 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;index{0};
<anchor xml:id="_dig__t_8hpp_source_1l01384"/>01384 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;input_char&#32;=&#32;type_traits::nullchar&lt;char&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l01385"/>01385 &#32;&#32;&#32;&#32;uint_radix&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01386"/>01386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index==0)&amp;&amp;(<link linkend="_namespace_num_repr_1_1lex_1ae1025f30c522d63347afa67829bd7216">lex::is_separator</link>(input_char)))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_dig__t_8hpp_source_1l01392"/>01392 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index&#32;==&#32;0)&amp;&amp;(!&#32;<link linkend="_namespace_num_repr_1_1lex_1ae1025f30c522d63347afa67829bd7216">lex::is_separator</link>(input_char)))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01395"/>01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;escribir&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01397"/>01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string
<anchor xml:id="_dig__t_8hpp_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01401"/>01401 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index==1)&amp;&amp;((input_char==<emphasis role="charliteral">&apos;b&apos;</emphasis>)||(input_char==<emphasis role="charliteral">&apos;B&apos;</emphasis>)))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_dig__t_8hpp_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index&#32;==&#32;1)&amp;&amp;((input_char!=<emphasis role="charliteral">&apos;b&apos;</emphasis>)&amp;&amp;(input_char!=<emphasis role="charliteral">&apos;B&apos;</emphasis>)))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;escribir&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01412"/>01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string
<anchor xml:id="_dig__t_8hpp_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;=2)&#32;&amp;&amp;&#32;<link linkend="_namespace_num_repr_1_1lex_1a74058f0e6bd43ed220a8a1b497b32c84">lex::is_digit</link>(input_char))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1_1lex_1af9280f97b4b77ecd1014186f30d34cd3">lex::digit_value</link>(input_char)&#32;&lt;=&#32;B)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_dig__t_8hpp_source_1l01419"/>01419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_radix&#32;*=&#32;B;
<anchor xml:id="_dig__t_8hpp_source_1l01420"/>01420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_radix&#32;+=&#32;<link linkend="_namespace_num_repr_1_1lex_1af9280f97b4b77ecd1014186f30d34cd3">lex::digit_value</link>(input_char);
<anchor xml:id="_dig__t_8hpp_source_1l01421"/>01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(uint_radix&#32;&lt;=&#32;B)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01422"/>01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_dig__t_8hpp_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_dig__t_8hpp_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01425"/>01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;<emphasis role="stringliteral">&quot;#&quot;</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01427"/>01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;poner&#32;un&#32;valor&#32;menor&#32;que&#32;la&#32;base&#32;y&#32;has&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;puesto&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;uint_radix&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;escrito&#32;como&#32;\&quot;&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_radix&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;=3)&#32;&amp;&amp;&#32;!&#32;<link linkend="_namespace_num_repr_1_1lex_1a74058f0e6bd43ed220a8a1b497b32c84">lex::is_digit</link>(input_char)&#32;&amp;&amp;&#32;(input_char&#32;!=&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;caracter&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;input_char&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;no&#32;es&#32;valido&#32;aqui&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_radix&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01440"/>01440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01442"/>01442 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;2)&amp;&amp;(input_char&#32;==&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01443"/>01443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01444"/>01444 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01445"/>01445 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_dig__t_8hpp_source_1l01446"/>01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;#Bdigdigdig..._&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01449"/>01449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_dig__t_8hpp_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_radix&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01453"/>01453 &#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01454"/>01454 &#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01455"/>01455 
<anchor xml:id="_dig__t_8hpp_source_1l01456"/>01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01457"/><link linkend="_struct_num_repr_1_1dig__t_1a4b2689884533f42678398c144b127910">01457</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a4b2689884533f42678398c144b127910">read</link>(std::istream&amp;&#32;is,<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&amp;&#32;value)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01458"/>01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;default_value{};
<anchor xml:id="_dig__t_8hpp_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;type_token&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t_1aac7bbe0123608fe9eef2c9ef75b082f6">dig_t::get_type_template_string_id_token</link>(is);
<anchor xml:id="_dig__t_8hpp_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type_token)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01461"/>01461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad">get_digit_token</link>(is,value))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1a4a43d171097231b9c153662a4d96d170">get_radix_token</link>(is))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;default_value;
<anchor xml:id="_dig__t_8hpp_source_1l01467"/>01467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01469"/>01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;default_value;
<anchor xml:id="_dig__t_8hpp_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01473"/>01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;default_value;
<anchor xml:id="_dig__t_8hpp_source_1l01476"/>01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01478"/>01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01479"/>01479 
<anchor xml:id="_dig__t_8hpp_source_1l01480"/>01480 };
<anchor xml:id="_dig__t_8hpp_source_1l01481"/>01481 
<anchor xml:id="_dig__t_8hpp_source_1l01482"/>01482 <emphasis role="keyword">template</emphasis>&lt;type_traits::u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,&#32;UINT_T&#32;B&gt;
<anchor xml:id="_dig__t_8hpp_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(type_traits::suitable_base&lt;UINT_T,&#32;B&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l01484"/><link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">01484</link> <emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;<link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">ui_1</link>()&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{<emphasis role="keywordflow">return</emphasis>&#32;UINT_T(1u);}
<anchor xml:id="_dig__t_8hpp_source_1l01485"/>01485 
<anchor xml:id="_dig__t_8hpp_source_1l01486"/>01486 <emphasis role="keyword">template</emphasis>&lt;type_traits::u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,&#32;UINT_T&#32;B&gt;
<anchor xml:id="_dig__t_8hpp_source_1l01487"/>01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(type_traits::suitable_base&lt;UINT_T,&#32;B&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l01488"/><link linkend="_namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5">01488</link> <emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T, B&gt;</link>&#32;<link linkend="_namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5">dig_max</link>()&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T, B&gt;</link>(B-1u);
<anchor xml:id="_dig__t_8hpp_source_1l01490"/>01490 }
<anchor xml:id="_dig__t_8hpp_source_1l01491"/>01491 
<anchor xml:id="_dig__t_8hpp_source_1l01493"/>01493 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>128_t&#32;B&gt;
<anchor xml:id="_dig__t_8hpp_source_1l01494"/><link linkend="_namespace_num_repr_1a3a5ba1b030588c94513fdad9a1b44ef1">01494</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">digit_t</link>&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;
<anchor xml:id="_dig__t_8hpp_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;</link>(B)&gt;,
<anchor xml:id="_dig__t_8hpp_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;</link>(B)<emphasis role="keyword">&gt;</emphasis>&gt;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link><emphasis role="keyword">&gt;</emphasis>(B))
<anchor xml:id="_dig__t_8hpp_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_dig__t_8hpp_source_1l01499"/>01499 
<anchor xml:id="_dig__t_8hpp_source_1l01500"/>01500 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01501"/>01501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ISTREAM&#32;Y&#32;OSTREAM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01503"/>01503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01504"/>01504 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;/************************************/</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01505"/>01505 
<anchor xml:id="_dig__t_8hpp_source_1l01506"/>01506 <emphasis role="keyword">template</emphasis>&lt;type_traits::u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;Base&gt;
<anchor xml:id="_dig__t_8hpp_source_1l01507"/>01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(type_traits::suitable_base&lt;UINT_T,Base&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l01508"/><link linkend="_namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac">01508</link> std::istream&#32;&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;&gt;&gt;&#32;(std::istream&#32;&amp;&#32;is,<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,Base&gt;</link>&#32;&amp;&#32;arg)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01509"/>01509 
<anchor xml:id="_dig__t_8hpp_source_1l01510"/>01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG_UINT_T&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_dig__t_8hpp_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;estado_e&#32;{e0,e1,e2,e3,e4,e5,e6,e7,e8};
<anchor xml:id="_dig__t_8hpp_source_1l01512"/>01512 
<anchor xml:id="_dig__t_8hpp_source_1l01513"/>01513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;sds;
<anchor xml:id="_dig__t_8hpp_source_1l01514"/>01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;num_dig;
<anchor xml:id="_dig__t_8hpp_source_1l01515"/>01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;num_base;
<anchor xml:id="_dig__t_8hpp_source_1l01516"/>01516 
<anchor xml:id="_dig__t_8hpp_source_1l01517"/>01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;estado_e&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01518"/>01518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG_UINT_T&#32;indice&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01519"/>01519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG_UINT_T&#32;numero_base_recogido=0;
<anchor xml:id="_dig__t_8hpp_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;UINT_T&#32;numero&#32;=&#32;0;
<anchor xml:id="_dig__t_8hpp_source_1l01521"/>01521 
<anchor xml:id="_dig__t_8hpp_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c;
<anchor xml:id="_dig__t_8hpp_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;sds;
<anchor xml:id="_dig__t_8hpp_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;sds[indice];
<anchor xml:id="_dig__t_8hpp_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(est_act)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e0&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;d&apos;</emphasis>){
<anchor xml:id="_dig__t_8hpp_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1;
<anchor xml:id="_dig__t_8hpp_source_1l01529"/>01529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01530"/>01530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01531"/>01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;#&apos;</emphasis>)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01532"/>01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2;
<anchor xml:id="_dig__t_8hpp_source_1l01533"/>01533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01534"/>01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01535"/>01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01536"/>01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01537"/>01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01538"/>01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01539"/>01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e3;
<anchor xml:id="_dig__t_8hpp_source_1l01540"/>01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l01541"/>01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01542"/>01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01543"/>01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01544"/>01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01545"/>01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01547"/>01547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e3&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;num_dig.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l01548"/>01548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>)&#32;est_act&#32;=&#32;e4;
<anchor xml:id="_dig__t_8hpp_source_1l01549"/>01549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act=e0;
<anchor xml:id="_dig__t_8hpp_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e4&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>)&#32;est_act&#32;=&#32;e5;
<anchor xml:id="_dig__t_8hpp_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e5&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e6;
<anchor xml:id="_dig__t_8hpp_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_base.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01565"/>01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_base.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01570"/>01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e6&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;num_base.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_dig__t_8hpp_source_1l01571"/>01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c==<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>)||(c==<emphasis role="charliteral">&apos;\0&apos;</emphasis>))&#32;est_act&#32;=&#32;e7;
<anchor xml:id="_dig__t_8hpp_source_1l01572"/>01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01573"/>01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e7&#32;:&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c!=<emphasis role="charliteral">&apos;&#32;&apos;</emphasis>)||(c!=<emphasis role="charliteral">&apos;\0&apos;</emphasis>)){
<anchor xml:id="_dig__t_8hpp_source_1l01574"/>01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01575"/>01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01576"/>01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_base.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e8&#32;:
<anchor xml:id="_dig__t_8hpp_source_1l01580"/>01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;:&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_dig__t_8hpp_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01582"/>01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++indice;
<anchor xml:id="_dig__t_8hpp_source_1l01583"/>01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(est_act==e7)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01584"/>01584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(SIG_UINT_T&#32;k=0&#32;;&#32;k&#32;&lt;&#32;num_base.size()&#32;;&#32;++k&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01585"/>01585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;*=&#32;10;
<anchor xml:id="_dig__t_8hpp_source_1l01586"/>01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;+=&#32;num_base[k];
<anchor xml:id="_dig__t_8hpp_source_1l01587"/>01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01588"/>01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(numero_base_recogido!=Base)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01589"/>01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
<anchor xml:id="_dig__t_8hpp_source_1l01590"/>01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_dig.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01591"/>01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_base.clear();
<anchor xml:id="_dig__t_8hpp_source_1l01592"/>01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01593"/>01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e8;
<anchor xml:id="_dig__t_8hpp_source_1l01594"/>01594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01595"/>01595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(est_act!=e8);
<anchor xml:id="_dig__t_8hpp_source_1l01596"/>01596 
<anchor xml:id="_dig__t_8hpp_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(SIG_UINT_T&#32;k=0&#32;;&#32;k&#32;&lt;&#32;num_dig.size()&#32;;&#32;++k&#32;)&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01598"/>01598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero&#32;*=&#32;10;
<anchor xml:id="_dig__t_8hpp_source_1l01599"/>01599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero&#32;+=&#32;num_dig[k];
<anchor xml:id="_dig__t_8hpp_source_1l01600"/>01600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_dig__t_8hpp_source_1l01601"/>01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero&#32;%=&#32;Base;
<anchor xml:id="_dig__t_8hpp_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,Base&gt;</link>(numero);
<anchor xml:id="_dig__t_8hpp_source_1l01603"/>01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;is;
<anchor xml:id="_dig__t_8hpp_source_1l01604"/>01604 }
<anchor xml:id="_dig__t_8hpp_source_1l01605"/>01605 
<anchor xml:id="_dig__t_8hpp_source_1l01606"/>01606 <emphasis role="keyword">template</emphasis>&lt;type_traits::u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;Base&gt;
<anchor xml:id="_dig__t_8hpp_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(type_traits::suitable_base&lt;UINT_T,Base&gt;())
<anchor xml:id="_dig__t_8hpp_source_1l01608"/><link linkend="_namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8">01608</link> std::ostream&#32;&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;&lt;&lt;&#32;(std::ostream&#32;&amp;&#32;os,<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,Base&gt;</link>&#32;arg)&#32;&#32;&#32;{
<anchor xml:id="_dig__t_8hpp_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;d#&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01610"/>01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>std::int64_t<emphasis role="keyword">&gt;</emphasis>(arg()%Base)
<anchor xml:id="_dig__t_8hpp_source_1l01611"/>01611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;#B&quot;</emphasis>
<anchor xml:id="_dig__t_8hpp_source_1l01612"/>01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>std::int64_t<emphasis role="keyword">&gt;</emphasis>(Base)&#32;;
<anchor xml:id="_dig__t_8hpp_source_1l01613"/>01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
<anchor xml:id="_dig__t_8hpp_source_1l01614"/>01614 }
<anchor xml:id="_dig__t_8hpp_source_1l01615"/>01615 
<anchor xml:id="_dig__t_8hpp_source_1l01616"/>01616 }
<anchor xml:id="_dig__t_8hpp_source_1l01617"/>01617 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;DIG_T__HPP___INCLUDED</emphasis>
</programlisting></section>
