<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="es">
  <compounddef id="struct_num_repr_1_1nat__reg__digs__t" kind="struct" language="C++" prot="public">
    <compoundname>NumRepr::nat_reg_digs_t</compoundname>
    <basecompoundref refid="struct_num_repr_1_1reg__digs__t" prot="public" virt="non-virtual">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</basecompoundref>
    <includes refid="nat__reg__digs__t_8hpp" local="no">nat_reg_digs_t.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint_type_for_radix_c</type>
        <declname>UINT_T</declname>
        <defname>UINT_T</defname>
      </param>
      <param>
        <type>UINT_T</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
      <param>
        <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
        <declname>L</declname>
        <defname>L</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::SIG_UINT_T =  typename type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_UINT_T</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::SIG_UINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="16" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649" kindref="member">type_traits::sig_SInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::SIG_SINT_T =  typename type_traits::sig_SInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_SINT_T</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::SIG_SINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="17" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_t =  dig_t&lt;UINT_T,B&gt;</definition>
        <argsstring></argsstring>
        <name>dig_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_N_t =  reg_digs_t&lt;UINT_T,B,N&gt;</definition>
        <argsstring></argsstring>
        <name>base_N_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_N_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="23" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_t =  base_N_t&lt;L&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="24" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_base_N_op_t =  typename auxiliary_types::result_operation_t&lt;base_N_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_N_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_base_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="27" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_base_op_t =  typename auxiliary_types::result_operation_t&lt;base_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_base_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="30" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_N_digs_t =  nat_reg_digs_t&lt;UINT_T,B,N&gt;</definition>
        <argsstring></argsstring>
        <name>nat_reg_N_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_N_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="35" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_N_op_t =  typename auxiliary_types::result_operation_t&lt;nat_reg_N_digs_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_N_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="38" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_op_t =  typename auxiliary_types::result_operation_t&lt;nat_reg_digs_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="41" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCIONES INMEDIATAS QUE NOS DAN CONSTANTES DEL TIPO DE LA ACTUAL CLASE SE HACE CREANDO UNA VARIABLE RVALUE TEMPORAL CON LA FUNCION HOMOLOGA PARA BASE_T </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="50" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="50" bodyend="52"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1ad04bdf9bcccd5c68c414b2cca9e9bc75" compoundref="reg__digs__t_8hpp" startline="230" endline="232">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" compoundref="nat__reg__digs__t_8hpp" startline="1321" endline="1431">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</referencedby>
        <referencedby refid="namespace_num_repr_1abc220e2b8550522f9cb96ecd95d172bb" compoundref="nat__reg__digs__t_8hpp" startline="1781" endline="2029">NumRepr::operator&gt;&gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="55" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="55" bodyend="57"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1a9d2524d7b34e2e1b7d98ec3a16ccac67" compoundref="reg__digs__t_8hpp" startline="235" endline="237">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="60" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="60" bodyend="62"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1af02f9cc5afcc26fb14077a939c26ce85" compoundref="reg__digs__t_8hpp" startline="240" endline="242">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="65" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="65" bodyend="67"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1a8f86da208d0c9e947caea1a283711414" compoundref="reg__digs__t_8hpp" startline="245" endline="247">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="72" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="72" bodyend="74"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1af4fa7fec5b40b63434a86ee594adaed1" compoundref="reg__digs__t_8hpp" startline="250" endline="252">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="79" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="79" bodyend="81"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1a1e76f417daec0f07cb28088baec9fb29" compoundref="reg__digs__t_8hpp" startline="255" endline="257">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::assign</definition>
        <argsstring>(base_t &amp;larg, Int_Type arg) noexcept</argsstring>
        <name>assign</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::assign</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) A UN BASE_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="491" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="491" bodyend="515"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="478" endline="480">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a36d07cae3bf81e5a9b43c1cffd201d38" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</definition>
        <argsstring>(base_t &amp;larg, const dig_t &amp;rarg) noexcept -&gt; typename std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, base_t &gt;</argsstring>
        <name>m_add</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_add</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS | &amp; |= &amp;=. </para>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES BINARIAS CON/SIN TIPO RESULTADO OPERACIONES BINARIAS BASE_T @ DIG_T OPERATOR BASE_T += DIG_T CON NOMBRE M_ADDITION </para>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL POR DEFECTO</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>INICIALIZACION</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.CARRY</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1157" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1157" bodyend="1236"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5" compoundref="reg__digs__t_8hpp" startline="814" endline="822">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</references>
        <references refid="namespace_num_repr_1_1type__traits_1ab7aafe6bcb405d5c200145181755984f" compoundref="basic__types_8hpp" startline="548" endline="554">NumRepr::type_traits::middle_max</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</definition>
        <argsstring>(base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>m_sub</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_sub</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>OPERATOR BASE_T -= DIG_T CON NOMBRE M_SUB. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>COPIA DE RARG</para>
<para>CARRY INICIAL POR DEFECTO: NULO</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE RESTA RARG A LARG DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1240" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1240" bodyend="1273"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c" compoundref="reg__digs__t_8hpp" startline="1146" endline="1147">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::C_B</references>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d" compoundref="reg__digs__t_8hpp" startline="790" endline="800">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::add</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>add</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::add</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1276" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1276" bodyend="1279"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sub</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>sub</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sub</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1282" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1282" bodyend="1285"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval</type>
        <definition>consteval NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <briefdescription>
<para>CONSTRUCTOR POR DEFECTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="94" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="94" bodyend="95"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const std::initializer_list&lt; dig_t &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR POR LISTA DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="98" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="98" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const Ts &amp;... args) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(std::is_same_v&lt;Ts,dig_t&gt;&amp;&amp;...)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR POR ARGUMENTOS DIGITOS SIN LIMITE: DEDUCE EL TIPO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="104" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="104" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> *const</type>
        <definition>constexpr const base_t *const NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_base_this</definition>
        <argsstring>() const noexcept</argsstring>
        <name>const_base_this</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::const_base_this</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="108" column="37" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="108" bodyend="109"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" compoundref="nat__reg__digs__t_8hpp" startline="110" endline="111">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" compoundref="nat__reg__digs__t_8hpp" startline="247" endline="252">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>base_cpy_cthis</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_cpy_cthis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="110" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="110" bodyend="111"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b" compoundref="nat__reg__digs__t_8hpp" startline="108" endline="109">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_base_this</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" compoundref="nat__reg__digs__t_8hpp" startline="575" endline="576">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" compoundref="nat__reg__digs__t_8hpp" startline="585" endline="586">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" compoundref="nat__reg__digs__t_8hpp" startline="595" endline="596">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::subrepr</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>base_const_ref_cthis</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_const_ref_cthis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="112" column="31" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="112" bodyend="113"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b" compoundref="nat__reg__digs__t_8hpp" startline="108" endline="109">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_base_this</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a" compoundref="nat__reg__digs__t_8hpp" startline="114" endline="115">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_by_index</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a10794eef68bb9e67cc275c843794b89a" compoundref="nat__reg__digs__t_8hpp" startline="183" endline="185">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf" compoundref="nat__reg__digs__t_8hpp" startline="116" endline="117">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cpy_by_index</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a8d4656d2c0937af44d8868383da8c26d" compoundref="nat__reg__digs__t_8hpp" startline="192" endline="194">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" compoundref="nat__reg__digs__t_8hpp" startline="1321" endline="1431">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" compoundref="nat__reg__digs__t_8hpp" startline="223" endline="224">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" compoundref="nat__reg__digs__t_8hpp" startline="1304" endline="1307">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" compoundref="nat__reg__digs__t_8hpp" startline="1310" endline="1313">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" compoundref="nat__reg__digs__t_8hpp" startline="632" endline="635">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" compoundref="nat__reg__digs__t_8hpp" startline="269" endline="274">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr const dig_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_by_index</definition>
        <argsstring>(size_t ix) const noexcept</argsstring>
        <name>const_by_index</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::const_by_index</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="114" column="30" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="114" bodyend="115"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" compoundref="nat__reg__digs__t_8hpp" startline="1321" endline="1431">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" compoundref="nat__reg__digs__t_8hpp" startline="605" endline="618">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator Int_Type</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" compoundref="nat__reg__digs__t_8hpp" startline="479" endline="486">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cpy_by_index</definition>
        <argsstring>(size_t ix) const noexcept</argsstring>
        <name>cpy_by_index</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cpy_by_index</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="116" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="116" bodyend="117"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" compoundref="nat__reg__digs__t_8hpp" startline="671" endline="674">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator()</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" compoundref="nat__reg__digs__t_8hpp" startline="659" endline="662">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS FUNCION DELEGADA PARA COPIA DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="134" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="134" bodyend="152"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" compoundref="nat__reg__digs__t_8hpp" startline="123" endline="124">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</references>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="159" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="159" bodyend="176"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" compoundref="nat__reg__digs__t_8hpp" startline="123" endline="124">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</references>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" compoundref="nat__reg__digs__t_8hpp" startline="229" endline="230">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a10794eef68bb9e67cc275c843794b89a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA COPIA DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="183" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="183" bodyend="185"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8d4656d2c0937af44d8868383da8c26d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="192" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="192" bodyend="194"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR COPIA DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="202" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="202" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="209" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="209" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(Ints_type ... dig_pow_i) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>dig_pow_i</declname>
        </param>
        <briefdescription>
<para>END : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR COPIA DESDE ARGUMENTOS ENTEROS SIN LIMITE : DEDUCE EL TIPO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="217" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="217" bodyend="218"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912" compoundref="reg__digs__t_8hpp" startline="487" endline="551">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::normalize</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR COPIA POR REFERENCIA CONSTANTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="223" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="223" bodyend="224"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR POR MOVIMIENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="229" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="229" bodyend="230"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" compoundref="nat__reg__digs__t_8hpp" startline="119" endline="120">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" compoundref="nat__reg__digs__t_8hpp" startline="159" endline="176">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA CONST <emphasis>NO</emphasis> COPIABLE DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="236" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="236" bodyend="241"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" compoundref="nat__reg__digs__t_8hpp" startline="119" endline="120">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="247" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="247" bodyend="252"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b" compoundref="nat__reg__digs__t_8hpp" startline="108" endline="109">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_base_this</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA MOVIMIENTO DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="258" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="258" bodyend="263"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b" compoundref="nat__reg__digs__t_8hpp" startline="108" endline="109">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_base_this</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA EN LA QUE SE PUEDE COPIAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="269" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="269" bodyend="274"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" compoundref="nat__reg__digs__t_8hpp" startline="119" endline="120">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR MOVIMIENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="280" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="280" bodyend="285"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" compoundref="nat__reg__digs__t_8hpp" startline="119" endline="120">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA EN LA QUE <emphasis>NO</emphasis> SE PUEDE COPIAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="291" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="291" bodyend="296"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" compoundref="nat__reg__digs__t_8hpp" startline="119" endline="120">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_0</qualifiedname>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A CERO DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="436" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="436" bodyend="438"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_8hpp" startline="436" endline="438">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" compoundref="nat__reg__digs__t_8hpp" startline="479" endline="486">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_8hpp" startline="436" endline="438">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_Bm1</qualifiedname>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A B-1 DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="442" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="442" bodyend="444"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" compoundref="nat__reg__digs__t_8hpp" startline="442" endline="444">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" compoundref="nat__reg__digs__t_8hpp" startline="442" endline="444">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A VALOR DIG_T DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="448" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="448" bodyend="450"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab5263cf1eaa919874172ed0628db64f0" compoundref="nat__reg__digs__t_8hpp" startline="330" endline="335">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG_0 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="457" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="457" bodyend="459"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="465" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="465" bodyend="467"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="473" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="473" bodyend="475"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const dig_t &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="479" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="479" bodyend="486"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" compoundref="nat__reg__digs__t_8hpp" startline="123" endline="124">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a" compoundref="nat__reg__digs__t_8hpp" startline="114" endline="115">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_by_index</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_8hpp" startline="436" endline="438">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(Int_Type arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION COPIA DESDE UN ENTERO CONVERSION A LA BASE B DEL OBJETO ARG DE TIPO INT_TYPE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="520" column="34" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="520" bodyend="561"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" compoundref="nat__reg__digs__t_8hpp" startline="123" endline="124">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</references>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="namespace_num_repr_1_1type__traits_1a960a0fb19a2a30ba524a3d5243973f4f" compoundref="basic__types_8hpp" startline="212">NumRepr::type_traits::ge_sz_v</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N+L &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; N+L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>SUBREPR =&gt; SUB REPRESENTACION. </para>
        </briefdescription>
        <detaileddescription>
<para>NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT_INV(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT(DIG_T) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT_INV(DIG_T) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="575" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="575" bodyend="576"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" compoundref="nat__reg__digs__t_8hpp" startline="110" endline="111">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; L+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="579" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="579" bodyend="580"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" compoundref="nat__reg__digs__t_8hpp" startline="110" endline="111">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N+L &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; N+L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>cat_inv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat_inv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="585" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="585" bodyend="586"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" compoundref="nat__reg__digs__t_8hpp" startline="110" endline="111">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; L+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>cat_inv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat_inv</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="589" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="589" bodyend="590"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" compoundref="nat__reg__digs__t_8hpp" startline="110" endline="111">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; iend-ibegin &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::subrepr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subrepr</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::subrepr</qualifiedname>
    <requiresclause>((iend &lt;= L)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="595" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="595" bodyend="596"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" compoundref="nat__reg__digs__t_8hpp" startline="110" endline="111">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_cpy_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator Int_Type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Int_Type</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator Int_Type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="605" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="605" bodyend="618"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a" compoundref="nat__reg__digs__t_8hpp" startline="114" endline="115">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_by_index</references>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="478" endline="480">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::strong_ordering</type>
        <definition>constexpr std::strong_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="632" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="632" bodyend="635"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="641" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="641" bodyend="644"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const dig_t &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="648" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="648" bodyend="649"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="659" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="659" bodyend="662"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf" compoundref="nat__reg__digs__t_8hpp" startline="116" endline="117">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cpy_by_index</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr dig_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t idx) noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="665" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="665" bodyend="668"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" compoundref="nat__reg__digs__t_8hpp" startline="123" endline="124">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
            <defval>UINT_T</defval>
          </param>
        </templateparamlist>
        <type>constexpr Int_Type</type>
        <definition>constexpr Int_Type NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator()</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="671" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="671" bodyend="674"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf" compoundref="nat__reg__digs__t_8hpp" startline="116" endline="117">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cpy_by_index</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="786" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="786" bodyend="790"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="818" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="818" bodyend="822"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="909" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="909" bodyend="913"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="941" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="941" bodyend="945"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1042" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1042" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1050" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1050" bodyend="1054"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1057" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1057" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1063" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1063" bodyend="1067"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::rem_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1070" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1070" bodyend="1074"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" compoundref="nat__reg__digs__t_8hpp" startline="1008" endline="1013">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1077" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1077" bodyend="1081"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" compoundref="nat__reg__digs__t_8hpp" startline="1016" endline="1020">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mer_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1084" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1084" bodyend="1088"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" compoundref="nat__reg__digs__t_8hpp" startline="1024" endline="1029">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1091" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1091" bodyend="1095"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" compoundref="nat__reg__digs__t_8hpp" startline="1032" endline="1036">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : OPERATORS | &amp; |= &amp;= </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1104" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1104" bodyend="1108"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1111" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1111" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1119" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1119" bodyend="1123"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1126" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1126" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1290" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1290" bodyend="1294"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1297" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1297" bodyend="1301"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1304" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1304" bodyend="1307"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">NumRepr::add</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1310" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1310" bodyend="1313"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">NumRepr::sub</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad75f5d976f829391ff1a2dd444ada770" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1489" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1489" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a22fe395b3bc039501e85f32739585378" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1497" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1497" bodyend="1502"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a66df3998850226ded5adad90ba303519" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1505" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1505" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad662b6de3a00cd05bd8360af261578af" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator/</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator/</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator/</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>DIVISION BY A DIGIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1522" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1522" bodyend="1525"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">NumRepr::fediv</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a19230c6b73d80f18d23b299450d2a6d0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator%</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator%</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator%</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>REMAINDER BY A DIGIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1529" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1529" bodyend="1532"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">NumRepr::fediv</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1544" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1544" bodyend="1578"/>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2f2b61989451de1806071e761547e75e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1583" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1583" bodyend="1587"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; cparg pasa a ser el complemento a la base menos 1 de cparg</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1592" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1592" bodyend="1612"/>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a88e0cbd81bf9591a474869c5abd7579b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1617" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1617" bodyend="1621"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abb76020807fd7517e6c238c41291d830" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1626" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1626" bodyend="1635"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0e87dc1755fe87fbbb6a6ce6a32b5d51" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1640" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1640" bodyend="1644"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2e993a7ba4bced5c0294564e2ba67999" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>TO DO. </para>
        </briefdescription>
        <detaileddescription>
<para>TO DO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1665" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1665" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a962ba532424e77c124ebc9fbde8d75cc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1674" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1674" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2244f1f8ec6816d363690387c8e24e5e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1683" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1683" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afcfbc7a19a2913245aeca67444ecbdc7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1692" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1692" bodyend="1697"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4c2bf9b5eb73071ee089b28f26de7ace" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1701" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1701" bodyend="1706"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab80945af6751b25477521685c680b0a0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1710" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1710" bodyend="1715"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac9064422cde6b378fe3c6242e41c0e9c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator%</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator%</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator%</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1718" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1718" bodyend="1735"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> *const</type>
        <definition>constexpr base_t *const NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</definition>
        <argsstring>() noexcept</argsstring>
        <name>base_this</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_this</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="119" column="31" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="119" bodyend="120"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" compoundref="nat__reg__digs__t_8hpp" startline="229" endline="230">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" compoundref="nat__reg__digs__t_8hpp" startline="236" endline="241">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</definition>
        <argsstring>() noexcept</argsstring>
        <name>base_ref_cthis</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_ref_cthis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="121" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="121" bodyend="122"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" compoundref="nat__reg__digs__t_8hpp" startline="119" endline="120">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_this</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" compoundref="nat__reg__digs__t_8hpp" startline="123" endline="124">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" compoundref="nat__reg__digs__t_8hpp" startline="134" endline="152">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" compoundref="nat__reg__digs__t_8hpp" startline="1091" endline="1095">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" compoundref="nat__reg__digs__t_8hpp" startline="1077" endline="1081">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" compoundref="nat__reg__digs__t_8hpp" startline="1084" endline="1088">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" compoundref="nat__reg__digs__t_8hpp" startline="159" endline="176">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" compoundref="nat__reg__digs__t_8hpp" startline="1119" endline="1123">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" compoundref="nat__reg__digs__t_8hpp" startline="786" endline="790">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" compoundref="nat__reg__digs__t_8hpp" startline="1290" endline="1294">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" compoundref="nat__reg__digs__t_8hpp" startline="909" endline="913">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" compoundref="nat__reg__digs__t_8hpp" startline="1297" endline="1301">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" compoundref="nat__reg__digs__t_8hpp" startline="1050" endline="1054">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" compoundref="nat__reg__digs__t_8hpp" startline="1063" endline="1067">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" compoundref="nat__reg__digs__t_8hpp" startline="1104" endline="1108">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" compoundref="nat__reg__digs__t_8hpp" startline="1070" endline="1074">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_8hpp" startline="436" endline="438">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" compoundref="nat__reg__digs__t_8hpp" startline="442" endline="444">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" compoundref="nat__reg__digs__t_8hpp" startline="448" endline="450">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" compoundref="nat__reg__digs__t_8hpp" startline="457" endline="459">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" compoundref="nat__reg__digs__t_8hpp" startline="465" endline="467">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" compoundref="nat__reg__digs__t_8hpp" startline="473" endline="475">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr const dig_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::by_index</definition>
        <argsstring>(size_t ix) noexcept</argsstring>
        <name>by_index</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::by_index</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>ix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="123" column="30" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="123" bodyend="124"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" compoundref="nat__reg__digs__t_8hpp" startline="121" endline="122">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_ref_cthis</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" compoundref="nat__reg__digs__t_8hpp" startline="134" endline="152">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" compoundref="nat__reg__digs__t_8hpp" startline="159" endline="176">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" compoundref="nat__reg__digs__t_8hpp" startline="479" endline="486">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" compoundref="nat__reg__digs__t_8hpp" startline="665" endline="668">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac67f0700240165427c4bb850d5bb08ba" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::predecrement</definition>
        <argsstring>(base_t &amp;arg) noexcept -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::sub &gt;, const base_t &amp; &gt;</argsstring>
        <name>predecrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::predecrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>BORROW INICIAL POR DEFECTO</para>
<para>RESTA 1 A ARG EN IDX == 0</para>
<para>BUCLE FOR QUE RESTA A ARG UN 1 DESDE IDX=1 A IDX=L-1</para>
<para>CREAMOS EL RETORNO RET</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.BORROW</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>RESTA 1 A ARG EN IDX == 0</para>
<para>BUCLE FOR QUE RESTA BORROW A ARG [DESDE 1 EN IDX=0] DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="828" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="828" bodyend="904"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d" compoundref="reg__digs__t_8hpp" startline="790" endline="800">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6f5cbeb4edc7087fda335fd78b82cc04" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::postdecrement</definition>
        <argsstring>(base_t &amp;arg) noexcept -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::sub &gt;, const base_t &amp; &gt;</argsstring>
        <name>postdecrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::postdecrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="919" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="919" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</definition>
        <argsstring>(dig_t arg) const noexcept -&gt; std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::mult &gt;, const base_t &amp; &gt;</argsstring>
        <name>mult</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mult</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES &apos;@&apos;(REG_DIGS_T,DIG_T)-&gt;RESULT_TYPE&lt;&apos;@&apos;&gt; &apos;@&apos; = MULT </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1321" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1321" bodyend="1431"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" compoundref="nat__reg__digs__t_8hpp" startline="112" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_const_ref_cthis</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a" compoundref="nat__reg__digs__t_8hpp" startline="114" endline="115">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_by_index</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d" compoundref="reg__digs__t_8hpp" startline="790" endline="800">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683" compoundref="reg__digs__t_8hpp" startline="803" endline="811">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" compoundref="nat__reg__digs__t_8hpp" startline="50" endline="52">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</references>
        <references refid="namespace_num_repr_1_1type__traits_1a9c68ad4f3469998252d88633edf8e908" compoundref="basic__types_8hpp" startline="557">NumRepr::type_traits::sqrt_max</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa340d969b6d01c15b8181e542d3a2fef" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="301" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="301" bodyend="305"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa06e3a55433e98a553d0204ce642f6b8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>set_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="310" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="310" bodyend="315"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350" compoundref="reg__digs__t_8hpp" startline="714" endline="716">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae15231d7a8ac742f64c352de56ad42b5" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="320" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="320" bodyend="325"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1a635891fe476a0d485b6430eb003c66ff" compoundref="reg__digs__t_8hpp" startline="719" endline="721">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab5263cf1eaa919874172ed0628db64f0" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg, dig_t d) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="330" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="330" bodyend="335"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" compoundref="nat__reg__digs__t_8hpp" startline="448" endline="450">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab34465d0d6e59a525a12c9977e977817" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_dig</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg, dig_t d) noexcept</argsstring>
        <name>set_fill_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="340" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="340" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af13be3b273d68ffebd6958b6337e62e5" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_fill_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="349" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="349" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a75874430d65f1256ed2a78f658a6ae46" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_Bm1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_fill_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="358" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="358" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="370" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="370" bodyend="373"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="381" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="381" bodyend="384"/>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg, dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="392" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>(base_t &amp;larg) noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="404" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="404" bodyend="407"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>(base_t &amp;larg) noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="416" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="416" bodyend="419"/>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(base_t &amp;larg, dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="428" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="428" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a50aeb5c3fe8c0b4c63285056e36b4ae6" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::preincrement</definition>
        <argsstring>(base_t &amp;arg) noexcept -&gt; std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, const base_t &amp; &gt;</argsstring>
        <name>preincrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::preincrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt; PREINCREMENT(OBJ) == ++OBJ SOLO QUE DEVUELVE CARRY TAMBIÉN PREINCREMENT(OBJ) -&gt; CONDICIONALMENTE BIEN RES_BASE_OP_T (con CARRY), BIEN BASE_T (sin CARRY) &lt; result_content_low result_content_high carry borrow result_content_quotient result_content_remainder good_result </para>
        </detaileddescription>
        <inbodydescription>
<para>true == tipo resultado</para>
<para>CREAMOS EL RETORNO RET DE TIPO RESULTADO</para>
<para>NOMBRE CORTO PARA RET.CARRY</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>INCREMENTO DEL PRIMER DIGITO</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>CARRY INICIAL POR DEFECTO</para>
<para>INCREMENTO DEL PRIMER DIGITO</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="701" column="5" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="701" bodyend="781"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5" compoundref="reg__digs__t_8hpp" startline="814" endline="822">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a38c65d55b25b542097093afe2787eb37" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::postincrement</definition>
        <argsstring>(base_t &amp;arg) noexcept -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, const base_t &amp; &gt;</argsstring>
        <name>postincrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::postincrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="796" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="796" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::rem_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>BEGIN : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>MULTIPLY BY THE BASE B (10) &lt;&lt; &lt;&lt;= DIVIDE BY THE BASE B (10) &gt;&gt; &gt;&gt;= REMAINDER BY THE BASE B (10) REM_B_N M_REM_B_N MULTIPLICATIVE CARRY BY THE BASE B (10) MER_B_N M_MER_B_N </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1008" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1008" bodyend="1013"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" compoundref="nat__reg__digs__t_8hpp" startline="1070" endline="1074">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1016" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1016" bodyend="1020"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" compoundref="nat__reg__digs__t_8hpp" startline="1077" endline="1081">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mer_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1024" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1024" bodyend="1029"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" compoundref="nat__reg__digs__t_8hpp" startline="1084" endline="1088">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1032" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1032" bodyend="1036"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" compoundref="nat__reg__digs__t_8hpp" startline="1091" endline="1095">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</referencedby>
      </memberdef>
      </sectiondef>
    <requiresclause>(suitable_base&lt;UINT_T,B&gt;() &amp;&amp; (L&gt;0))    </requiresclause>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1nat__reg__digs__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1reg__digs__t"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::array&lt; dig_t&lt; UINT_T, B &gt;, L &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1nat__reg__digs__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1reg__digs__t"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>std::array&lt; dig_t&lt; UINT_T, B &gt;, L &gt;</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="14" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="14" bodyend="1737"/>
    <listofallmembers>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>add</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>assign</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5fd5f903aae0b2017103d59e368c71f7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>back</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab3d4db33623c17c1f36712663487df1b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>back</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_const_ref_cthis</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_cpy_cthis</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_N_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_ref_cthis</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_this</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2f8a4ff3bd499089c6440c7992ee13cd" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>begin</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>by_index</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1acd5dfd683e4fee83f7561568f809a2ba" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aeaaa5fc1d830756bffaf882156b86896" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8e8c64cba0341a3ad057053b346e42bd" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1cdda4f3f9f0ef5c4668901fb0e40b33" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa542abd7039bf3f0a9c62200a7b944d8" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1adb0296af7bc31546157ad06a67573a22" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae9ba2cc837d955061093bb0da463e2e6" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a217ae996ddbff03f35fb3e7c6b24c1dd" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat_inv</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa912c8d96b92e95e0d751f2a4500c436" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cbegin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2cc438add79ca50b7ec3a0dcb3b4c6df" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cend</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>const_base_this</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>const_by_index</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a10794eef68bb9e67cc275c843794b89a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a813a2fca2665812c80725f66d1e5049f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cp_base_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cp_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af5c56f665da3c6aa1957ae521e74312d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cp_cthis_at</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cpy_by_index</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a7838aa779ec4ee589ba738f92786f356" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cpy_data</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6adb2fc166cc2a4419f5f86bd282df4f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cr_base_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cr_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a44c0eab2b1465200a4dc0e349dba0b07" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cr_cthis_at</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1abfbe9a50e4c844fa73ee64e3de27d4c1" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>crbegin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab2f586a22c208f2db8981f236be1f8a5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>crend</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a19a5a18b4db93320f0b9060aada7c146" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>data</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>data</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9d37af8b2ce4db142cb55a932d8fd805" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3c8f7cb71f70468db3ba5ccef33bdd37" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a48a6ce4848e83ccea11c42c2deea38d9" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aae46074f8eb1e11d4856e2efc720e3b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_Bm2</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1344b97a93e4af1c28f04d2f8238ee09" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>empty</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aae1bd8ec380671dcd31c9d7dcd03d445" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>end</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a0456b2f0f8d879695698974f9f2b325d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>fill</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3746b11d0b23dc5d2bbba1d9cea58a41" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>front</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a022dc0ba35bb79d3a00d31f6603bcfbe" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>front</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a011d4b57bf296a0e08fff4385eca0e08" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>get_type_template_string_id_token</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>index_of_MSDig</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2cc4d03f17f00015a43125e0f5018ef2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_any_B_pow</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a4b713404cbac91d3d972d1b8595bdb40" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa9715a437357c3a2a1f79fc7477bb57a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a435cc68f0dd8a90375404140fc9c8ff8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow_m1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a15cc6e417db19bb0483b3d81b31bf20d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bp1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3a7c58a84c5be2458373bc6083a4e3e9" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8f7a8ee6879194fd027b67e20f578474" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae0ead5a6439ee2a2a9f56dc29353ef60" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9328818c1dfd9433ac98d72cdfa8aba5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_type_template_string_id</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a36d07cae3bf81e5a9b43c1cffd201d38" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_add</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_sub</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aad87f0f5f3bf9825b962e7288d527b96" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>make_base_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a79ebf142083abdc8dcd44a354f159129" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>max_size</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8d4656d2c0937af44d8868383da8c26d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mult</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_N_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>normalize</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator Int_Type</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a05a97a435bf59c5442be92c071176aac" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad76a2aa47907fd2f3ec19035c0a926a6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a369c8486faffc16e8bc798dbce25b101" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a19230c6b73d80f18d23b299450d2a6d0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator%</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac9064422cde6b378fe3c6242e41c0e9c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator%</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a20034464834ae81a063a9c8fa4224f45" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aebcb3bf7aaf1baa65bd97aeec1e777df" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator()</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a66df3998850226ded5adad90ba303519" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2244f1f8ec6816d363690387c8e24e5e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab80945af6751b25477521685c680b0a0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abb76020807fd7517e6c238c41291d830" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0e87dc1755fe87fbbb6a6ce6a32b5d51" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad75f5d976f829391ff1a2dd444ada770" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2e993a7ba4bced5c0294564e2ba67999" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afcfbc7a19a2913245aeca67444ecbdc7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2f2b61989451de1806071e761547e75e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a22fe395b3bc039501e85f32739585378" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a962ba532424e77c124ebc9fbde8d75cc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4c2bf9b5eb73071ee089b28f26de7ace" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1addfe409a19fc9017ac89b2516f4a6a8a" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a88e0cbd81bf9591a474869c5abd7579b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad662b6de3a00cd05bd8360af261578af" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator/</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a84b45a6bb497fbda0a83ac5b58c8a1a6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a37b9758878b51f5ed9ebbebc14b41c9c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a871e547fbf592d7bf26f82fd019a3e65" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa68aa5a93f69fcb7a191fec77bb27332" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a0f39118683e41ccec4e43fc0c3a94f7f" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3556d4ba2e14f426e919f1cfcde675fe" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab18c370a730eae337ebe1e42e554bfb3" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1add6d93e2ffcc34e57e4698a627d2fd48" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a72a186fd0231cb5140dc75466e628688" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2d1a40f341324f56e566b838fe888264" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5ecc41aa76ee4b40c1f7480177d701f4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af6e5280e0fbfa4b07d1a6651cbafa515" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae9a2c8fbb6a3aa1ed25aee8950b0b10f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a869c348238795f848214949bad8445b0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a88399df8a3b2e9f6fa413f5ba8c4147a" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1b446da3b8751e1c8af8839e1a59b1c5" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6f5cbeb4edc7087fda335fd78b82cc04" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>postdecrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a38c65d55b25b542097093afe2787eb37" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>postincrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac67f0700240165427c4bb850d5bb08ba" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>predecrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a50aeb5c3fe8c0b4c63285056e36b4ae6" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>preincrement</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aabe906a2378892bb152dba2e3f2a7b5c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>r_base_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>r_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a926b408a1e43d578157164c351ac60c2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>r_cthis_at</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae0932422c4f294cd994b0f457af37599" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rbegin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab93743da3d764bb199f0d93b13247b73" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af158dcd2b4c5d1cd725810f7b32a6377" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6d5930c7c0f8583b4000a60bd32aa00c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5f1afe08bc99f4458f4406fbf8bc4388" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a667cc7f5b4658b2195c48e794f5c84a6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aaba6b4d99022c55a9b8ca3ce2d62a50c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad86b53a69638c4c1dddbcc396bd8c341" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a64366dbe24ccb2e35ba2c4a9c6f1f1f6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_N_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1affe99648c3d9c6e3e4decac8d4e46ee1" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5b1efb8235b79459b15c6f2f84659452" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a69d2abd48bd92a58df7f51fc9e7578dd" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a475a4bf204efd8f87c400575dc49114d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ac49dc9af3af62aea5a7dfde9114e6c18" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1adb436e23c7144ee0da3db08cac34c7ed" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad9a96eb8b49ed44884da34180b85fe4f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa001d41637e1a10c1284b5239b37159c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2ef368bdca679fa51aee6d18644b6a12" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af10d7f31743e81babe1c9d542f30f013" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a55521e5b02fa0a1d56745066e20eab91" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a16e44b01fdd4e66c3390c34578f32e2c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6a98c20beaf0085e9b75ed6a73b6fac5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rend</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_base_N_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_base_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_N_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_op_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3acacc33c0ddfe1a24835436f1e9d9f2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reverse</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa340d969b6d01c15b8181e542d3a2fef" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa06e3a55433e98a553d0204ce642f6b8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>set_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae15231d7a8ac742f64c352de56ad42b5" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab5263cf1eaa919874172ed0628db64f0" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af13be3b273d68ffebd6958b6337e62e5" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a0d7f94d520c14a413858bb3fd2ebae9c" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a75874430d65f1256ed2a78f658a6ae46" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8449e0efdd8a69da67e519ee2716c200" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab34465d0d6e59a525a12c9977e977817" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_dig</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a02db587c3f90aadabbde0f92731f622d" prot="public" virt="non-virtual" ambiguityscope="NumRepr::reg_digs_t::"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>SIG_SINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>SIG_UINT_T</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a7c0ccc82f763ae0b3bf9fd78f218c206" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>size</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2ff36f133f6bcf9cd379e54be025a214" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>size_of_type_template_string_id</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ac1cf8584292927fea378bde2e3172fce" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ssi_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af598442408cf2ed05923092e2ccb7cd2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ssi_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a80fbaa972abc3ee57f5e8561eb4e944d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ssi_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5e0248eb0b0cef64dcbf5fb87823714e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ssi_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae6d6e6d6877d2fe389cdbacbaf7a6f63" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ssi_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sub</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa50d8abff6aa4a71c41fcb31c0441eb2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>subregister</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>subrepr</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a869fb55d18546d9f677b47fd1dd1d8bd" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a80e523569503af77fdf36cada4de6700" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1adaa8d7c0417ae7a7e76237ba2d368ede" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a51dd71f63e7ccf1c92adbe3876a5eb19" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af47bb7bcb365e6060f836ec7d53c8565" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_Bp1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa0d612930f23d7545926c12c6149759b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>swap</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a7d907a0fc450d27d7937370a2209aed6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>to_type_template_string_id</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa6b20e53fc72fb5353a27a5db5205ea2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1ba13ed518c031c71ccd2aa99292c4f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3d59521dadb20ede37c648c6ec863bda" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aafcea2323aac8fcedfc0f0780e46df5f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_Bm1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
