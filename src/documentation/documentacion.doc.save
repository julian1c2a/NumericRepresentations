    DISTINTAS REPRESENTACIONES DE NÚMEROS
    _____________________________________
        DISTINTOS TIPOS DE DÍGITOS
     dig_t Representación (interna) binario generalizado natural en C++ 
        (base 256,65536,2^32,2^64,2^128 bits)               GBinarioNaturalEmpaquetado  *
     dig_t Representación (interna) binario generalizado natural en C++ 
        (base 2,4,8,16,32,64,128 bits)                      GBinarioNaturalBitArray     *
        (base 512,1024,2048,4096,8192,16384,32768 bits)     GBinarioNaturalBitArray     *
        .....
        (base 2^65,2^66,2^67,2^68,2^69,2^70,2^71 bits)      GBinarioNaturalBitArray     *
        Especificar BASE B
        Se trata de una especialización del tipo binario natural explícito fácil de hacer
     dig_t Representación (interna) BCD natural en C++                      ***
        Especificar BASE B
     dig_t Representación (interna) BCD exceso 3                            ***
        Especificar BASE B
     dig_t Representación (interna) BCD Aitken                              ***
        Especificar BASE B
     dig_t Representación Johnson_N bits interna                            ***
        Especificar BASE B
     dig_t Representación Biquinario interno                                ***
        Especificar BASE B
     dig_t Hamming para cualquiera de las representaciones                  ****
        HABRÍA PREVIAMENTE QUE CODIFICAR LA CLASE CÓDIGO DE ANCHO FIJO EN CUALQUIER BASE
    [dig_t,..,dig_t] L digitos nat_reg_digs_t
        Especificar BASE B y LONGITUD L
    [signo,dig_t,..,dig_t] L digitos int_reg_digs_t en C_B
        Especificar BASE B y LONGITUD L
    [signo,dig_t,..,dig_t] L digitos int_reg_digs_t en MS               **
        Especificar BASE B y LONGITUD L 
    [dig_t,...,dig_t,sep,dig_t,...,dig_t] natrat_fixed_reg_t            **
        Especificar B , Le , Lf 
    [signo,dig_t,..,dig_t] L digitos int_reg_digs_t  C_B                **
        Especificar B , L   
    [signo,dig_t,..,dig_t] L digitos int_reg_digs_t  MS                 ***
        Especificar B y L
    [signo,dig_t,...,dig_t,sep,dig_t,...,dig_t] intrat_fixed_reg_t  C_B *
        Especificar B , Le , Lf
    [signo,dig_t,...,dig_t,sep,dig_t,...,dig_t] intrat_fixed_reg_t  MS  ***
        Especificar B , Le , Lf
    [dig_t,...,dig_t,sep,dig_t,...,dig_t] NumDivDen natrat_NumDen_reg_t **
        Especificar B , LN , LD
    [dig_t,...,dig_t,sep,dig_t,...,dig_t] SignNumDivDen rat_NumDen_reg_t C_B *
        Especificar B , LN , LD
    [dig_t,...,dig_t,sep,dig_t,...,dig_t] SignNumDivDen rat_NumDen_reg_t MS  ***
        Especificar B , LN , LD
    [dig_t,...dig_t] numero variable de digitos nat_num_t
        Especificar B
    [signo,dig_t,...dig_t] numero variable de digitos int_num_t C_B
        Especificar B
    [signo,dig_t,...dig_t] numero variable de digitos int_num_t MS                      ***
        Especificar B
    [dig_t,...dig_t/dig_t,...dig_t] racionales no negativos denominador y numerador     **
        Especificar B
    [dig_t,...dig_t/dig_t,...dig_t] racionales denominador y numerador denominador C_B  **
        Especificar B
    [dig_t,...dig_t/dig_t,...dig_t] racionales denominador y numerador denominador MS   ***
        Especificar B
    [signo,dig_t,...,dig_t,sep,signo,dig_t,...,dig_t] IEEE754 GENERALIZADA PARA CUALQUIER BASE B ****
        Especificar B
    EXTENSIONES P-ADICAS              ******
    EXTENSIONES FRACCIONES CONTINUAS  *****
