<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="es">
  <compounddef id="structutilities_1_1for__each__same__type" kind="struct" language="C++" prot="public">
    <compoundname>utilities::for_each_same_type</compoundname>
    <includes refid="utilities_8hpp" local="no">utilities.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Head_t</type>
      </param>
      <param>
        <type>class...</type>
        <declname>Tail_t</declname>
        <defname>Tail_t</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structutilities_1_1for__each__same__type_1acf16b98533524aefda115e880faa2baf" prot="public" static="no">
        <type>std::tuple_element&lt; 0, std::tuple&lt; Tail_t... &gt; &gt;::type</type>
        <definition>using utilities::for_each_same_type&lt; Head_t, Tail_t &gt;::second_t =  std::tuple_element&lt;0,std::tuple&lt;Tail_t...&gt; &gt;::type</definition>
        <argsstring></argsstring>
        <name>second_t</name>
        <qualifiedname>utilities::for_each_same_type::second_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="78" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structutilities_1_1for__each__same__type_1a10069179aea7ad89090b1e1db8926772" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool utilities::for_each_same_type&lt; Head_t, Tail_t &gt;::are_same_type_v</definition>
        <argsstring></argsstring>
        <name>are_same_type_v</name>
        <qualifiedname>utilities::for_each_same_type::are_same_type_v</qualifiedname>
        <initializer>= (
        (std::is_same_v&lt;Head_t,<ref refid="structutilities_1_1for__each__same__type_1acf16b98533524aefda115e880faa2baf" kindref="member">second_t</ref>&gt;)
		&amp;&amp;	(<ref refid="structutilities_1_1for__each__same__type" kindref="compound">for_each_same_type</ref>&lt;Tail_t...&gt;::are_same_type_v)
	)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="80" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="77" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="77" bodyend="84"/>
    <listofallmembers>
      <member refid="structutilities_1_1for__each__same__type_1a10069179aea7ad89090b1e1db8926772" prot="public" virt="non-virtual"><scope>utilities::for_each_same_type</scope><name>are_same_type_v</name></member>
      <member refid="structutilities_1_1for__each__same__type_1acf16b98533524aefda115e880faa2baf" prot="public" virt="non-virtual"><scope>utilities::for_each_same_type</scope><name>second_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
