<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="es">
  <compounddef id="struct_num_repr_1_1reg__digs__t" kind="struct" language="C++" prot="public">
    <compoundname>NumRepr::reg_digs_t</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::array&lt; dig_t&lt; UINT_T, B &gt;, L &gt;</basecompoundref>
    <derivedcompoundref refid="struct_num_repr_1_1nat__reg__digs__t" prot="public" virt="non-virtual">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</derivedcompoundref>
    <includes refid="reg__digs__t_8hpp" local="no">reg_digs_t.hpp</includes>
    <templateparamlist>
      <param>
        <type>uint_type_for_radix_c</type>
        <declname>UINT_T</declname>
        <defname>UINT_T</defname>
      </param>
      <param>
        <type>UINT_T</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
      <param>
        <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
        <declname>L</declname>
        <defname>L</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::dig_t =  dig_t&lt;UINT_T,B&gt;</definition>
        <argsstring></argsstring>
        <name>dig_t</name>
        <qualifiedname>NumRepr::reg_digs_t::dig_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="18" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref>, N &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::base_N_t =  std::array&lt;dig_t,N&gt;</definition>
        <argsstring></argsstring>
        <name>base_N_t</name>
        <qualifiedname>NumRepr::reg_digs_t::base_N_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="22" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; L &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::base_t =  base_N_t&lt;L&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>NumRepr::reg_digs_t::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="24" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_N_digs_t =  reg_digs_t&lt;UINT_T,B,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_N_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_N_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="27" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::SIG_UINT_T =  typename type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_UINT_T</name>
        <qualifiedname>NumRepr::reg_digs_t::SIG_UINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="77" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649" kindref="member">type_traits::sig_SInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::SIG_SINT_T =  typename type_traits::sig_SInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_SINT_T</name>
        <qualifiedname>NumRepr::reg_digs_t::SIG_SINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="78" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1ab04d648f3421732b3103e32a28f28d09" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::res_base_N_op_t =  typename auxiliary_types::result_operation_t&lt;base_N_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_N_op_t</name>
        <qualifiedname>NumRepr::reg_digs_t::res_base_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="81" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1reg__digs__t_1a410c269c5a379228ee4f9c757cdaace8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::res_base_op_t =  typename auxiliary_types::result_operation_t&lt;base_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_op_t</name>
        <qualifiedname>NumRepr::reg_digs_t::res_base_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="85" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5b679caa4dbb16fb6c5cca1f30ba5f66" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> *const</type>
        <definition>const base_t *const NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::const_base_this</definition>
        <argsstring>() const noexcept</argsstring>
        <name>const_base_this</name>
        <qualifiedname>NumRepr::reg_digs_t::const_base_this</qualifiedname>
        <briefdescription>
<para>devolucion de punteros a la clase base </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="30" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6feafb3a28270bf7a293959e34d168e6" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> *</type>
        <definition>base_t * NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::base_this</definition>
        <argsstring>() noexcept</argsstring>
        <name>base_this</name>
        <qualifiedname>NumRepr::reg_digs_t::base_this</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="34" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aabe906a2378892bb152dba2e3f2a7b5c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;</type>
        <definition>base_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::r_base_cthis</definition>
        <argsstring>() noexcept</argsstring>
        <name>r_base_cthis</name>
        <qualifiedname>NumRepr::reg_digs_t::r_base_cthis</qualifiedname>
        <briefdescription>
<para>devolucion de referencias a la clase base </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="38" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6adb2fc166cc2a4419f5f86bd282df4f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;</type>
        <definition>const base_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cr_base_cthis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cr_base_cthis</name>
        <qualifiedname>NumRepr::reg_digs_t::cr_base_cthis</qualifiedname>
        <briefdescription>
<para>devolucion de copia de la clase base </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="42" column="21" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a813a2fca2665812c80725f66d1e5049f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cp_base_cthis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cp_base_cthis</name>
        <qualifiedname>NumRepr::reg_digs_t::cp_base_cthis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="46" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::r_cthis</definition>
        <argsstring>() noexcept</argsstring>
        <name>r_cthis</name>
        <qualifiedname>NumRepr::reg_digs_t::r_cthis</qualifiedname>
        <briefdescription>
<para>devolucion de referencias de la clase actual </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="50" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cr_cthis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cr_cthis</name>
        <qualifiedname>NumRepr::reg_digs_t::cr_cthis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="54" column="26" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cp_cthis</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cp_cthis</name>
        <qualifiedname>NumRepr::reg_digs_t::cp_cthis</qualifiedname>
        <briefdescription>
<para>devolucion de copia de la clase actual </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="58" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af5c56f665da3c6aa1957ae521e74312d" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cp_cthis_at</definition>
        <argsstring>(size_t k) const noexcept</argsstring>
        <name>cp_cthis_at</name>
        <qualifiedname>NumRepr::reg_digs_t::cp_cthis_at</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>devoluciones por referencias y por copia de los elementos </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="62" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a926b408a1e43d578157164c351ac60c2" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
        <definition>dig_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::r_cthis_at</definition>
        <argsstring>(size_t k) noexcept</argsstring>
        <name>r_cthis_at</name>
        <qualifiedname>NumRepr::reg_digs_t::r_cthis_at</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="66" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a44c0eab2b1465200a4dc0e349dba0b07" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
        <definition>const dig_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cr_cthis_at</definition>
        <argsstring>(size_t k) const noexcept</argsstring>
        <name>cr_cthis_at</name>
        <qualifiedname>NumRepr::reg_digs_t::cr_cthis_at</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="70" column="21" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2f8a4ff3bd499089c6440c7992ee13cd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>NumRepr::reg_digs_t::begin</qualifiedname>
        <briefdescription>
<para>En este bloque hacemos esta clase wrapper como si fuese una clase derivada de base_t Para esto replicamos y sobrecargamos cada una de las funciones por defecto de std::array Nota: lo anterior se escribio cuando no era clase derivada sino un wrapper. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="267" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="267" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa912c8d96b92e95e0d751f2a4500c436" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cbegin</name>
        <qualifiedname>NumRepr::reg_digs_t::cbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="269" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="269" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aae1bd8ec380671dcd31c9d7dcd03d445" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <qualifiedname>NumRepr::reg_digs_t::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="271" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="271" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2cc438add79ca50b7ec3a0dcb3b4c6df" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cend</name>
        <qualifiedname>NumRepr::reg_digs_t::cend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="273" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="273" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ae0932422c4f294cd994b0f457af37599" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::rbegin</definition>
        <argsstring>() noexcept</argsstring>
        <name>rbegin</name>
        <qualifiedname>NumRepr::reg_digs_t::rbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="275" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="275" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1abfbe9a50e4c844fa73ee64e3de27d4c1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::crbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>crbegin</name>
        <qualifiedname>NumRepr::reg_digs_t::crbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="277" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="277" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6a98c20beaf0085e9b75ed6a73b6fac5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::rend</definition>
        <argsstring>() noexcept</argsstring>
        <name>rend</name>
        <qualifiedname>NumRepr::reg_digs_t::rend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="279" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="279" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ab2f586a22c208f2db8981f236be1f8a5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::crend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>crend</name>
        <qualifiedname>NumRepr::reg_digs_t::crend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="281" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="281" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a7c0ccc82f763ae0b3bf9fd78f218c206" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
        <definition>constexpr size_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>NumRepr::reg_digs_t::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="284" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="284" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a79ebf142083abdc8dcd44a354f159129" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
        <definition>constexpr size_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::max_size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>max_size</name>
        <qualifiedname>NumRepr::reg_digs_t::max_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="286" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="286" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a1344b97a93e4af1c28f04d2f8238ee09" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::empty</definition>
        <argsstring>() const noexcept</argsstring>
        <name>empty</name>
        <qualifiedname>NumRepr::reg_digs_t::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="288" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="288" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3746b11d0b23dc5d2bbba1d9cea58a41" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::front</definition>
        <argsstring>() noexcept</argsstring>
        <name>front</name>
        <qualifiedname>NumRepr::reg_digs_t::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="291" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="291" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a022dc0ba35bb79d3a00d31f6603bcfbe" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> const &amp;</type>
        <definition>constexpr dig_t const  &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::front</definition>
        <argsstring>() const noexcept</argsstring>
        <name>front</name>
        <qualifiedname>NumRepr::reg_digs_t::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="293" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="293" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5fd5f903aae0b2017103d59e368c71f7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::back</definition>
        <argsstring>() noexcept</argsstring>
        <name>back</name>
        <qualifiedname>NumRepr::reg_digs_t::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="295" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="295" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ab3d4db33623c17c1f36712663487df1b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> const &amp;</type>
        <definition>constexpr dig_t const  &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::back</definition>
        <argsstring>() const noexcept</argsstring>
        <name>back</name>
        <qualifiedname>NumRepr::reg_digs_t::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="297" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="297" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a0456b2f0f8d879695698974f9f2b325d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::fill</definition>
        <argsstring>(const dig_t &amp;value) noexcept</argsstring>
        <name>fill</name>
        <qualifiedname>NumRepr::reg_digs_t::fill</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="300" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="300" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa0d612930f23d7545926c12c6149759b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::swap</definition>
        <argsstring>(base_t &amp;other) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>NumRepr::reg_digs_t::swap</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="302" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="302" bodyend="303"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf">NumRepr::other</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3acacc33c0ddfe1a24835436f1e9d9f2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reverse</definition>
        <argsstring>() noexcept</argsstring>
        <name>reverse</name>
        <qualifiedname>NumRepr::reg_digs_t::reverse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="304" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="304" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ab93743da3d764bb199f0d93b13247b73" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval</type>
        <definition>consteval NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <briefdescription>
<para>Constructores de <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Constructor por defecto (rellena de <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t(0)</ref> todo el array) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="323" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="323" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af158dcd2b4c5d1cd725810f7b32a6377" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(const std::initializer_list&lt; dig_t &gt; &amp;arg) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Constructor por lista de digitos utilizando la función make_base_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="370" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="370" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6d5930c7c0f8583b4000a60bd32aa00c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(const Ts &amp;... args) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(std::is_same_v&lt;Ts,dig_t&gt;&amp;&amp;...)    </requiresclause>
        <briefdescription>
<para>Constructor por argumentos tipo <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>: deduce el tipo. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="379" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="379" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5f1afe08bc99f4458f4406fbf8bc4388" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(const base_t &amp;rarg) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR COPIA DESDE EL TIPO BASE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="384" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="384" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a667cc7f5b4658b2195c48e794f5c84a6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(base_t &amp;&amp;rarg) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;&amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR MOVIMIENTO DESDE EL TIPO BASE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="387" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="387" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aaba6b4d99022c55a9b8ca3ce2d62a50c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Constructor copia desde un array cualquiera de dígitos <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref> (usando copy_arg_N&lt;N&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="463" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="463" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ad86b53a69638c4c1dddbcc396bd8c341" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Constructor por movimiento desde un array cualquiera de dígitos <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref> (usando move_arg_N&lt;N&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="472" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="472" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a64366dbe24ccb2e35ba2c4a9c6f1f1f6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::reg_digs_t</definition>
        <argsstring>(Ints_type ... dig_pow_i) noexcept</argsstring>
        <name>reg_digs_t</name>
        <qualifiedname>NumRepr::reg_digs_t::reg_digs_t</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>dig_pow_i</declname>
        </param>
    <requiresclause>((sizeof...(Ints_type))==L)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;summary=&quot;Constructor copia desde una sucesión de objetos enteros variádica, normalizándolos&quot;&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="560" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="560" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3556d4ba2e14f426e919f1cfcde675fe" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Sobrecarga del operador copia. </para>
        </briefdescription>
        <detaileddescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA CONST <emphasis>NO</emphasis> COPIABLE DESDE REG_N_DIGS_T EN LA IZQUIERDA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="573" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="573" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ab18c370a730eae337ebe1e42e554bfb3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA DESDE REG_N_DIGS_T EN LA IZQUIERDA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="584" column="13" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="584" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1add6d93e2ffcc34e57e4698a627d2fd48" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr const base_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION ASIGNACION POR MOVIMIENTO DESDE REGS_N_DIGS_T EN LA QUE NO SE PUEDE COPIAR </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="595" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="595" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa424868f7b7f2da2b989b2eb96ed1ed1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const dig_t &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="604" column="13" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="604" bodyend="611"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1" compoundref="reg__digs__t_8hpp" startline="710" endline="711">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ada84ccdb7769b08b7b91b1dae6452c09" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(Int_Type arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator=</qualifiedname>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) A UN REG_DIGS_T </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="617" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="617" bodyend="641"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="478" endline="480">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3ff2a749d367851189bc05a1687a0b22" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator Int_Type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Int_Type</name>
        <qualifiedname>NumRepr::reg_digs_t::operator Int_Type</qualifiedname>
        <briefdescription>
<para>SE PODRÍA HACER PARA UINT128_T. </para>
        </briefdescription>
        <detaileddescription>
<para>Algunas Conversiones </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="649" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="649" bodyend="663"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="478" endline="480">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> *const</type>
        <definition>constexpr const dig_t *const NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>data</name>
        <qualifiedname>NumRepr::reg_digs_t::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;summary=&quot; sobrecarga de las funciones miembro : &quot;&gt; constexpr const dig_t* <ref refid="struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5" kindref="member">data() const </ref>noexcept;</para>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="679" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="679" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a7838aa779ec4ee589ba738f92786f356" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr decltype(auto)</type>
        <definition>constexpr decltype(auto) NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cpy_data</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cpy_data</name>
        <qualifiedname>NumRepr::reg_digs_t::cpy_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="684" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="684" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a81530d3849391d6dbc3c3a17fb486607" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr const dig_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t ix) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>ix</declname>
        </param>
        <briefdescription>
<para>&lt;summary=&quot;Sobrecarga del const dig_t &amp; operator[](size_t) const&quot;&gt; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="690" column="13" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="690" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aaa8d34738ae18ebceb3399ca4df463b8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr dig_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t ix) noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>ix</declname>
        </param>
        <briefdescription>
<para>&lt;summary=&quot;Sobrecarga del dig_t &amp; operator[](size_t)&quot;&gt; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="696" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="696" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::reg_digs_t::set_0</qualifiedname>
        <briefdescription>
<para>Funciones que ponen a constantes (constexpr) los objetos base_t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>size_t</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
&lt;nontypeparam name=&quot;N&quot;&gt;&lt;/nontypeparam&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>this</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="710" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="710" bodyend="711"/>
        <referencedby refid="namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254" compoundref="reg__digs__t_8hpp" startline="1865" endline="1901">NumRepr::m_incr</referencedby>
        <referencedby refid="struct_num_repr_1_1reg__digs__t_1aa424868f7b7f2da2b989b2eb96ed1ed1" compoundref="reg__digs__t_8hpp" startline="604" endline="611">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_1</name>
        <qualifiedname>NumRepr::reg_digs_t::set_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="714" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="714" bodyend="716"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aa06e3a55433e98a553d0204ce642f6b8" compoundref="nat__reg__digs__t_8hpp" startline="310" endline="315">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a635891fe476a0d485b6430eb003c66ff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::set_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="719" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="719" bodyend="721"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ae15231d7a8ac742f64c352de56ad42b5" compoundref="nat__reg__digs__t_8hpp" startline="320" endline="325">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a9736402ea76979c6f3b550b4e7f8a2f0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(dig_t d) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="724" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="724" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a02db587c3f90aadabbde0f92731f622d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_dig</definition>
        <argsstring>(dig_t d) noexcept</argsstring>
        <name>set_fill_dig</name>
        <qualifiedname>NumRepr::reg_digs_t::set_fill_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="729" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="729" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a0d7f94d520c14a413858bb3fd2ebae9c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_fill_1</name>
        <qualifiedname>NumRepr::reg_digs_t::set_fill_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="733" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="733" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a8449e0efdd8a69da67e519ee2716c200" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_fill_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::set_fill_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="738" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="738" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a00ff39c7cca1ca76bfb5c0dd8021841b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::reg_digs_t::set_interval_0</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>&quot;Funciones que ponen a constantes(constexpr) los objetos un subintervalo
o subrango de base_t cualquiera&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>size_t</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
&lt;nontypeparam name=&quot;N_i&quot;&gt;&lt;/nontypeparam&gt; &lt;nontypeparam name=&quot;N_pf&quot;&gt;&lt;/nontypeparam&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>this</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="758" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="758" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af61633115c32e8183d2f606ce5d815fd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::set_interval_Bm1</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="769" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="769" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a538c70fae56df59c2ddbe0868f24cdaf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_T summary=&quot;Funciones comparativas con constantes tipo constexpr&quot;&gt; param name=&quot;this&quot;&gt;</para>
<para>returns=&quot;bool&quot;&gt;</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="780" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_0</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_0</name>
        <qualifiedname>NumRepr::reg_digs_t::is_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="790" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="790" bodyend="800"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" compoundref="nat__reg__digs__t_8hpp" startline="1240" endline="1273">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" compoundref="nat__reg__digs__t_8hpp" startline="1321" endline="1431">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac67f0700240165427c4bb850d5bb08ba" compoundref="nat__reg__digs__t_8hpp" startline="828" endline="904">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::predecrement</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_1</name>
        <qualifiedname>NumRepr::reg_digs_t::is_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="803" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="803" bodyend="811"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093" compoundref="nat__reg__digs__t_8hpp" startline="1321" endline="1431">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::is_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="814" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="814" bodyend="822"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a36d07cae3bf81e5a9b43c1cffd201d38" compoundref="nat__reg__digs__t_8hpp" startline="1157" endline="1236">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a50aeb5c3fe8c0b4c63285056e36b4ae6" compoundref="nat__reg__digs__t_8hpp" startline="701" endline="781">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::preincrement</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a4b713404cbac91d3d972d1b8595bdb40" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_B</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_B</name>
        <qualifiedname>NumRepr::reg_digs_t::is_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="825" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="825" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a15cc6e417db19bb0483b3d81b31bf20d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_Bp1</name>
        <qualifiedname>NumRepr::reg_digs_t::is_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="842" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="842" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a435cc68f0dd8a90375404140fc9c8ff8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow_m1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_B_pow_m1</name>
        <qualifiedname>NumRepr::reg_digs_t::is_B_pow_m1</qualifiedname>
    <requiresclause>(n&lt;L)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="860" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="860" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa9715a437357c3a2a1f79fc7477bb57a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_B_pow</name>
        <qualifiedname>NumRepr::reg_digs_t::is_B_pow</qualifiedname>
    <requiresclause>(n&lt;L-1)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="890" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="890" bodyend="931"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2cc4d03f17f00015a43125e0f5018ef2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_any_B_pow</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_any_B_pow</name>
        <qualifiedname>NumRepr::reg_digs_t::is_any_B_pow</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="934" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="934" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a8f7a8ee6879194fd027b67e20f578474" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_filled_of_1</name>
        <qualifiedname>NumRepr::reg_digs_t::is_filled_of_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="949" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="949" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ae0ead5a6439ee2a2a9f56dc29353ef60" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_Bm1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>is_filled_of_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::is_filled_of_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="957" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="957" bodyend="962"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3a7c58a84c5be2458373bc6083a4e3e9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of</definition>
        <argsstring>(dig_t d) const</argsstring>
        <name>is_filled_of</name>
        <qualifiedname>NumRepr::reg_digs_t::is_filled_of</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="965" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="965" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa50d8abff6aa4a71c41fcb31c0441eb2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt;(ibegin&lt; iend)?(iend-ibegin):(ibegin-iend)&gt;</type>
        <definition>constexpr reg_N_digs_t&lt;(ibegin&lt; iend)?(iend-ibegin):(ibegin-iend)&gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::subregister</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subregister</name>
        <qualifiedname>NumRepr::reg_digs_t::subregister</qualifiedname>
    <requiresclause>((iend &lt;= L)&amp;&amp;(ibegin &lt; L)&amp;&amp;(ibegin != iend))    </requiresclause>
        <briefdescription>
<para>TAKE A SUBREGISTER OF A REGISTER OF DIGITS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1095" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1095" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::mC_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERADORES ARITMETICOS <ref refid="struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c" kindref="member">C_B()</ref> <ref refid="struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2" kindref="member">C_Bm1()</ref> <ref refid="struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb" kindref="member">mC_B()</ref> <ref refid="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" kindref="member">mC_Bm1()</ref> <ref refid="struct_num_repr_1_1reg__digs__t_1a05a97a435bf59c5442be92c071176aac" kindref="member">operator!()</ref> <ref refid="struct_num_repr_1_1reg__digs__t_1addfe409a19fc9017ac89b2516f4a6a8a" kindref="member">operator-()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1119" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1119" bodyend="1124"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" compoundref="reg__digs__t_8hpp" startline="1119" endline="1124">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</references>
        <referencedby refid="struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb" compoundref="reg__digs__t_8hpp" startline="1127" endline="1139">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</referencedby>
        <referencedby refid="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" compoundref="reg__digs__t_8hpp" startline="1119" endline="1124">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_B</name>
        <qualifiedname>NumRepr::reg_digs_t::mC_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1127" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1127" bodyend="1139"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" compoundref="reg__digs__t_8hpp" startline="1119" endline="1124">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::C_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1142" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1142" bodyend="1143"/>
        <referencedby refid="namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3" compoundref="reg__digs__t_8hpp" startline="1955" endline="1974">NumRepr::m_sum</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::C_B</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_B</name>
        <qualifiedname>NumRepr::reg_digs_t::C_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1146" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1146" bodyend="1147"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" compoundref="nat__reg__digs__t_8hpp" startline="1240" endline="1273">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a05a97a435bf59c5442be92c071176aac" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator!</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator!</name>
        <qualifiedname>NumRepr::reg_digs_t::operator!</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A partir de aquí no he hecho las sustituciones de const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp; cthis{*this}; / <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp; cthis{*this}; / <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> cthis{*this}; Por las correspondientes funciones <ref refid="struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b" kindref="member">cr_cthis()</ref> / <ref refid="struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b" kindref="member">r_cthis()</ref> / <ref refid="struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c" kindref="member">cp_cthis()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1154" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1154" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1addfe409a19fc9017ac89b2516f4a6a8a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::reg_digs_t::operator-</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1158" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1158" bodyend="1159"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a844edc62cc648266e8e9073666b00a87" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>MULTIPLY BY THE BASE B (10) &lt;&lt; &lt;&lt;= DIVIDE BY THE BASE B (10) &gt;&gt; &gt;&gt;= REMAINDER BY THE BASE B (10) REM_B_N M_REM_B_N MULTIPLICATIVE CARRY BY THE BASE B (10) MER_B_N M_MER_B_N </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1169" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1169" bodyend="1177"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a9847e4f64cf1507ee623d67775eba2df" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>TODO TO DO VOY POR AQUI CON EL TEMA DE LOS CTHIS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1182" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1182" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1acda9e6eea4d49b7f6fbbf9c3bec9f7cd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1194" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1194" bodyend="1205"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a91c247827ae9c2c539b5d7089a9fe884" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1208" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1208" bodyend="1212"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a4c289fab138512b65681d3c6fa1df2cc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::reg_digs_t::rem_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1215" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1215" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5826bd193c62e736efdbe0fdd81cb653" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1222" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1222" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a9f01e4cb3e143f6a26bd251919afe9d8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::reg_digs_t::mer_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1230" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1230" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a717ff4a829077dbe06174feaa92a22d7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1237" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1237" bodyend="1241"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a1b446da3b8751e1c8af8839e1a59b1c5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</definition>
        <argsstring>(const base_t &amp;rarg) const noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator|=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1244" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1244" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a88399df8a3b2e9f6fa413f5ba8c4147a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator|</definition>
        <argsstring>(const reg_digs_t &amp;rarg) const noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::reg_digs_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1253" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1253" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aebcb3bf7aaf1baa65bd97aeec1e777df" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
        <definition>constexpr const reg_digs_t &amp; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</definition>
        <argsstring>(const reg_digs_t &amp;rarg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&amp;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1260" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1260" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a20034464834ae81a063a9c8fa4224f45" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;</definition>
        <argsstring>(const reg_digs_t &amp;rarg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1269" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1269" bodyend="1273"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa" kindref="member">int64_t</ref></type>
        <definition>constexpr int64_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::index_of_MSDig</definition>
        <argsstring>() const noexcept</argsstring>
        <name>index_of_MSDig</name>
        <qualifiedname>NumRepr::reg_digs_t::index_of_MSDig</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NOS DEVUELVE EL ÍNDICE DEL DÍGITO NO 0 DE POTENCIA DE B MAS GRANDE NOS DEVUELVE 0 SI ES UN DÍGITO NO 0 NOS DEVUELVE -1 SI ES EL DÍGITO 0 CUALQUIER OTRO CASO NOS DARÁ MAYOR QUE 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1280" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1280" bodyend="1286"/>
        <referencedby refid="namespace_num_repr_1a1924720464e58ae5372de9b39a45d496" compoundref="reg__digs__t_8hpp" startline="2205" endline="2294">NumRepr::fediv</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a72a186fd0231cb5140dc75466e628688" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const dig_t &amp;rarg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>COMPARACIONES ENTRE BASE_T Y DIG_T EN FORMA BASE_T @ DIG_T. </para>
        </briefdescription>
        <detaileddescription>
<para>SOBRECARGA DE LOS OPERADORES DE COMPARACION Y ORDEN </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1296" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1296" bodyend="1304"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ad76a2aa47907fd2f3ec19035c0a926a6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const dig_t &amp;rarg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1307" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1307" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5ecc41aa76ee4b40c1f7480177d701f4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const dig_t &amp;rarg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1319" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1319" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a84b45a6bb497fbda0a83ac5b58c8a1a6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const dig_t &amp;rarg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1330" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1330" bodyend="1338"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ae9a2c8fbb6a3aa1ed25aee8950b0b10f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const dig_t &amp;rarg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1341" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1341" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a871e547fbf592d7bf26f82fd019a3e65" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const dig_t &amp;rarg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1352" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1352" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2d1a40f341324f56e566b838fe888264" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;rarg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMPARACIONES ENTRE REG_DIGS_T Y REG_N_DIGS_T HETEROGENEOS EN GENERAL EN FORMA REG_DIGS_T @ REG_N_DIGS_T&lt;M&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1368" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1368" bodyend="1391"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a369c8486faffc16e8bc798dbce25b101" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;rarg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1395" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1395" bodyend="1418"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af6e5280e0fbfa4b07d1a6651cbafa515" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;rarg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1422" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1422" bodyend="1445"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a37b9758878b51f5ed9ebbebc14b41c9c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;rarg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1449" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1449" bodyend="1472"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a869c348238795f848214949bad8445b0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;rarg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1476" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1476" bodyend="1478"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa68aa5a93f69fcb7a191fec77bb27332" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;rarg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1482" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1482" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a0f39118683e41ccec4e43fc0c3a94f7f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::strong_ordering</type>
        <definition>constexpr std::strong_ordering NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const reg_N_digs_t&lt; M &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1490" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1490" bodyend="1499"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a1598611c9a2c97185a0c0719ed7309de" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const dig_t &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1503" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1503" bodyend="1512"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a9d37af8b2ce4db142cb55a932d8fd805" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_0</name>
        <qualifiedname>NumRepr::reg_digs_t::dig_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="88" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="88" bodyend="89"/>
        <references refid="struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3" compoundref="dig__t_8hpp" startline="160" endline="160">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3c8f7cb71f70468db3ba5ccef33bdd37" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_1</name>
        <qualifiedname>NumRepr::reg_digs_t::dig_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="90" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="90" bodyend="91"/>
        <references refid="struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c" compoundref="dig__t_8hpp" startline="161" endline="161">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a48a6ce4848e83ccea11c42c2deea38d9" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::dig_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="92" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="92" bodyend="93"/>
        <references refid="struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856" compoundref="dig__t_8hpp" startline="158" endline="158">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aae46074f8eb1e11d4856e2efc720e3b4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm2</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm2</name>
        <qualifiedname>NumRepr::reg_digs_t::dig_Bm2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="94" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="94" bodyend="95"/>
        <references refid="struct_num_repr_1_1dig__t_1a326196de3bd9537e5c23df66440b8a56" compoundref="dig__t_8hpp" startline="159" endline="159">NumRepr::dig_t&lt; UINT_T, B &gt;::dig_Bm2</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa6b20e53fc72fb5353a27a5db5205ea2" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_0</name>
        <qualifiedname>NumRepr::reg_digs_t::ui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="96" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="96" bodyend="97"/>
        <references refid="struct_num_repr_1_1dig__t_1a76b5c675bb32de9c1803da4dd804d8e4" compoundref="dig__t_8hpp" startline="167" endline="167">NumRepr::dig_t&lt; UINT_T, B &gt;::ui_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a1ba13ed518c031c71ccd2aa99292c4f5" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_1</name>
        <qualifiedname>NumRepr::reg_digs_t::ui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="98" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="98" bodyend="99"/>
        <references refid="struct_num_repr_1_1dig__t_1a7abd8bcb3f0bd6b749488dfad8e56da5" compoundref="dig__t_8hpp" startline="168" endline="168">NumRepr::dig_t&lt; UINT_T, B &gt;::ui_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aafcea2323aac8fcedfc0f0780e46df5f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::ui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="100" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="100" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a3d59521dadb20ede37c648c6ec863bda" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_B</name>
        <qualifiedname>NumRepr::reg_digs_t::ui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="102" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="102" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a869fb55d18546d9f677b47fd1dd1d8bd" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::sui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_0</name>
        <qualifiedname>NumRepr::reg_digs_t::sui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="104" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="104" bodyend="105"/>
        <references refid="struct_num_repr_1_1dig__t_1aeb3cb9d0b23b1c211dff853083a6fe83" compoundref="dig__t_8hpp" startline="179" endline="181">NumRepr::dig_t&lt; UINT_T, B &gt;::sui_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a80e523569503af77fdf36cada4de6700" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::sui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_1</name>
        <qualifiedname>NumRepr::reg_digs_t::sui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="106" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="106" bodyend="107"/>
        <references refid="struct_num_repr_1_1dig__t_1a43a4e505e240a8f1ad75f5ad5f8d1353" compoundref="dig__t_8hpp" startline="182" endline="184">NumRepr::dig_t&lt; UINT_T, B &gt;::sui_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a51dd71f63e7ccf1c92adbe3876a5eb19" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::sui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::sui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="108" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="108" bodyend="109"/>
        <references refid="struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9" compoundref="dig__t_8hpp" startline="170" endline="172">NumRepr::dig_t&lt; UINT_T, B &gt;::sui_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1adaa8d7c0417ae7a7e76237ba2d368ede" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::sui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_B</name>
        <qualifiedname>NumRepr::reg_digs_t::sui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="110" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="110" bodyend="111"/>
        <references refid="struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9" compoundref="dig__t_8hpp" startline="170" endline="172">NumRepr::dig_t&lt; UINT_T, B &gt;::sui_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af47bb7bcb365e6060f836ec7d53c8565" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::sui_Bp1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bp1</name>
        <qualifiedname>NumRepr::reg_digs_t::sui_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="112" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="112" bodyend="113"/>
        <references refid="struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9" compoundref="dig__t_8hpp" startline="170" endline="172">NumRepr::dig_t&lt; UINT_T, B &gt;::sui_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ac1cf8584292927fea378bde2e3172fce" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" kindref="member">SIG_SINT_T</ref></type>
        <definition>static consteval SIG_SINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ssi_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>ssi_0</name>
        <qualifiedname>NumRepr::reg_digs_t::ssi_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="114" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="114" bodyend="115"/>
        <references refid="struct_num_repr_1_1dig__t_1a287219a289b34f6f682e318b3ca1f92c" compoundref="dig__t_8hpp" startline="195" endline="197">NumRepr::dig_t&lt; UINT_T, B &gt;::ssi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af598442408cf2ed05923092e2ccb7cd2" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" kindref="member">SIG_SINT_T</ref></type>
        <definition>static consteval SIG_SINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ssi_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ssi_1</name>
        <qualifiedname>NumRepr::reg_digs_t::ssi_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="116" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="116" bodyend="117"/>
        <references refid="struct_num_repr_1_1dig__t_1af8eebfebac403516d028ecce97b98d63" compoundref="dig__t_8hpp" startline="198" endline="200">NumRepr::dig_t&lt; UINT_T, B &gt;::ssi_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5e0248eb0b0cef64dcbf5fb87823714e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" kindref="member">SIG_SINT_T</ref></type>
        <definition>static consteval SIG_SINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ssi_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ssi_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::ssi_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="118" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="118" bodyend="119"/>
        <references refid="struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179" compoundref="dig__t_8hpp" startline="186" endline="188">NumRepr::dig_t&lt; UINT_T, B &gt;::ssi_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a80fbaa972abc3ee57f5e8561eb4e944d" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" kindref="member">SIG_SINT_T</ref></type>
        <definition>static consteval SIG_SINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ssi_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>ssi_B</name>
        <qualifiedname>NumRepr::reg_digs_t::ssi_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="120" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="120" bodyend="121"/>
        <references refid="struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179" compoundref="dig__t_8hpp" startline="186" endline="188">NumRepr::dig_t&lt; UINT_T, B &gt;::ssi_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ae6d6e6d6877d2fe389cdbacbaf7a6f63" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" kindref="member">SIG_SINT_T</ref></type>
        <definition>static consteval SIG_SINT_T NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::ssi_Bp1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ssi_Bp1</name>
        <qualifiedname>NumRepr::reg_digs_t::ssi_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="122" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="122" bodyend="123"/>
        <references refid="struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179" compoundref="dig__t_8hpp" startline="186" endline="188">NumRepr::dig_t&lt; UINT_T, B &gt;::ssi_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ac49dc9af3af62aea5a7dfde9114e6c18" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_0</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_N_0</qualifiedname>
        <briefdescription>
<para>PARA EL TIPO-TEMPLATE BASE_N_T OBTENEMOS CONSTANTES INMEDIATAS TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="132" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1adb436e23c7144ee0da3db08cac34c7ed" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_N_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="142" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa001d41637e1a10c1284b5239b37159c" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_N_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="150" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ad9a96eb8b49ed44884da34180b85fe4f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_B</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_N_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="158" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2ef368bdca679fa51aee6d18644b6a12" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_pow_n_B</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_N_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; N))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="167" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="167" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af10d7f31743e81babe1c9d542f30f013" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_pow_n_B_m1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_N_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; N))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="176" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="176" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1affe99648c3d9c6e3e4decac8d4e46ee1" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_0</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_0</qualifiedname>
        <briefdescription>
<para>IDEM QUE ANTES PERO CON EL TIPO BASE_T ESPECIALIZANDO AL TIPO BASE_N_T&lt;L&gt; DONDE BASE_T == BASE_N_T&lt;L&gt; TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="195" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a5b1efb8235b79459b15c6f2f84659452" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="200" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a475a4bf204efd8f87c400575dc49114d" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="205" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a69d2abd48bd92a58df7f51fc9e7578dd" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_B</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="210" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a55521e5b02fa0a1d56745066e20eab91" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_pow_n_B</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_pow_n_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="215" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a16e44b01fdd4e66c3390c34578f32e2c" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_pow_n_B_m1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_base_pow_n_B_m1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="220" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ad04bdf9bcccd5c68c414b2cca9e9bc75" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static consteval reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_0</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_0</qualifiedname>
        <briefdescription>
<para>IDEM QUE ANTES PERO CON LA CLASE DERIVADA, LA ACTUAL TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="230" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="230" bodyend="232"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" compoundref="nat__reg__digs__t_8hpp" startline="50" endline="52">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a9d2524d7b34e2e1b7d98ec3a16ccac67" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static consteval reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="235" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="235" bodyend="237"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" compoundref="nat__reg__digs__t_8hpp" startline="55" endline="57">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af02f9cc5afcc26fb14077a939c26ce85" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static consteval reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_Bm1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="240" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="240" bodyend="242"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" compoundref="nat__reg__digs__t_8hpp" startline="60" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a8f86da208d0c9e947caea1a283711414" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static consteval reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_B</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="245" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="245" bodyend="247"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" compoundref="nat__reg__digs__t_8hpp" startline="65" endline="67">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1af4fa7fec5b40b63434a86ee594adaed1" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static consteval reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_pow_n_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="250" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="250" bodyend="252"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" compoundref="nat__reg__digs__t_8hpp" startline="72" endline="74">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a1e76f417daec0f07cb28088baec9fb29" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static consteval reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B_m1</name>
        <qualifiedname>NumRepr::reg_digs_t::regd_pow_n_B_m1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="255" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="255" bodyend="257"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" compoundref="nat__reg__digs__t_8hpp" startline="79" endline="81">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::normalize</definition>
        <argsstring>(Ints_type ... digits_pow_i) noexcept</argsstring>
        <name>normalize</name>
        <qualifiedname>NumRepr::reg_digs_t::normalize</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>digits_pow_i</declname>
        </param>
    <requiresclause>((sizeof...(Ints_type)) == L)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;summary=&quot;Funcion de normalizacion a dig_t (dígitos base B) que construye un objeto de tipo &quot;&gt;</para>
<para>&lt;summary=&quot;base_t desde una sucesion variadica de enteros cualquiera&quot;&gt;</para>
<para>&lt;function name=&quot;normalize&quot;&gt;&lt;/function&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Ints_type ... digits_pow_i</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
&lt;returns=&quot;base_t&quot;&gt;</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CREA UN STD_ARRAY DEL TIPO INT PASADO POR UN PACK DE ARGUMENTOS EL TAMANO ES EL DEL PACK DE ARGUMENTOS PASADO (MENOR O IGUAL QUE L)</para>
<para>&lt; DEVUELVE EL TIPO INTERNO DE ELEMENTO DEL ARRAY ANTERIOR [UN TIPO ENTERO]</para>
<para>&lt; DEVUELVE EL TAMANO DEL ARRAY ANTERIOR (TAMAÑO == L)</para>
<para>&lt; ELIGE ENTRE CUATRO TIPOS DE ENTEROS SEGUN TENGAN SIGNO O NO Y SU TAMANO SEA MAYOR O MENOR QUE EL PROPIO DE LA BASE UINT_T TIPO PROPIO ES : UINT_T TIPO PASADO COMO ARGUMENTO ES : UNIQUE_TYPE LOS TIPOS PASADOS EN LOS ARGUMENTOS HAN DE SER IGUALES ENTRE SI PARA EL INTERROGANTE CONDICIONAL UTILIZAMOS UNSIGNED_INTEGRAL_C<s> PRIMERA PREGUNTA O MAS EXTERIOR IS_UNISGNED_SZ_GT_V&lt;T,S&gt; PREGUNTAS SEGUNDAS O MAS INTERIORES PARA ELEGIR EL TIPO APROPIADO EN CADA CASO USAMOS SIG_UINT_FOR_UINT_T&lt;UINT_T&gt; SIG_UINT_FOR_UINT_T&lt;UNIQUE_TYPE&gt; SIG_UINT_FOR_UINT_T&lt;UINT_T&gt; SIG_UINT_FOR_SINT_T&lt;UNIQUE_TYPE&gt;</s></para>
<para><s></s></para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="487" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="487" bodyend="551"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" compoundref="nat__reg__digs__t_8hpp" startline="217" endline="218">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1acd5dfd683e4fee83f7561568f809a2ba" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
        <definition>static constexpr reg_digs_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(const reg_digs_t &amp;arg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>STATIC REG_DIGS_T CAT(REG_DIGS_T) </para>
        </briefdescription>
        <detaileddescription>
<para>STATIC FUNCTIONS : CONCATENATE REGISTERS AND DIGITS reg_digs_t&lt;1&gt; <ref refid="struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8" kindref="member">cat(dig_t)</ref> <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt;1+1&gt; <ref refid="struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649" kindref="member">cat(dig_t,dig_t)</ref> <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> cat(reg_digs_t) &lt;M&gt; reg_N_digs_t&lt;L+M&gt; cat(reg_digs_t,reg_N_digs_t&lt;M&gt;) reg_N_digs_t&lt;L+1&gt; cat(reg_digs_t,dig_t) reg_N_digs_t&lt;1+L&gt; cat(dig_t,reg_digs_t) reg_N_digs_t&lt;sizeof...(dig_pack)&gt; cat(dig_t ... dig_pack) VARIADIC PACK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="984" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="984" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aeaaa5fc1d830756bffaf882156b86896" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; L+M &gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; L+M &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(const reg_digs_t &amp;larg, const reg_N_digs_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>STATIC &lt;M&gt; REG_N_DIGS_T&lt;L+M&gt; CAT(REG_DIGS_T,REG_N_DIGS_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="991" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="991" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a8e8c64cba0341a3ad057053b346e42bd" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; L+1 &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(const reg_digs_t &amp;larg, dig_t rarg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>STATIC REG_DIGS_T&lt;L+1&gt; CAT(REG_DIGS_T,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1003" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1003" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a1cdda4f3f9f0ef5c4668901fb0e40b33" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; 1+L &gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; 1+L &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(dig_t larg, const reg_digs_t &amp;rarg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>REG_N_DIGS_T&lt;1+L&gt; CAT(DIG_T,REG_DIGS_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1014" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1014" bodyend="1021"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; 1 &gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; 1 &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(dig_t larg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <briefdescription>
<para>STATIC REG_N_DIGS_T&lt;1&gt; CAT(DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1025" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1025" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; 2 &gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; 2 &gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(dig_t larg, dig_t rarg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref></type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>STATIC REG_N_DIGS_T&lt;1+1&gt; CAT(DIG_T,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1030" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1030" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aa542abd7039bf3f0a9c62200a7b944d8" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; 1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; 1+(sizeof ...(Ts))&gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(T0 dig0, Ts ... dig_pack) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type>T0</type>
          <declname>dig0</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>( ((std::is_same_v&lt;Ts,dig_t&gt;)&amp;&amp;...)&amp;&amp; (std::is_same_v&lt;T0,dig_t&gt;) )    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC REG_N_DIGS_T&lt;SIZEOF...(DIG_PACK)&gt; CAT(DIG_T,DIG_T ... DIG_PACK) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1046" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1046" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1adb0296af7bc31546157ad06a67573a22" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; L+1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; L+1+(sizeof ...(Ts))&gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(reg_digs_t larg, T dig, Ts ... dig_pack) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>( ((std::is_same_v&lt;Ts,dig_t&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,dig_t&gt;) )    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC REG_N_DIGS_T&lt;L+1+(SIZEOF...(DIG_PACK))&gt; CAT(REG_DIGS_T,DIG_T,DIG_T ... DIG_PACK) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1059" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1059" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ae9ba2cc837d955061093bb0da463e2e6" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; L+1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; L+1+(sizeof ...(Ts))&gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(T dig, Ts ... dig_pack, reg_digs_t rarg) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref></type>
          <declname>rarg</declname>
        </param>
    <requiresclause>( ((std::is_same_v&lt;Ts,dig_t&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,dig_t&gt;) )    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC REG_N_DIGS_T&lt;L+1+(SIZEOF...(DIG_PACK))&gt; CAT(DIG_T,DIG_T ... DIG_PACK,REG_DIGS_T) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1072" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1072" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a217ae996ddbff03f35fb3e7c6b24c1dd" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref> ...</type>
            <declname>N_pack</declname>
            <defname>N_pack</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; N+(...+(N_pack))&gt;</type>
        <definition>static constexpr reg_N_digs_t&lt; N+(...+(N_pack))&gt; NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(reg_N_digs_t&lt; N &gt; larg, reg_N_digs_t&lt; N_pack &gt; ... rarg_pack) noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" kindref="member">reg_N_digs_t</ref>&lt; N_pack &gt; ...</type>
          <declname>rarg_pack</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC REG_N_DIGS_T&lt;SIZE_T N,SIZE_T ... N_PACK&gt; CAT(REG_N_DIGS_T&lt;N&gt; LARG,
                REG_N_DIGS_T&lt;N_PACK&gt; ... RARG_PACK
        ) VARIADIC PACK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1085" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1085" bodyend="1088"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a9328818c1dfd9433ac98d72cdfa8aba5" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::is_type_template_string_id</definition>
        <argsstring>(std::string in) noexcept</argsstring>
        <name>is_type_template_string_id</name>
        <qualifiedname>NumRepr::reg_digs_t::is_type_template_string_id</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>el parser/lexer del <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Funciones de ayuda para </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1517" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1517" bodyend="1530"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a7d907a0fc450d27d7937370a2209aed6" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::to_type_template_string_id</definition>
        <argsstring>() noexcept</argsstring>
        <name>to_type_template_string_id</name>
        <qualifiedname>NumRepr::reg_digs_t::to_type_template_string_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1533" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1533" bodyend="1534"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2ff36f133f6bcf9cd379e54be025a214" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
        <definition>static size_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::size_of_type_template_string_id</definition>
        <argsstring>() noexcept</argsstring>
        <name>size_of_type_template_string_id</name>
        <qualifiedname>NumRepr::reg_digs_t::size_of_type_template_string_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1537" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1537" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a011d4b57bf296a0e08fff4385eca0e08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::get_type_template_string_id_token</definition>
        <argsstring>(std::istream &amp;is)</argsstring>
        <name>get_type_template_string_id_token</name>
        <qualifiedname>NumRepr::reg_digs_t::get_type_template_string_id_token</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION GENERICA QUE CONSIGUE EL TOKEN TYPE PARA LA OBTENCION DEL OBJETO CORRESPONDIENTE POR TECLADO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1544" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1544" bodyend="1571"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1aad87f0f5f3bf9825b962e7288d527b96" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::make_base_t</definition>
        <argsstring>(const std::initializer_list&lt; dig_t &gt; &amp;larg)</argsstring>
        <name>make_base_t</name>
        <qualifiedname>NumRepr::reg_digs_t::make_base_t</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <briefdescription>
<para>Funcion miembro para generar un objeto tipo base_t y devolverlo desde un std::initializer_list&lt;dig_t&gt; </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;function name=&quot;make_base_t&quot;&gt;&lt;/function&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const std::initializer_list&lt;dig_t&gt;&amp; larg</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
&lt;returns=&quot;rarg : base_t&quot;&gt;</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="334" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="334" bodyend="363"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1ad633ab0410a555ecb68b212149995310" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Constructor por Copia/Movimiento desde una sucesión variadica de dígitos <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Función miembro (delegada) para copiar un objeto tipo base_t desde una referencia constante a un array cualquiera de <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref></para>
<para>&lt;function name=&quot;copy_arg_N&quot;&gt;&lt;/function&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const base_N_t&lt;N&gt; &amp; arg</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
&lt;returns=&quot;void&quot;&gt;</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="406" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="406" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a2ea6cd439fd6f88b32a780703794106c" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Función miembro (delegada) para mover un objeto tipo base_t desde una referencia derecha a un array cualquiera de <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>&lt;function name=&quot;copy_arg_N&quot;&gt;&lt;/function&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const base_N_t&lt;N&gt; &amp; arg</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
&lt;returns=&quot;void&quot;&gt;</para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="435" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="435" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1reg__digs__t_1a19a5a18b4db93320f0b9060aada7c146" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" kindref="member">dig_t</ref> *</type>
        <definition>constexpr dig_t * NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::data</definition>
        <argsstring>() noexcept</argsstring>
        <name>data</name>
        <qualifiedname>NumRepr::reg_digs_t::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt;summary=&quot; sobrecarga de las funciones miembro : &quot;&gt; constexpr dig_t* <ref refid="struct_num_repr_1_1reg__digs__t_1a19a5a18b4db93320f0b9060aada7c146" kindref="member">data()</ref> noexcept;</para>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="670" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="670" bodyend="672"/>
      </memberdef>
      </sectiondef>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(L &gt; 0))    </requiresclause>
    <briefdescription>
<para>DEFINCION DE template&lt;uint128_t Radix&gt; register_of_digits_t{};. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1nat__reg__digs__t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1reg__digs__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::array&lt; dig_t&lt; UINT_T, B &gt;, L &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1reg__digs__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::array&lt; dig_t&lt; UINT_T, B &gt;, L &gt;</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="15" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="15" bodyend="1572"/>
    <listofallmembers>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5fd5f903aae0b2017103d59e368c71f7" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>back</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab3d4db33623c17c1f36712663487df1b" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>back</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>base_N_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>base_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6feafb3a28270bf7a293959e34d168e6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>base_this</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2f8a4ff3bd499089c6440c7992ee13cd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>begin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1acd5dfd683e4fee83f7561568f809a2ba" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aeaaa5fc1d830756bffaf882156b86896" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8e8c64cba0341a3ad057053b346e42bd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1cdda4f3f9f0ef5c4668901fb0e40b33" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa542abd7039bf3f0a9c62200a7b944d8" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1adb0296af7bc31546157ad06a67573a22" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae9ba2cc837d955061093bb0da463e2e6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a217ae996ddbff03f35fb3e7c6b24c1dd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa912c8d96b92e95e0d751f2a4500c436" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cbegin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2cc438add79ca50b7ec3a0dcb3b4c6df" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cend</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5b679caa4dbb16fb6c5cca1f30ba5f66" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>const_base_this</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad633ab0410a555ecb68b212149995310" prot="private" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a813a2fca2665812c80725f66d1e5049f" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cp_base_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cp_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af5c56f665da3c6aa1957ae521e74312d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cp_cthis_at</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a7838aa779ec4ee589ba738f92786f356" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cpy_data</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6adb2fc166cc2a4419f5f86bd282df4f" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cr_base_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cr_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a44c0eab2b1465200a4dc0e349dba0b07" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>cr_cthis_at</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1abfbe9a50e4c844fa73ee64e3de27d4c1" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>crbegin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab2f586a22c208f2db8981f236be1f8a5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>crend</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a19a5a18b4db93320f0b9060aada7c146" prot="private" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>data</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>data</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9d37af8b2ce4db142cb55a932d8fd805" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>dig_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3c8f7cb71f70468db3ba5ccef33bdd37" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>dig_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a48a6ce4848e83ccea11c42c2deea38d9" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>dig_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aae46074f8eb1e11d4856e2efc720e3b4" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>dig_Bm2</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>dig_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1344b97a93e4af1c28f04d2f8238ee09" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>empty</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aae1bd8ec380671dcd31c9d7dcd03d445" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>end</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a0456b2f0f8d879695698974f9f2b325d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>fill</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3746b11d0b23dc5d2bbba1d9cea58a41" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>front</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a022dc0ba35bb79d3a00d31f6603bcfbe" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>front</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a011d4b57bf296a0e08fff4385eca0e08" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>get_type_template_string_id_token</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>index_of_MSDig</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2cc4d03f17f00015a43125e0f5018ef2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_any_B_pow</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a4b713404cbac91d3d972d1b8595bdb40" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa9715a437357c3a2a1f79fc7477bb57a" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_B_pow</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a435cc68f0dd8a90375404140fc9c8ff8" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_B_pow_m1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a15cc6e417db19bb0483b3d81b31bf20d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_Bp1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3a7c58a84c5be2458373bc6083a4e3e9" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_filled_of</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8f7a8ee6879194fd027b67e20f578474" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_filled_of_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae0ead5a6439ee2a2a9f56dc29353ef60" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_filled_of_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9328818c1dfd9433ac98d72cdfa8aba5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>is_type_template_string_id</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a717ff4a829077dbe06174feaa92a22d7" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5826bd193c62e736efdbe0fdd81cb653" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aad87f0f5f3bf9825b962e7288d527b96" prot="private" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>make_base_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a79ebf142083abdc8dcd44a354f159129" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>max_size</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9f01e4cb3e143f6a26bd251919afe9d8" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2ea6cd439fd6f88b32a780703794106c" prot="private" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>normalize</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3ff2a749d367851189bc05a1687a0b22" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator Int_Type</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a05a97a435bf59c5442be92c071176aac" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator!</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad76a2aa47907fd2f3ec19035c0a926a6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a369c8486faffc16e8bc798dbce25b101" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a20034464834ae81a063a9c8fa4224f45" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aebcb3bf7aaf1baa65bd97aeec1e777df" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1addfe409a19fc9017ac89b2516f4a6a8a" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a84b45a6bb497fbda0a83ac5b58c8a1a6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a37b9758878b51f5ed9ebbebc14b41c9c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a844edc62cc648266e8e9073666b00a87" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9847e4f64cf1507ee623d67775eba2df" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a871e547fbf592d7bf26f82fd019a3e65" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa68aa5a93f69fcb7a191fec77bb27332" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a0f39118683e41ccec4e43fc0c3a94f7f" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1598611c9a2c97185a0c0719ed7309de" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3556d4ba2e14f426e919f1cfcde675fe" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab18c370a730eae337ebe1e42e554bfb3" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1add6d93e2ffcc34e57e4698a627d2fd48" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa424868f7b7f2da2b989b2eb96ed1ed1" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ada84ccdb7769b08b7b91b1dae6452c09" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a72a186fd0231cb5140dc75466e628688" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2d1a40f341324f56e566b838fe888264" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5ecc41aa76ee4b40c1f7480177d701f4" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af6e5280e0fbfa4b07d1a6651cbafa515" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae9a2c8fbb6a3aa1ed25aee8950b0b10f" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a869c348238795f848214949bad8445b0" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a91c247827ae9c2c539b5d7089a9fe884" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1acda9e6eea4d49b7f6fbbf9c3bec9f7cd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a81530d3849391d6dbc3c3a17fb486607" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aaa8d34738ae18ebceb3399ca4df463b8" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a88399df8a3b2e9f6fa413f5ba8c4147a" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1b446da3b8751e1c8af8839e1a59b1c5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aabe906a2378892bb152dba2e3f2a7b5c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>r_base_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>r_cthis</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a926b408a1e43d578157164c351ac60c2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>r_cthis_at</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae0932422c4f294cd994b0f457af37599" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>rbegin</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab93743da3d764bb199f0d93b13247b73" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af158dcd2b4c5d1cd725810f7b32a6377" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6d5930c7c0f8583b4000a60bd32aa00c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5f1afe08bc99f4458f4406fbf8bc4388" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a667cc7f5b4658b2195c48e794f5c84a6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aaba6b4d99022c55a9b8ca3ce2d62a50c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad86b53a69638c4c1dddbcc396bd8c341" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a64366dbe24ccb2e35ba2c4a9c6f1f1f6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reg_N_digs_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad04bdf9bcccd5c68c414b2cca9e9bc75" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9d2524d7b34e2e1b7d98ec3a16ccac67" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8f86da208d0c9e947caea1a283711414" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1affe99648c3d9c6e3e4decac8d4e46ee1" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5b1efb8235b79459b15c6f2f84659452" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a69d2abd48bd92a58df7f51fc9e7578dd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a475a4bf204efd8f87c400575dc49114d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ac49dc9af3af62aea5a7dfde9114e6c18" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_N_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1adb436e23c7144ee0da3db08cac34c7ed" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_N_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ad9a96eb8b49ed44884da34180b85fe4f" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_N_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa001d41637e1a10c1284b5239b37159c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_N_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2ef368bdca679fa51aee6d18644b6a12" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_N_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af10d7f31743e81babe1c9d542f30f013" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_N_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a55521e5b02fa0a1d56745066e20eab91" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a16e44b01fdd4e66c3390c34578f32e2c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_base_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af02f9cc5afcc26fb14077a939c26ce85" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af4fa7fec5b40b63434a86ee594adaed1" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1e76f417daec0f07cb28088baec9fb29" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>regd_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a4c289fab138512b65681d3c6fa1df2cc" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6a98c20beaf0085e9b75ed6a73b6fac5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>rend</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ab04d648f3421732b3103e32a28f28d09" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>res_base_N_op_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a410c269c5a379228ee4f9c757cdaace8" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>res_base_op_t</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3acacc33c0ddfe1a24835436f1e9d9f2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>reverse</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a635891fe476a0d485b6430eb003c66ff" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a9736402ea76979c6f3b550b4e7f8a2f0" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a0d7f94d520c14a413858bb3fd2ebae9c" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_fill_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a8449e0efdd8a69da67e519ee2716c200" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_fill_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a02db587c3f90aadabbde0f92731f622d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_fill_dig</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a00ff39c7cca1ca76bfb5c0dd8021841b" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af61633115c32e8183d2f606ce5d815fd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a538c70fae56df59c2ddbe0868f24cdaf" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>SIG_SINT_T</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>SIG_UINT_T</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a7c0ccc82f763ae0b3bf9fd78f218c206" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>size</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a2ff36f133f6bcf9cd379e54be025a214" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>size_of_type_template_string_id</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ac1cf8584292927fea378bde2e3172fce" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ssi_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af598442408cf2ed05923092e2ccb7cd2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ssi_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a80fbaa972abc3ee57f5e8561eb4e944d" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ssi_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a5e0248eb0b0cef64dcbf5fb87823714e" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ssi_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1ae6d6e6d6877d2fe389cdbacbaf7a6f63" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ssi_Bp1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa50d8abff6aa4a71c41fcb31c0441eb2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>subregister</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a869fb55d18546d9f677b47fd1dd1d8bd" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>sui_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a80e523569503af77fdf36cada4de6700" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>sui_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1adaa8d7c0417ae7a7e76237ba2d368ede" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>sui_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a51dd71f63e7ccf1c92adbe3876a5eb19" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>sui_Bm1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1af47bb7bcb365e6060f836ec7d53c8565" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>sui_Bp1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa0d612930f23d7545926c12c6149759b" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>swap</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a7d907a0fc450d27d7937370a2209aed6" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>to_type_template_string_id</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aa6b20e53fc72fb5353a27a5db5205ea2" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ui_0</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a1ba13ed518c031c71ccd2aa99292c4f5" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ui_1</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1a3d59521dadb20ede37c648c6ec863bda" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ui_B</name></member>
      <member refid="struct_num_repr_1_1reg__digs__t_1aafcea2323aac8fcedfc0f0780e46df5f" prot="public" virt="non-virtual"><scope>NumRepr::reg_digs_t</scope><name>ui_Bm1</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
