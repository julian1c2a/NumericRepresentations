<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="es">
  <compounddef id="namespace_num_repr" kind="namespace" language="C++">
    <compoundname>NumRepr</compoundname>
    <innerclass refid="struct_num_repr_1_1base__num__t" prot="public">NumRepr::base_num_t</innerclass>
    <innerclass refid="struct_num_repr_1_1dig__t" prot="public">NumRepr::dig_t</innerclass>
    <innerclass refid="struct_num_repr_1_1nat__rat__fixed__reg__t" prot="public">NumRepr::nat_rat_fixed_reg_t</innerclass>
    <innerclass refid="struct_num_repr_1_1nat__reg__digs__t" prot="public">NumRepr::nat_reg_digs_t</innerclass>
    <innerclass refid="struct_num_repr_1_1reg__digs__t" prot="public">NumRepr::reg_digs_t</innerclass>
    <innernamespace refid="namespace_num_repr_1_1auxiliary__functions">NumRepr::auxiliary_functions</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1auxiliary__types">NumRepr::auxiliary_types</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1detail">NumRepr::detail</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1lex">NumRepr::lex</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1type__traits">NumRepr::type_traits</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8" prot="public" static="no" strong="yes">
        <type>bool</type>
        <name>sign_e</name>
        <qualifiedname>NumRepr::sign_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1" prot="public">
          <name>vminus</name>
          <initializer>= true</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b" prot="public">
          <name>vplus</name>
          <initializer>= false</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="15" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0" prot="public" static="no" strong="yes">
        <type>char</type>
        <name>sign_funct_e</name>
        <qualifiedname>NumRepr::sign_funct_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859" prot="public">
          <name>vzero</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0a664d33ce0500d45dc2e44770723ba7d1" prot="public">
          <name>vminus</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b" prot="public">
          <name>vplus</name>
          <initializer>= +1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>INTRODUCIDO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="16" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>dig_format_e</name>
        <qualifiedname>NumRepr::dig_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a2a0e86af18f652069a49330979c008a6" prot="public">
          <name>BINnat</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a11ed08d0994e9c768353601d9ea12741" prot="public">
          <name>BCDnat</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a1459599c082addf48ba502cbd852f111" prot="public">
          <name>BCDexc3</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a45848ac572e88361fe73ae60787a780b" prot="public">
          <name>BCDaitk</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a7a5896262db09a2cd411bf1cdbb56de5" prot="public">
          <name>johnson_n</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46ac9f595e6a66c4856892cd21e81c6a67d" prot="public">
          <name>biquinario</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="17" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>num_type_e</name>
        <qualifiedname>NumRepr::num_type_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a8f4ef05b543fb6157b374099100574b3" prot="public">
          <name>natural</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a0e1ffddb2cb5f112904e70bc30478dc0" prot="public">
          <name>entero</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a6e4fb67cd72a9935a571e3cb1110005e" prot="public">
          <name>racional</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a4bca24304861acde5770fdbe3cc2503b" prot="public">
          <name>real</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A INTRODUCIR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08" prot="public" static="no" strong="yes">
        <type>bool</type>
        <name>nat_num_format_e</name>
        <qualifiedname>NumRepr::nat_num_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a8f4ef05b543fb6157b374099100574b3" prot="public">
          <name>natural</name>
          <initializer>=false</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a28485a5b2bfa6868f834fe7f61b46f5f" prot="public">
          <name>exc_n</name>
          <initializer>=true</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>YA INTRODUCIDO, PERO NO EXPLICITAMENTE NI COMPLETAMENTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="22" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>int_num_format_e</name>
        <qualifiedname>NumRepr::int_num_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634afc47fff21fb7613d155583803fc2949e" prot="public">
          <name>int_CB</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634a23db6f34a6b9b864ba35e2ae374c6aa3" prot="public">
          <name>int_CBm1</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634abfdb019232f14bf7a7519785d14a1e75" prot="public">
          <name>int_MS</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634abc6d44509ed50fd5177f78049c59c446" prot="public">
          <name>int_EXC_n</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SOLO NATURAL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="25" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dc" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>rat_num_format_e</name>
        <qualifiedname>NumRepr::rat_num_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcadbb955c289fb915e797daeaa9b736e9a" prot="public">
          <name>pair_num_den</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dca12efa49e18cac717f7afe7fbc0db6ae2" prot="public">
          <name>fxd_pt</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcaa412206072b5acc1c9ca53f8fa8cc586" prot="public">
          <name>flt_pt</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EN C_B YA QUEDA EN MS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="28" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" prot="public" static="no" strong="yes">
        <type></type>
        <name>binop_e</name>
        <qualifiedname>NumRepr::binop_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332" prot="public">
          <name>add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140" prot="public">
          <name>sub</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a0f9f2d92c2583ef952556e1f382d0974" prot="public">
          <name>mult</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a38696558dc98494c08d951c052900a2a" prot="public">
          <name>div</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8" prot="public">
          <name>rem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9" prot="public">
          <name>fediv</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf" prot="public">
          <name>other</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="32" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_num_repr_1ac8b645f8109f8fe793fac08c3c19b496" prot="public" static="no">
        <type>char</type>
        <definition>using NumRepr::chint_t = typedef char</definition>
        <argsstring></argsstring>
        <name>chint_t</name>
        <qualifiedname>NumRepr::chint_t</qualifiedname>
        <briefdescription>
<para>NUEVOS NOMBRES PARA LOS ENTEROS O PARECIDOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="58" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a931d2f9ba56db12532b97bc9b87ddb08" prot="public" static="no">
        <type>signed char</type>
        <definition>using NumRepr::schint_t = typedef signed char</definition>
        <argsstring></argsstring>
        <name>schint_t</name>
        <qualifiedname>NumRepr::schint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="59" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ada0cfa7f079bfbdf685325d56f2e69dd" prot="public" static="no">
        <type>signed short int</type>
        <definition>using NumRepr::ssint_t = typedef signed short int</definition>
        <argsstring></argsstring>
        <name>ssint_t</name>
        <qualifiedname>NumRepr::ssint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="60" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a020e206fe016ae28c2e6ee6dc63680b3" prot="public" static="no">
        <type>signed int</type>
        <definition>using NumRepr::sint_t = typedef signed int</definition>
        <argsstring></argsstring>
        <name>sint_t</name>
        <qualifiedname>NumRepr::sint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="61" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a1dfed5b4c0d15096b8b846c837152121" prot="public" static="no">
        <type>signed long int</type>
        <definition>using NumRepr::slint_t = typedef signed long int</definition>
        <argsstring></argsstring>
        <name>slint_t</name>
        <qualifiedname>NumRepr::slint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="62" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a9d82304901860c9b6eb54079147861f9" prot="public" static="no">
        <type>signed long long int</type>
        <definition>using NumRepr::sllint_t = typedef signed long long int</definition>
        <argsstring></argsstring>
        <name>sllint_t</name>
        <qualifiedname>NumRepr::sllint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="63" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a83d6ad1f5b09abca3ed6fd6281ee4d5f" prot="public" static="no">
        <type>unsigned char</type>
        <definition>using NumRepr::uchint_t = typedef unsigned char</definition>
        <argsstring></argsstring>
        <name>uchint_t</name>
        <qualifiedname>NumRepr::uchint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="64" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ac6c7f4dbb7298c676dd9f9b94e887f2a" prot="public" static="no">
        <type>unsigned short int</type>
        <definition>using NumRepr::usint_t = typedef unsigned short int</definition>
        <argsstring></argsstring>
        <name>usint_t</name>
        <qualifiedname>NumRepr::usint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="65" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1abe459c705a15614f17087479127dab9f" prot="public" static="no">
        <type>unsigned int</type>
        <definition>using NumRepr::uint_t = typedef unsigned int</definition>
        <argsstring></argsstring>
        <name>uint_t</name>
        <qualifiedname>NumRepr::uint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="66" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a62ca1b4e2720a74578b79ed49120aa76" prot="public" static="no">
        <type>unsigned long int</type>
        <definition>using NumRepr::ulint_t = typedef unsigned long int</definition>
        <argsstring></argsstring>
        <name>ulint_t</name>
        <qualifiedname>NumRepr::ulint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="67" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ad76647f24e00f176e977848784fb7826" prot="public" static="no">
        <type>unsigned long long int</type>
        <definition>using NumRepr::ullint_t = typedef unsigned long long int</definition>
        <argsstring></argsstring>
        <name>ullint_t</name>
        <qualifiedname>NumRepr::ullint_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="68" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" prot="public" static="no">
        <type>__uint128_t</type>
        <definition>using NumRepr::uint128_t = typedef __uint128_t</definition>
        <argsstring></argsstring>
        <name>uint128_t</name>
        <qualifiedname>NumRepr::uint128_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="69" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502" prot="public" static="no">
        <type>__int128_t</type>
        <definition>using NumRepr::sint128_t = typedef __int128_t</definition>
        <argsstring></argsstring>
        <name>sint128_t</name>
        <qualifiedname>NumRepr::sint128_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="70" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using NumRepr::size_t = typedef std::size_t</definition>
        <argsstring></argsstring>
        <name>size_t</name>
        <qualifiedname>NumRepr::size_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="71" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a08fdac8ec5e7198e046fbb1a55170acb" prot="public" static="no">
        <type>std::int8_t</type>
        <definition>using NumRepr::sint8_t = typedef std::int8_t</definition>
        <argsstring></argsstring>
        <name>sint8_t</name>
        <qualifiedname>NumRepr::sint8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="72" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1af5fe3bff90648275268a6f85b4628ae9" prot="public" static="no">
        <type>std::int16_t</type>
        <definition>using NumRepr::sint16_t = typedef std::int16_t</definition>
        <argsstring></argsstring>
        <name>sint16_t</name>
        <qualifiedname>NumRepr::sint16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="73" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a6858219eef04d10b215c3fa36d322a8b" prot="public" static="no">
        <type>std::int32_t</type>
        <definition>using NumRepr::sint32_t = typedef std::int32_t</definition>
        <argsstring></argsstring>
        <name>sint32_t</name>
        <qualifiedname>NumRepr::sint32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="74" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a3aa23f70e9c473be1b4af85b168951c7" prot="public" static="no">
        <type>std::int64_t</type>
        <definition>using NumRepr::sint64_t = typedef std::int64_t</definition>
        <argsstring></argsstring>
        <name>sint64_t</name>
        <qualifiedname>NumRepr::sint64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="75" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ab62814b3ad5f294a66f378fd28f90113" prot="public" static="no">
        <type>std::int8_t</type>
        <definition>using NumRepr::int8_t = typedef std::int8_t</definition>
        <argsstring></argsstring>
        <name>int8_t</name>
        <qualifiedname>NumRepr::int8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="76" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ae5e30e655c1f741255ac5600f98a46fc" prot="public" static="no">
        <type>std::int16_t</type>
        <definition>using NumRepr::int16_t = typedef std::int16_t</definition>
        <argsstring></argsstring>
        <name>int16_t</name>
        <qualifiedname>NumRepr::int16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="77" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ab15118a9d5fcec3c552d695027565862" prot="public" static="no">
        <type>std::int32_t</type>
        <definition>using NumRepr::int32_t = typedef std::int32_t</definition>
        <argsstring></argsstring>
        <name>int32_t</name>
        <qualifiedname>NumRepr::int32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="78" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa" prot="public" static="no">
        <type>std::int64_t</type>
        <definition>using NumRepr::int64_t = typedef std::int64_t</definition>
        <argsstring></argsstring>
        <name>int64_t</name>
        <qualifiedname>NumRepr::int64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="79" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a6d251e3fdf293ad7f699785ca3818bac" prot="public" static="no">
        <type>std::int_fast8_t</type>
        <definition>using NumRepr::fast8_t = typedef std::int_fast8_t</definition>
        <argsstring></argsstring>
        <name>fast8_t</name>
        <qualifiedname>NumRepr::fast8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="80" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a156f412cea618e4883ed355e5c5abb9d" prot="public" static="no">
        <type>std::int_fast16_t</type>
        <definition>using NumRepr::fast16_t = typedef std::int_fast16_t</definition>
        <argsstring></argsstring>
        <name>fast16_t</name>
        <qualifiedname>NumRepr::fast16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="81" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a26a5d9833bf7b207952d1b90280f401a" prot="public" static="no">
        <type>std::int_fast32_t</type>
        <definition>using NumRepr::fast32_t = typedef std::int_fast32_t</definition>
        <argsstring></argsstring>
        <name>fast32_t</name>
        <qualifiedname>NumRepr::fast32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="82" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a749d85495bf08b4447fb5253ec897dd5" prot="public" static="no">
        <type>std::int_fast64_t</type>
        <definition>using NumRepr::fast64_t = typedef std::int_fast64_t</definition>
        <argsstring></argsstring>
        <name>fast64_t</name>
        <qualifiedname>NumRepr::fast64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="83" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a1246598aa532c1bda5c564b135c9c7bd" prot="public" static="no">
        <type>std::int_least8_t</type>
        <definition>using NumRepr::least8_t = typedef std::int_least8_t</definition>
        <argsstring></argsstring>
        <name>least8_t</name>
        <qualifiedname>NumRepr::least8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="84" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1afb6f5a3a759aae83ce3ce7d660c943d5" prot="public" static="no">
        <type>std::int_least16_t</type>
        <definition>using NumRepr::least16_t = typedef std::int_least16_t</definition>
        <argsstring></argsstring>
        <name>least16_t</name>
        <qualifiedname>NumRepr::least16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="85" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a4dd4d4221988de1b8b49404cf4fddd0b" prot="public" static="no">
        <type>std::int_least32_t</type>
        <definition>using NumRepr::least32_t = typedef std::int_least32_t</definition>
        <argsstring></argsstring>
        <name>least32_t</name>
        <qualifiedname>NumRepr::least32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="86" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a84148be2ce937dca85ea677ab335dfa7" prot="public" static="no">
        <type>std::int_least64_t</type>
        <definition>using NumRepr::least64_t = typedef std::int_least64_t</definition>
        <argsstring></argsstring>
        <name>least64_t</name>
        <qualifiedname>NumRepr::least64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="87" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ac5b617f84b139672d691e24c196528e9" prot="public" static="no">
        <type>std::uint8_t</type>
        <definition>using NumRepr::uint8_t = typedef std::uint8_t</definition>
        <argsstring></argsstring>
        <name>uint8_t</name>
        <qualifiedname>NumRepr::uint8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="89" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1aaf7419192485988c57254740ce16da9b" prot="public" static="no">
        <type>std::uint16_t</type>
        <definition>using NumRepr::uint16_t = typedef std::uint16_t</definition>
        <argsstring></argsstring>
        <name>uint16_t</name>
        <qualifiedname>NumRepr::uint16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="90" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a4f502071a1f4a9b34611a4b2c96b7a4a" prot="public" static="no">
        <type>std::uint32_t</type>
        <definition>using NumRepr::uint32_t = typedef std::uint32_t</definition>
        <argsstring></argsstring>
        <name>uint32_t</name>
        <qualifiedname>NumRepr::uint32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="91" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988" prot="public" static="no">
        <type>std::uint64_t</type>
        <definition>using NumRepr::uint64_t = typedef std::uint64_t</definition>
        <argsstring></argsstring>
        <name>uint64_t</name>
        <qualifiedname>NumRepr::uint64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="92" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a9b374efcf2955b0e2aeda6eb50941ebe" prot="public" static="no">
        <type>std::uint_fast8_t</type>
        <definition>using NumRepr::ufast8_t = typedef std::uint_fast8_t</definition>
        <argsstring></argsstring>
        <name>ufast8_t</name>
        <qualifiedname>NumRepr::ufast8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="93" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a64a10bd5751a508132b709300a8e916c" prot="public" static="no">
        <type>std::uint_fast16_t</type>
        <definition>using NumRepr::ufast16_t = typedef std::uint_fast16_t</definition>
        <argsstring></argsstring>
        <name>ufast16_t</name>
        <qualifiedname>NumRepr::ufast16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="94" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1afcff0725f2a8a3faed491cc9224d6d4d" prot="public" static="no">
        <type>std::uint_fast32_t</type>
        <definition>using NumRepr::ufast32_t = typedef std::uint_fast32_t</definition>
        <argsstring></argsstring>
        <name>ufast32_t</name>
        <qualifiedname>NumRepr::ufast32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="95" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a17e6e77298f11036961bd9d19fdc94a7" prot="public" static="no">
        <type>std::uint_fast64_t</type>
        <definition>using NumRepr::ufast64_t = typedef std::uint_fast64_t</definition>
        <argsstring></argsstring>
        <name>ufast64_t</name>
        <qualifiedname>NumRepr::ufast64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="96" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a7fe44611f6ab312ef9f2eb05d88a8423" prot="public" static="no">
        <type>std::uint_least8_t</type>
        <definition>using NumRepr::uleast8_t = typedef std::uint_least8_t</definition>
        <argsstring></argsstring>
        <name>uleast8_t</name>
        <qualifiedname>NumRepr::uleast8_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="97" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ae2745e872cfa96ef2667e58a861f4964" prot="public" static="no">
        <type>std::uint_least16_t</type>
        <definition>using NumRepr::uleast16_t = typedef std::uint_least16_t</definition>
        <argsstring></argsstring>
        <name>uleast16_t</name>
        <qualifiedname>NumRepr::uleast16_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="98" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1aaf4382c6067f3c175866881db9ed85fd" prot="public" static="no">
        <type>std::uint_least32_t</type>
        <definition>using NumRepr::uleast32_t = typedef std::uint_least32_t</definition>
        <argsstring></argsstring>
        <name>uleast32_t</name>
        <qualifiedname>NumRepr::uleast32_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="99" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a5345c86c32fe5fbecb4673408fd9cdf4" prot="public" static="no">
        <type>std::uint_least64_t</type>
        <definition>using NumRepr::uleast64_t = typedef std::uint_least64_t</definition>
        <argsstring></argsstring>
        <name>uleast64_t</name>
        <qualifiedname>NumRepr::uleast64_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="100" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a76e930f3badebdae54ceb6d60d001a0e" prot="public" static="no">
        <type>std::intmax_t</type>
        <definition>using NumRepr::intmax_t = typedef std::intmax_t</definition>
        <argsstring></argsstring>
        <name>intmax_t</name>
        <qualifiedname>NumRepr::intmax_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="104" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1ab66bf498bebe15bc960b29f844a1d069" prot="public" static="no">
        <type>std::uintmax_t</type>
        <definition>using NumRepr::uintmax_t = typedef std::uintmax_t</definition>
        <argsstring></argsstring>
        <name>uintmax_t</name>
        <qualifiedname>NumRepr::uintmax_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="105" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a3a5ba1b030588c94513fdad9a1b44ef1" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>uint128_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; <ref refid="namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b" kindref="member">type_traits::TypeFromIntNumber_t</ref>&lt; static_cast&lt; <ref refid="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" kindref="member">uint128_t</ref> &gt;(B)&gt;, static_cast&lt; <ref refid="namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b" kindref="member">type_traits::TypeFromIntNumber_t</ref>&lt; static_cast&lt; <ref refid="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" kindref="member">uint128_t</ref> &gt;(B)&gt; &gt;(static_cast&lt; <ref refid="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" kindref="member">uint128_t</ref> &gt;(B)) &gt;</type>
        <definition>using NumRepr::digit_t = typedef dig_t&lt; TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;(B)&gt;, static_cast&lt;TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;(B)&gt; &gt;(static_cast&lt;uint128_t&gt;(B)) &gt;</definition>
        <argsstring></argsstring>
        <name>digit_t</name>
        <qualifiedname>NumRepr::digit_t</qualifiedname>
        <briefdescription>
<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1494" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1498" bodyend="1492"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1a162b6953f603031db66e18e2b8240bc2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>uint128_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; <ref refid="namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b" kindref="member">type_traits::TypeFromIntNumber_t</ref>&lt; B &gt;, static_cast&lt; <ref refid="namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b" kindref="member">type_traits::TypeFromIntNumber_t</ref>&lt; B &gt; &gt;(B), L &gt;</type>
        <definition>using NumRepr::register_of_digits_t = typedef reg_digs_t&lt; type_traits::TypeFromIntNumber_t&lt;B&gt;, static_cast&lt;type_traits::TypeFromIntNumber_t&lt;B&gt; &gt;(B), L &gt;</definition>
        <argsstring></argsstring>
        <name>register_of_digits_t</name>
        <qualifiedname>NumRepr::register_of_digits_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1576" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_num_repr_1adee56f6cb05bebc237af032f75d2c03b" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>uint128_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; <ref refid="namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b" kindref="member">TypeFromIntNumber_t</ref>&lt; static_cast&lt; <ref refid="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" kindref="member">uint128_t</ref> &gt;(B)&gt;, static_cast&lt; <ref refid="namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b" kindref="member">TypeFromIntNumber_t</ref>&lt; static_cast&lt; <ref refid="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" kindref="member">uint128_t</ref> &gt;(B)&gt; &gt;(static_cast&lt; <ref refid="namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3" kindref="member">uint128_t</ref> &gt;(B)), L &gt;</type>
        <definition>using NumRepr::register_digs_t = typedef reg_digs_t&lt; TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;(B)&gt;, static_cast&lt;TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;(B)&gt; &gt;(static_cast&lt;uint128_t&gt;(B)), L &gt;</definition>
        <argsstring></argsstring>
        <name>register_digs_t</name>
        <qualifiedname>NumRepr::register_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2434" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2438" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_num_repr_1a267abda3e78b6a487e39c4de923838bf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8" kindref="member">sign_e</ref></type>
        <definition>constexpr sign_e NumRepr::Char2Sign</definition>
        <argsstring>(char ch) noexcept</argsstring>
        <name>Char2Sign</name>
        <qualifiedname>NumRepr::Char2Sign</qualifiedname>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="9" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="9" bodyend="15"/>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</references>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae6e314ed88507b46a8155893a823049c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::arith_integral_c</type>
            <declname>IntT</declname>
            <defname>IntT</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8" kindref="member">sign_e</ref></type>
        <definition>constexpr sign_e NumRepr::Int2Sign</definition>
        <argsstring>(IntT nu) noexcept</argsstring>
        <name>Int2Sign</name>
        <qualifiedname>NumRepr::Int2Sign</qualifiedname>
        <param>
          <type>IntT</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="19" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="19" bodyend="25"/>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</references>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a396b4de02e34550acddc2664931975d8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::arith_integral_c</type>
            <declname>IntT</declname>
            <defname>IntT</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0" kindref="member">sign_funct_e</ref></type>
        <definition>constexpr sign_funct_e NumRepr::Int2SignFunct</definition>
        <argsstring>(IntT nu) noexcept</argsstring>
        <name>Int2SignFunct</name>
        <qualifiedname>NumRepr::Int2SignFunct</qualifiedname>
        <param>
          <type>IntT</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="29" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="29" bodyend="37"/>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0a664d33ce0500d45dc2e44770723ba7d1">vminus</references>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859">vzero</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1af38005a1c9fb23a68d4651abc72ddf25" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::arith_natural_c</type>
            <declname>NatIntT</declname>
            <defname>NatIntT</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0" kindref="member">sign_funct_e</ref></type>
        <definition>constexpr sign_funct_e NumRepr::Nat2SignFunct</definition>
        <argsstring>(NatIntT nu) noexcept</argsstring>
        <name>Nat2SignFunct</name>
        <qualifiedname>NumRepr::Nat2SignFunct</qualifiedname>
        <param>
          <type>NatIntT</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="41" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="41" bodyend="47"/>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859">vzero</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a518d83628ca3a414ac5e12e47bd7bd5b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_T</type>
          </param>
          <param>
            <type>usint</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr ullint</type>
        <definition>constexpr ullint NumRepr::pot_max_base_B_en_Int_T</definition>
        <argsstring>() noexcept</argsstring>
        <name>pot_max_base_B_en_Int_T</name>
        <qualifiedname>NumRepr::pot_max_base_B_en_Int_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="77" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0c4ce13b175150d7a33d5c7b515f9dfa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_T</type>
          </param>
          <param>
            <type>ullint</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr ullint</type>
        <definition>constexpr ullint NumRepr::num_digs_max_base_B_en_Int_T</definition>
        <argsstring>() noexcept</argsstring>
        <name>num_digs_max_base_B_en_Int_T</name>
        <qualifiedname>NumRepr::num_digs_max_base_B_en_Int_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="91" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="91" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aeced1290d3d28bee5b4a0e22840a72db" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_T</type>
          </param>
          <param>
            <type>ullint</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr ullint</type>
        <definition>constexpr ullint NumRepr::max_base_B_en_Int_T</definition>
        <argsstring>() noexcept</argsstring>
        <name>max_base_B_en_Int_T</name>
        <qualifiedname>NumRepr::max_base_B_en_Int_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="127" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="127" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::ui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_1</name>
        <qualifiedname>NumRepr::ui_1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T, B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1484" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1484" bodyend="1484"/>
        <referencedby refid="struct_num_repr_1_1dig__t_1a48f6d7f54f227eaf337438fccd8b9ff4" compoundref="dig__t_8hpp" startline="362" endline="383">NumRepr::dig_t&lt; UINT_T, B &gt;::is_0_divisor</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a3097efc035d69810593924081fe87698" compoundref="dig__t_8hpp" startline="1025" endline="1028">NumRepr::dig_t&lt; UINT_T, B &gt;::is_0or1</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1ac906122dd220e44ed6762896888b8e4c" compoundref="dig__t_8hpp" startline="1019" endline="1022">NumRepr::dig_t&lt; UINT_T, B &gt;::is_1</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a3f3fbeaf6b33d1715bbd18a32c9d786b" compoundref="dig__t_8hpp" startline="1031" endline="1034">NumRepr::dig_t&lt; UINT_T, B &gt;::is_not_1</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1aecc930e8cb3dbc3ede5beeff11ef77ee" compoundref="dig__t_8hpp" startline="338" endline="360">NumRepr::dig_t&lt; UINT_T, B &gt;::is_unit</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1aaa1f4b500974e6fd56e680e03f29b2c2" compoundref="dig__t_8hpp" startline="812" endline="817">NumRepr::dig_t&lt; UINT_T, B &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a760f7426a2aa1c3633499eb30faa47bc" compoundref="dig__t_8hpp" startline="825" endline="830">NumRepr::dig_t&lt; UINT_T, B &gt;::operator--</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>consteval dig_t&lt; UINT_T, B &gt; NumRepr::dig_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_max</name>
        <qualifiedname>NumRepr::dig_max</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T, B&gt;())    </requiresclause>
        <briefdescription>
<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1488" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1488" bodyend="-1"/>
        <referencedby refid="struct_num_repr_1_1dig__t_1aa62606aacfd127f2670db23a727e1689" compoundref="dig__t_8hpp" startline="385" endline="404">NumRepr::dig_t&lt; UINT_T, B &gt;::mult_inv</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, dig_t&lt; UINT_T, Base &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, Base &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1508" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1508" bodyend="1604"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, dig_t&lt; UINT_T, Base &gt; arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, Base &gt;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1608" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1608" bodyend="1614"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ab9f98f4d0eefbee0c13e52061d4a5c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Length</declname>
            <defname>Length</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, pfx_rat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>pfx_rat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>
<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>
<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>
<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>
<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>
<para>ESTADO ACTUAL</para>
<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>
<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>
<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2177" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2177" bodyend="2425"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa425b3bf3dd35e9867de22ac45a46616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>Long</declname>
            <defname>Long</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const pfx_rat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const pfx_rat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2429" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2430" bodyend="2441"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a89c726416380167073c3a39632cf2fa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>LE</declname>
            <defname>LE</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool NumRepr::is_nat_reg_digs_type_id</definition>
        <argsstring>(std::string in)</argsstring>
        <name>is_nat_reg_digs_type_id</name>
        <qualifiedname>NumRepr::is_nat_reg_digs_type_id</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>ESPECIALIZACIONES PARA NAT_REG_DIGS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1748" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1748" bodyend="1763"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a9bda15db6ff37b4d5247ca097156679c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>LE</declname>
            <defname>LE</defname>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string NumRepr::to_nat_reg_digs_type_string</definition>
        <argsstring>()</argsstring>
        <name>to_nat_reg_digs_type_string</name>
        <qualifiedname>NumRepr::to_nat_reg_digs_type_string</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1766" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1766" bodyend="1767"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0c896afd9a215a562fdc0280a545cf49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>LE</declname>
            <defname>LE</defname>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
        <definition>size_t NumRepr::size_of_nat_reg_digs_type_string_idT</definition>
        <argsstring>()</argsstring>
        <name>size_of_nat_reg_digs_type_string_idT</name>
        <qualifiedname>NumRepr::size_of_nat_reg_digs_type_string_idT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1770" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1770" bodyend="1771"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1abc220e2b8550522f9cb96ecd95d172bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::uint_type_for_radix_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Length</declname>
            <defname>Length</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, nat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; Int_Type, Base, Length &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO ESTA VERSION + VERSION CON TRATAMIENTO DE ERRORES EN RUNTIME </para>
        </detaileddescription>
        <inbodydescription>
<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>
<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>
<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>
<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>
<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>
<para>ESTADO ACTUAL</para>
<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>
<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>
<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1781" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1781" bodyend="2029"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" compoundref="nat__reg__digs__t_8hpp" startline="50" endline="52">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aee52933f615df4b729ccc06310036b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::uint_type_for_radix_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Long</declname>
            <defname>Long</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const nat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; Int_Type, Base, Long &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2033" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2034" bodyend="2045"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, N &gt; NumRepr::concat</definition>
        <argsstring>(const reg_digs_t&lt; UInt_t, B, N &gt; &amp;larg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) </para>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T...DIG_PACK) VARIADIC PACK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1595" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1595" bodyend="1598"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
        <referencedby refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a164d8860f3a0813504ee30c88c7bcab0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N+M &gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, N+M &gt; NumRepr::concat</definition>
        <argsstring>(const reg_digs_t&lt; UInt_t, B, N &gt; &amp;larg, const reg_digs_t&lt; UInt_t, B, M &gt; &amp;rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1604" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1604" bodyend="1614"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1afb9644c35a4bfb14155cb38894940e10" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N+1 &gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, N+1 &gt; NumRepr::concat</definition>
        <argsstring>(const reg_digs_t&lt; UInt_t, B, N &gt; &amp;larg, dig_t&lt; UInt_t, B &gt; rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UInt_t, B &gt;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N &gt; 0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1620" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1620" bodyend="1629"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a991ca8bb9c18feb0b5e776550b7ad703" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, 1+M &gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, 1+M &gt; NumRepr::concat</definition>
        <argsstring>(dig_t&lt; UInt_t, B &gt; larg, const reg_digs_t&lt; UInt_t, B, M &gt; &amp;rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UInt_t, B &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(M &gt; 0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1635" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1635" bodyend="1644"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a90dce0ccc34796d52120a70c0abe2fb3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, 1 &gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, 1 &gt; NumRepr::concat</definition>
        <argsstring>(dig_t&lt; UInt_t, B &gt; larg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UInt_t, B &gt;</type>
          <declname>larg</declname>
        </param>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1649" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1649" bodyend="1650"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a064a18e22bc1be2b2a8b4bd9b8bfcafb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, 2 &gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, 2 &gt; NumRepr::concat</definition>
        <argsstring>(dig_t&lt; UInt_t, B &gt; larg, dig_t&lt; UInt_t, B &gt; rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UInt_t, B &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UInt_t, B &gt;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1655" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1655" bodyend="1659"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad235de59c6fb0e337d7d1974999b7c90" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, 1+(sizeof ...(Ts))&gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, 1+(sizeof ...(Ts))&gt; NumRepr::concat</definition>
        <argsstring>(T0 dig0, Ts ... dig_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type>T0</type>
          <declname>dig0</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>( ((std::is_same_v&lt;Ts,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T0,dig_t&lt;UInt_t,B&gt;&gt;) )    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1671" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1671" bodyend="1674"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0706a8207d9326e70eb68286a809eac0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N+1+(sizeof ...(Ts))&gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, N+1+(sizeof ...(Ts))&gt; NumRepr::concat</definition>
        <argsstring>(reg_digs_t&lt; UInt_t, B, N &gt; larg, T dig, Ts ... dig_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;N+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T,DIG_T ... DIG_PACK) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1682" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1682" bodyend="1686"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a4725158490aa07256f8ba8b9bb7179e4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, M+1+(sizeof ...(Ts))&gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, M+1+(sizeof ...(Ts))&gt; NumRepr::concat</definition>
        <argsstring>(T dig, Ts ... dig_pack, reg_digs_t&lt; UInt_t, B, M &gt; rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, M &gt;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>( ((std::is_same_v&lt;Ts,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,dig_t&lt;UInt_t,B&gt;&gt;) &amp;&amp; (M&gt;0) )    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;M+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK,BASE_N_T&lt;M&gt;) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1699" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1699" bodyend="1704"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1af76d4c574256a8ae2913dd960c035d9a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UInt_t</type>
          </param>
          <param>
            <type>UInt_t</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>size_t ...</type>
            <declname>N_pack</declname>
            <defname>N_pack</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N+(...+(N_pack))&gt;</type>
        <definition>constexpr reg_digs_t&lt; UInt_t, B, N+(...+(N_pack))&gt; NumRepr::concat</definition>
        <argsstring>(reg_digs_t&lt; UInt_t, B, N &gt; larg, reg_digs_t&lt; UInt_t, B, N_pack &gt; ... rarg_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UInt_t, B, N_pack &gt; ...</type>
          <declname>rarg_pack</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;SIZE_T N,SIZE_T ... N_PACK&gt; CONCAT(BASE_N_T&lt;N&gt; LARG,BASE_N_T&lt;N_PACK&gt; ... RARG_PACK) VARIADIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1713" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1713" bodyend="1714"/>
        <references refid="namespace_num_repr_1a6f762ec285d399a1aba905239740d424" compoundref="reg__digs__t_8hpp" startline="1595" endline="1598">concat</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a3e02d589f6de47a7861f7d11e76d4d73" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1718" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1719" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa578c0c4c9f69c8a6949ae841ab20a14" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
        <definition>constexpr const reg_digs_t&lt; UINT_T, B, N &gt; &amp; NumRepr::operator&lt;&lt;=</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1736" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1736" bodyend="1747"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a9da1c60e9a0710e6940735e5aa6471e2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
        <definition>constexpr const reg_digs_t&lt; UINT_T, B, N &gt; &amp; NumRepr::operator&gt;&gt;=</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1752" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1752" bodyend="1763"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a02cf5374fb604e0ac92479795f57be45" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1768" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1768" bodyend="1773"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::rem_B</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::rem_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1778" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1778" bodyend="1783"/>
        <references refid="namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee" compoundref="reg__digs__t_8hpp" startline="1778" endline="1783">rem_B</references>
        <referencedby refid="namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee" compoundref="reg__digs__t_8hpp" startline="1778" endline="1783">rem_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
        <definition>constexpr const reg_digs_t&lt; UINT_T, B, N &gt; &amp; NumRepr::m_rem_B</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1788" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1788" bodyend="1792"/>
        <references refid="namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad" compoundref="reg__digs__t_8hpp" startline="1788" endline="1792">m_rem_B</references>
        <referencedby refid="namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad" compoundref="reg__digs__t_8hpp" startline="1788" endline="1792">m_rem_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a791ee564df192b445483d0088d163710" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::mer_B</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::mer_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1797" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1797" bodyend="1802"/>
        <references refid="namespace_num_repr_1a791ee564df192b445483d0088d163710" compoundref="reg__digs__t_8hpp" startline="1797" endline="1802">mer_B</references>
        <referencedby refid="namespace_num_repr_1a791ee564df192b445483d0088d163710" compoundref="reg__digs__t_8hpp" startline="1797" endline="1802">mer_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
        <definition>constexpr const reg_digs_t&lt; UINT_T, B, N &gt; &amp; NumRepr::m_mer_B</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1807" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1807" bodyend="1811"/>
        <references refid="namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb" compoundref="reg__digs__t_8hpp" startline="1807" endline="1811">m_mer_B</references>
        <referencedby refid="namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb" compoundref="reg__digs__t_8hpp" startline="1807" endline="1811">m_mer_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1af300f03bc135c81afa3965c905feda49" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
        <definition>constexpr const reg_digs_t&lt; UINT_T, B, N &gt; &amp; NumRepr::operator|=</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::operator|=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1816" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1816" bodyend="1824"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a688d5f9678ad6dca21557cc629c46c8e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::operator|</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1829" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1829" bodyend="1836"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0a2d2cfc3bfc462709ba6cc17b5cd0d4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
        <definition>constexpr const reg_digs_t&lt; UINT_T, B, N &gt; &amp; NumRepr::operator&amp;=</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::operator&amp;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1841" column="19" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1841" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a342a2a8c42d37ee5900c73815b5f289b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>uint_type_for_radix_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::operator&amp;</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::operator&amp;</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1854" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1854" bodyend="1861"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::m_incr</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</argsstring>
        <name>m_incr</name>
        <qualifiedname>NumRepr::m_incr</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>TODO 31/12/2022. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1865" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1865" bodyend="1901"/>
        <references refid="namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254" compoundref="reg__digs__t_8hpp" startline="1865" endline="1901">m_incr</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1" compoundref="reg__digs__t_8hpp" startline="710" endline="711">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
        <referencedby refid="namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7" compoundref="reg__digs__t_8hpp" startline="1981">aprox_units_divB</referencedby>
        <referencedby refid="namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254" compoundref="reg__digs__t_8hpp" startline="1865" endline="1901">m_incr</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>constexpr dig_t&lt; UINT_T, B &gt; NumRepr::m_sum_digs_carryin1</definition>
        <argsstring>(dig_t&lt; UINT_T, B &gt; &amp;left, dig_t&lt; UINT_T, B &gt; right) noexcept</argsstring>
        <name>m_sum_digs_carryin1</name>
        <qualifiedname>NumRepr::m_sum_digs_carryin1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1906" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1906" bodyend="1929"/>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="956" endline="959">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
        <references refid="namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6" compoundref="reg__digs__t_8hpp" startline="1906" endline="1929">m_sum_digs_carryin1</references>
        <referencedby refid="namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3" compoundref="reg__digs__t_8hpp" startline="1955" endline="1974">m_sum</referencedby>
        <referencedby refid="namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6" compoundref="reg__digs__t_8hpp" startline="1906" endline="1929">m_sum_digs_carryin1</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>constexpr dig_t&lt; UINT_T, B &gt; NumRepr::m_sum_digs_carryin0</definition>
        <argsstring>(dig_t&lt; UINT_T, B &gt; &amp;left, dig_t&lt; UINT_T, B &gt; right) noexcept</argsstring>
        <name>m_sum_digs_carryin0</name>
        <qualifiedname>NumRepr::m_sum_digs_carryin0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1934" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1934" bodyend="1950"/>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="956" endline="959">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
        <references refid="namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0" compoundref="reg__digs__t_8hpp" startline="1934" endline="1950">m_sum_digs_carryin0</references>
        <referencedby refid="namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3" compoundref="reg__digs__t_8hpp" startline="1955" endline="1974">m_sum</referencedby>
        <referencedby refid="namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0" compoundref="reg__digs__t_8hpp" startline="1934" endline="1950">m_sum_digs_carryin0</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>constexpr dig_t&lt; UINT_T, B &gt; NumRepr::m_sum</definition>
        <argsstring>(reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rarg) noexcept</argsstring>
        <name>m_sum</name>
        <qualifiedname>NumRepr::m_sum</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1955" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1955" bodyend="1974"/>
        <references refid="struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2" compoundref="reg__digs__t_8hpp" startline="1142" endline="1143">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</references>
        <references refid="namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3" compoundref="reg__digs__t_8hpp" startline="1955" endline="1974">m_sum</references>
        <references refid="namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0" compoundref="reg__digs__t_8hpp" startline="1934" endline="1950">m_sum_digs_carryin0</references>
        <references refid="namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6" compoundref="reg__digs__t_8hpp" startline="1906" endline="1929">m_sum_digs_carryin1</references>
        <referencedby refid="namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3" compoundref="reg__digs__t_8hpp" startline="1955" endline="1974">m_sum</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::aprox_units_divB</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;arg) noexcept</argsstring>
        <name>aprox_units_divB</name>
        <qualifiedname>NumRepr::aprox_units_divB</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;1)    </requiresclause>
        <briefdescription>
<para>&lt; PRECONDITIONS : ARG != 0 AND ARG != 1 &gt; </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCIONES DE IMPLEMENTACION DE LA DIVISION ENTRE DOS REGISTROS DE DIGITOS BEGIN POSTCONDICION RET[N-1] == (DIG_1() | DIG_0()) POSTCONDICION RET[N-1] == DIG_1() =&gt; RET[N-2,0] == REGD_N_0() HAY QUE VER SI ES POTENCIA DE B : is_any_B_pow </para>
        </detaileddescription>
        <inbodydescription>
<para>CASO EN QUE LA LONGITUD PERMANECE 999 ; 998 ; 997 ; 996 099,9 ; 099,8 ; 099,7 ; 099,6 100 ; 100 ; 100 ; 100</para>
<para>CPARG == Bm1 Bm1 Bm1 ... Bm1 Bm1 Bm1 d0&lt;B/2</para>
<para>CPARG == Bm1 dnm2 dnm3 ... d3 d2 d1 d0</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="1981" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="1981" bodyend="-1"/>
        <references refid="namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7" compoundref="reg__digs__t_8hpp" startline="1981">aprox_units_divB</references>
        <references refid="namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254" compoundref="reg__digs__t_8hpp" startline="1865" endline="1901">m_incr</references>
        <referencedby refid="namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7" compoundref="reg__digs__t_8hpp" startline="1981">aprox_units_divB</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>constexpr reg_digs_t&lt; UINT_T, B, N &gt; NumRepr::aprox_units_divB_n</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;arg) noexcept</argsstring>
        <name>aprox_units_divB_n</name>
        <qualifiedname>NumRepr::aprox_units_divB_n</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n &gt; 0) &amp;&amp; (n &lt; N) &amp;&amp; (N &gt; 1))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DE RECURSION PARA LA DIVISION APROX_COC_REM APROXIMA REMAINDER A 2 DIGITOS Y DIVISOR A 1 DIGITO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2021" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2021" bodyend="2017"/>
        <references refid="namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08" compoundref="reg__digs__t_8hpp" startline="2021" endline="2017">aprox_units_divB_n</references>
        <referencedby refid="namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08" compoundref="reg__digs__t_8hpp" startline="2021" endline="2017">aprox_units_divB_n</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a42cc99f9e1a6096b619df7c44eb7b33e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; <ref refid="namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;, 2 &gt;</type>
        <definition>constexpr std::array&lt; type_traits::sig_UInt_for_UInt_t&lt; UINT_T &gt;, 2 &gt; NumRepr::aprox_coc_rem</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rem, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;dsor) noexcept</argsstring>
        <name>aprox_coc_rem</name>
        <qualifiedname>NumRepr::aprox_coc_rem</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>dsor</declname>
        </param>
    <requiresclause>(N &gt; 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>std::array&lt;SIG_UINT_T,2&gt;{}[0] == COC std::array&lt;SIG_UINT_T,2&gt;{}[1] == REM PRECONDICION DSOR != 0 Y DSOR != 1 FUNCION DE RECURSION PARA LA DIVISION SOBRECARGA DE LA ANTERIOR PARA LA RECURSION QUE NO SEA EL PRIMER CASO </para>
        </detaileddescription>
        <inbodydescription>
<para>CASO EXACTO</para>
<para>SIZE(DIVISOR) == 1 DIGITO !=0 !=1</para>
<para>SIZE(DIVISOR) &gt;= 2 2545/278 o mayores</para>
<para>CORRECTO EN COC</para>
<para>NOS HEMOS PASADO EN EL COC</para>
<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2044" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2044" bodyend="2035"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a3e8c6b3fe06161bb9befa0f2cc00c57d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; <ref refid="namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;, 2 &gt;</type>
        <definition>constexpr std::array&lt; type_traits::sig_UInt_for_UInt_t&lt; UINT_T &gt;, 2 &gt; NumRepr::aprox_coc_rem</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;rem, const reg_digs_t&lt; UINT_T, B, N &gt; &amp;dsor, type_traits::sig_UInt_for_UInt_t&lt; UINT_T &gt; coc_calculado, type_traits::sig_UInt_for_UInt_t&lt; UINT_T &gt; rem_calculado) noexcept</argsstring>
        <name>aprox_coc_rem</name>
        <qualifiedname>NumRepr::aprox_coc_rem</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>dsor</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
          <declname>coc_calculado</declname>
        </param>
        <param>
          <type><ref refid="namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
          <declname>rem_calculado</declname>
        </param>
    <requiresclause>(N &gt; 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>std::array&lt;SIG_UINT_T,2&gt;{}[0] == COC std::array&lt;SIG_UINT_T,2&gt;{}[1] == REM PRECONDICION DSOR != 0 Y DSOR != 1 </para>
        </detaileddescription>
        <inbodydescription>
<para>SUPONEMOS QUE REM TIENE TAMANO 1 o 2</para>
<para>DSOR YA REDUCIDO TIENE TAMANO 1</para>
<para>SIZE(DIVISOR) == 1 DIGITO !=0 !=1</para>
<para>CORRECTO EN COC</para>
<para>NOS HEMOS PASADO EN EL COC</para>
<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
<para>24/7</para>
<para>SIZE(DIVISOR) &gt;= 2 2545/278 o mayores</para>
<para>CORRECTO EN COC</para>
<para>NOS HEMOS PASADO EN EL COC</para>
<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2123" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2123" bodyend="2197"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a1924720464e58ae5372de9b39a45d496" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename UINT_T</type>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, std::max(N, M)&gt;, 2 &gt;</type>
        <definition>constexpr std::array&lt; reg_digs_t&lt; UINT_T, B, std::max(N, M)&gt;, 2 &gt; NumRepr::fediv</definition>
        <argsstring>(const reg_digs_t&lt; UINT_T, B, N &gt; &amp;larg, const reg_digs_t&lt; UINT_T, B, M &gt; &amp;rarg) noexcept</argsstring>
        <name>fediv</name>
        <qualifiedname>NumRepr::fediv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; UINT_T, B, M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N &gt; 0)&amp;&amp;(M &gt; 0)    </requiresclause>
        <briefdescription>
<para>END. </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCIONES DE IMPLEMENTACION DE LA DIVISION ENTRE DOS REGISTROS DE DIGITOS </para>
        </detaileddescription>
        <inbodydescription>
<para>MOST SIGNIFICANT DIGIT DEL DIVISOR [DEL NUMERO NO DEL TIPO]</para>
<para>MOST SIGNIFICANT DIGIT DEL DIVIDENDO [DEL NUMERO NO DEL TIPO]</para>
<para>else if (rem &gt;= dsor*dig_B()) { este caso no se deberia de dar nunca }</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2205" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2205" bodyend="2294"/>
        <references refid="namespace_num_repr_1a1924720464e58ae5372de9b39a45d496" compoundref="reg__digs__t_8hpp" startline="2205" endline="2294">fediv</references>
        <references refid="struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03" compoundref="reg__digs__t_8hpp" startline="1280" endline="1286">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;::index_of_MSDig</references>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</references>
        <referencedby refid="namespace_num_repr_1a1924720464e58ae5372de9b39a45d496" compoundref="reg__digs__t_8hpp" startline="2205" endline="2294">fediv</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::unsigned_integral_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool NumRepr::get_digit_token</definition>
        <argsstring>(std::istream &amp;is, dig_t&lt; UINT_T, B &gt; &amp;dig_value)</argsstring>
        <name>get_digit_token</name>
        <qualifiedname>NumRepr::get_digit_token</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt; &amp;</type>
          <declname>dig_value</declname>
        </param>
        <briefdescription>
<para>FUNCION QUE CONSIGUE EL TOKEN DIGITO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2298" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2298" bodyend="2366"/>
        <references refid="namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad" compoundref="reg__digs__t_8hpp" startline="2298" endline="2366">get_digit_token</references>
        <referencedby refid="namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad" compoundref="reg__digs__t_8hpp" startline="2298" endline="2366">get_digit_token</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a4b2689884533f42678398c144b127910" compoundref="dig__t_8hpp" startline="1457" endline="1478">NumRepr::dig_t&lt; UINT_T, B &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a4a43d171097231b9c153662a4d96d170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::unsigned_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool NumRepr::get_radix_token</definition>
        <argsstring>(std::istream &amp;is)</argsstring>
        <name>get_radix_token</name>
        <qualifiedname>NumRepr::get_radix_token</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <briefdescription>
<para>FUNCION QUE CONSIGUE EL TOKEN BASE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2370" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2370" bodyend="2372"/>
        <references refid="namespace_num_repr_1a4a43d171097231b9c153662a4d96d170" compoundref="reg__digs__t_8hpp" startline="2370" endline="2372">get_radix_token</references>
        <referencedby refid="namespace_num_repr_1a4a43d171097231b9c153662a4d96d170" compoundref="reg__digs__t_8hpp" startline="2370" endline="2372">get_radix_token</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a4b2689884533f42678398c144b127910" compoundref="dig__t_8hpp" startline="1457" endline="1478">NumRepr::dig_t&lt; UINT_T, B &gt;::read</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a6fdae534a76a017d02140a70aa7dc8a3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::unsigned_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool NumRepr::get_digit_loop_token</definition>
        <argsstring>(std::istream &amp;is, reg_digs_t&lt; T, B, L &gt; &amp;value) noexcept</argsstring>
        <name>get_digit_loop_token</name>
        <qualifiedname>NumRepr::get_digit_loop_token</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; T, B, L &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2375" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2375" bodyend="2398"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a1cdc1a9d45497ce154566f6f15abdc32" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::unsigned_integral_c</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type>T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool NumRepr::read</definition>
        <argsstring>(std::istream &amp;is, reg_digs_t&lt; T, B, L &gt; &amp;value) noexcept</argsstring>
        <name>read</name>
        <qualifiedname>NumRepr::read</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; T, B, L &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
        </briefdescription>
        <detaileddescription>
<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2401" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2401" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a8f0cf6e39391a7fdc66a01db667b98de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_Type</type>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Length</declname>
            <defname>Length</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; Int_Type, Base, Length &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))    </requiresclause>
        <briefdescription>
<para>SOBRECARGA DE ISTREAM Y OSTREAM CON LOS OPERADORES DE DESPLAZAMEINTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>
<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>
<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>
<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>
<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>
<para>ESTADO ACTUAL</para>
<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>
<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>
<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2444" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2444" bodyend="2707"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aef762c1b9785e93fffd3336262a8e096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_Type</type>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type>size_t</type>
            <declname>Long</declname>
            <defname>Long</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref>&lt; Int_Type, Base, Long &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" line="2711" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/reg_digs_t.hpp" bodystart="2712" bodyend="2726"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a349a510b43badac76cd86e34dcbb8288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_UINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_UINT_dig_t</name>
        <qualifiedname>NumRepr::display_constr_UINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="10" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="10" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a27cd3b07e101240bdd85b9248f428585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_SINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_SINT_dig_t</name>
        <qualifiedname>NumRepr::display_constr_SINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="28" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="28" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a65c9d82e583a5b64b3b94c10ae46e80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_defecto_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_defecto_dig_t</name>
        <qualifiedname>NumRepr::display_constr_defecto_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="51" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a2abf3d71843768521c5b7b608137bcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_copia_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_copia_dig_t</name>
        <qualifiedname>NumRepr::display_constr_copia_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="66" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="66" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a50ed09e5a479347d085a2dff28299e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_movimiento_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_movimiento_dig_t</name>
        <qualifiedname>NumRepr::display_constr_movimiento_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="87" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="87" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1acd7f0f0f3ad4af5e2a8b26aaf92e59ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_UINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_UINT_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_UINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="113" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="113" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad70bf53a8ff03d0d407bd0b88aac90bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_SINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_SINT_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_SINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="133" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="133" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aba82289a413133952ad74254c7d86fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_copia_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_copia_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_copia_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="151" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="151" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a3e7eb3c76c069bbf89a13630f24df04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_movimiento_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_movimiento_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_movimiento_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="174" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="174" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a6b984dcc8ef024c9c42fcfbc897bb060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_preincrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_preincrement</name>
        <qualifiedname>NumRepr::display_operator_preincrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="197" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="197" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa5d4ce0684eb1ed7d51e2bd7351b9f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_postincrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_postincrement</name>
        <qualifiedname>NumRepr::display_operator_postincrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="225" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="225" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a17e46977769b816d0006e7b22c0b3a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_predecrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_predecrement</name>
        <qualifiedname>NumRepr::display_operator_predecrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="253" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="253" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad1dcf3e9f99dd7325a7ac774a3908389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_postdecrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_postdecrement</name>
        <qualifiedname>NumRepr::display_operator_postdecrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="281" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="281" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae5396bd9648b4535ea252118b48abed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add_assign</name>
        <qualifiedname>NumRepr::display_operator_add_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="309" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="309" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a06390888c1a5aa13471f73214555a6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_add_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="348" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="348" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a02cc28145662d4c0eb86cc8bba1b2890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract_assign</name>
        <qualifiedname>NumRepr::display_operator_substract_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="380" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="380" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aff607bfd703ccc92f0394a2d53e5a978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_substract_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="423" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="423" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1adf2a3579520b2a41803827f71117b59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_mult_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_mult_assign</name>
        <qualifiedname>NumRepr::display_operator_mult_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="466" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="466" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a1bfea978c2c4f02951d0aaba99c33277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_mult_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_mult_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_mult_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="509" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="509" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a4f2823e0e1c7c97f647e2c49d5386dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_ediv_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_ediv_assign</name>
        <qualifiedname>NumRepr::display_operator_ediv_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="552" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="552" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a40d1a413dfb00f54f7e5e57ba120e1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_ediv_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_ediv_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_ediv_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="603" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="603" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ab5cfacf83cb5ad8c3ea473eb5f07bed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_erem_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_erem_assign</name>
        <qualifiedname>NumRepr::display_operator_erem_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="661" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="661" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae8f3b3b914ffe3ce9448c8a384a77fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_erem_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_erem_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_erem_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="713" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="713" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aef173813ec54d5567be3954915e1c675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add</name>
        <qualifiedname>NumRepr::display_operator_add</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="770" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="770" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a69df9f333832a022d004ed63d0d01c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add_int</name>
        <qualifiedname>NumRepr::display_operator_add_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="812" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="812" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0e28a120b130962ea0116df58c03c6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract</name>
        <qualifiedname>NumRepr::display_operator_substract</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="853" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="853" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1acabc08f11c12fb6d9f9e790e9030f3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract_int</name>
        <qualifiedname>NumRepr::display_operator_substract_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="895" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="895" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a8060f5d58bba169daf225959a72bd68a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_multiply</definition>
        <argsstring>()</argsstring>
        <name>display_operator_multiply</name>
        <qualifiedname>NumRepr::display_operator_multiply</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="936" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="936" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa553f82b42704b3381cd71b67855b1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_multiply_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_multiply_int</name>
        <qualifiedname>NumRepr::display_operator_multiply_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="978" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="978" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a30555c61063d5a6531aad5685221fd1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_edivision</definition>
        <argsstring>()</argsstring>
        <name>display_operator_edivision</name>
        <qualifiedname>NumRepr::display_operator_edivision</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1019" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1019" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ada3dbd81393ca220f533ea9c7b59326c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_edivision_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_edivision_int</name>
        <qualifiedname>NumRepr::display_operator_edivision_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1080" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1080" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0aa113da9c3c91f1af1c073958cc12a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_C_B</definition>
        <argsstring>()</argsstring>
        <name>display_operator_C_B</name>
        <qualifiedname>NumRepr::display_operator_C_B</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1133" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1133" bodyend="1174"/>
        <references refid="struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70" compoundref="dig__t_8hpp" startline="962" endline="965">NumRepr::dig_t&lt; UINT_T, B &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a2525ee5f113018fcb89a1c8a6a28aa31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_C_Bm1</definition>
        <argsstring>()</argsstring>
        <name>display_operator_C_Bm1</name>
        <qualifiedname>NumRepr::display_operator_C_Bm1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1178" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1178" bodyend="1219"/>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="956" endline="959">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aec8203e0be75e913ece973211c4b1386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_prop_C_B_eq_inv_C_B</definition>
        <argsstring>()</argsstring>
        <name>display_prop_C_B_eq_inv_C_B</name>
        <qualifiedname>NumRepr::display_prop_C_B_eq_inv_C_B</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1223" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1223" bodyend="1253"/>
        <references refid="struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70" compoundref="dig__t_8hpp" startline="962" endline="965">NumRepr::dig_t&lt; UINT_T, B &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1adb8c5e5fc5db353e6db6327ac4c62742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_prop_C_Bm1_eq_inv_C_Bm1</definition>
        <argsstring>()</argsstring>
        <name>display_prop_C_Bm1_eq_inv_C_Bm1</name>
        <qualifiedname>NumRepr::display_prop_C_Bm1_eq_inv_C_Bm1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1257" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1257" bodyend="1287"/>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="956" endline="959">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae0fc1d1a1935c51de9fa9490f212c168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_prop_C_B_minus_1_eq_C_Bm1</definition>
        <argsstring>()</argsstring>
        <name>display_prop_C_B_minus_1_eq_C_Bm1</name>
        <qualifiedname>NumRepr::display_prop_C_B_minus_1_eq_C_Bm1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1291" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1291" bodyend="1322"/>
        <references refid="struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70" compoundref="dig__t_8hpp" startline="962" endline="965">NumRepr::dig_t&lt; UINT_T, B &gt;::C_B</references>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="956" endline="959">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a49752c01c024e2da6e67837bde614d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_unary_operator_minus</definition>
        <argsstring>()</argsstring>
        <name>display_unary_operator_minus</name>
        <qualifiedname>NumRepr::display_unary_operator_minus</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1327" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1327" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad2ec78854da2abb21348af8322a61571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_unary_operator_neg</definition>
        <argsstring>()</argsstring>
        <name>display_unary_operator_neg</name>
        <qualifiedname>NumRepr::display_unary_operator_neg</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1372" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1372" bodyend="1413"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>
