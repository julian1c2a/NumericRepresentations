.TH "nat_reg_digs_t.hpp" 3 "Lunes, 2 de Enero de 2023" "NumericRepresentations" \" -*- nroff -*-
.ad l
.nh
.SH NAME
nat_reg_digs_t.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'reg_digs_t\&.hpp'\fP
.br
\fC#include 'utilities\&.hpp'\fP
.br

.SS "Clases"

.in +1c
.ti -1c
.RI "struct \fBNumRepr::nat_reg_digs_t< UINT_T, B, L >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "namespace \fBNumRepr\fP"
.br
.in -1c
.SS "Funciones"

.in +1c
.ti -1c
.RI "template<typename UInt_t , UInt_t B, size_t LE> bool \fBNumRepr::is_nat_reg_digs_type_id\fP (std::string in)"
.br
.RI "ESPECIALIZACIONES PARA NAT_REG_DIGS\&. "
.ti -1c
.RI "template<typename UInt_t , UInt_t B, size_t LE> std::string \fBNumRepr::to_nat_reg_digs_type_string\fP ()"
.br
.ti -1c
.RI "template<typename UInt_t , UInt_t B, size_t LE> size_t \fBNumRepr::size_of_nat_reg_digs_type_string_idT\fP ()"
.br
.ti -1c
.RI "template<type_traits::uint_type_for_radix_c Int_Type, Int_Type Base, size_t Length> 
.br
requires (type_traits::suitable_base<Int_Type,Base>()&&(Length > 0))std::istream & \fBNumRepr::operator>>\fP (std::istream &is, nat_reg_digs_t< Int_Type, Base, Length > &arg)"
.br
.ti -1c
.RI "template<type_traits::uint_type_for_radix_c Int_Type, Int_Type Base, size_t Long> 
.br
requires (type_traits::suitable_base<Int_Type,Base>())std::ostream & \fBNumRepr::operator<<\fP (std::ostream &os, const nat_reg_digs_t< Int_Type, Base, Long > &arg)"
.br
.in -1c
.SH "Autor"
.PP 
Generado automáticamente por Doxygen para NumericRepresentations del código fuente\&.
