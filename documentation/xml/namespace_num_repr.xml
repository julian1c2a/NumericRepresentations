<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="es">
  <compounddef id="namespace_num_repr" kind="namespace" language="C++">
    <compoundname>NumRepr</compoundname>
    <innerclass refid="struct_num_repr_1_1base__num__t" prot="public">NumRepr::base_num_t</innerclass>
    <innerclass refid="struct_num_repr_1_1dig__t" prot="public">NumRepr::dig_t</innerclass>
    <innerclass refid="struct_num_repr_1_1nat__rat__fixed__reg__t" prot="public">NumRepr::nat_rat_fixed_reg_t</innerclass>
    <innerclass refid="struct_num_repr_1_1nat__reg__digs__t" prot="public">NumRepr::nat_reg_digs_t</innerclass>
    <innerclass refid="struct_num_repr_1_1reg__digs__t" prot="public">NumRepr::reg_digs_t</innerclass>
    <innernamespace refid="namespace_num_repr_1_1auxiliary__functions">NumRepr::auxiliary_functions</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1auxiliary__types">NumRepr::auxiliary_types</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1detail">NumRepr::detail</innernamespace>
    <innernamespace refid="namespace_num_repr_1_1type__traits">NumRepr::type_traits</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8" prot="public" static="no" strong="yes">
        <type>bool</type>
        <name>sign_e</name>
        <qualifiedname>NumRepr::sign_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1" prot="public">
          <name>vminus</name>
          <initializer>= true</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b" prot="public">
          <name>vplus</name>
          <initializer>= false</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="15" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="15" bodyend="15"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0" prot="public" static="no" strong="yes">
        <type>char</type>
        <name>sign_funct_e</name>
        <qualifiedname>NumRepr::sign_funct_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859" prot="public">
          <name>vzero</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0a664d33ce0500d45dc2e44770723ba7d1" prot="public">
          <name>vminus</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b" prot="public">
          <name>vplus</name>
          <initializer>= +1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>INTRODUCIDO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="16" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>dig_format_e</name>
        <qualifiedname>NumRepr::dig_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a2a0e86af18f652069a49330979c008a6" prot="public">
          <name>BINnat</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a11ed08d0994e9c768353601d9ea12741" prot="public">
          <name>BCDnat</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a1459599c082addf48ba502cbd852f111" prot="public">
          <name>BCDexc3</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a45848ac572e88361fe73ae60787a780b" prot="public">
          <name>BCDaitk</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46a7a5896262db09a2cd411bf1cdbb56de5" prot="public">
          <name>johnson_n</name>
          <initializer>=4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a6496cd1f1a0bb13df8bfb8f8197b6a46ac9f595e6a66c4856892cd21e81c6a67d" prot="public">
          <name>biquinario</name>
          <initializer>=5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="17" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>num_type_e</name>
        <qualifiedname>NumRepr::num_type_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a8f4ef05b543fb6157b374099100574b3" prot="public">
          <name>natural</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a0e1ffddb2cb5f112904e70bc30478dc0" prot="public">
          <name>entero</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a6e4fb67cd72a9935a571e3cb1110005e" prot="public">
          <name>racional</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1abb0e16a5ddc14e6b3ed63af1750922f7a4bca24304861acde5770fdbe3cc2503b" prot="public">
          <name>real</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>A INTRODUCIR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="19" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08" prot="public" static="no" strong="yes">
        <type>bool</type>
        <name>nat_num_format_e</name>
        <qualifiedname>NumRepr::nat_num_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a8f4ef05b543fb6157b374099100574b3" prot="public">
          <name>natural</name>
          <initializer>=false</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a40063be49a6ce4edc14a7416ed942b08a28485a5b2bfa6868f834fe7f61b46f5f" prot="public">
          <name>exc_n</name>
          <initializer>=true</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>YA INTRODUCIDO, PERO NO EXPLICITAMENTE NI COMPLETAMENTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="22" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>int_num_format_e</name>
        <qualifiedname>NumRepr::int_num_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634afc47fff21fb7613d155583803fc2949e" prot="public">
          <name>int_CB</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634a23db6f34a6b9b864ba35e2ae374c6aa3" prot="public">
          <name>int_CBm1</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634abfdb019232f14bf7a7519785d14a1e75" prot="public">
          <name>int_MS</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1afdb90f6611f73a430a615010f896f634abc6d44509ed50fd5177f78049c59c446" prot="public">
          <name>int_EXC_n</name>
          <initializer>=3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SOLO NATURAL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="25" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dc" prot="public" static="no" strong="yes">
        <type>unsigned char</type>
        <name>rat_num_format_e</name>
        <qualifiedname>NumRepr::rat_num_format_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcadbb955c289fb915e797daeaa9b736e9a" prot="public">
          <name>pair_num_den</name>
          <initializer>=0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dca12efa49e18cac717f7afe7fbc0db6ae2" prot="public">
          <name>fxd_pt</name>
          <initializer>=1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1a2b95927d22994b45b0d6787ac46449dcaa412206072b5acc1c9ca53f8fa8cc586" prot="public">
          <name>flt_pt</name>
          <initializer>=2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>EN C_B YA QUEDA EN MS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="28" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="enum" id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" prot="public" static="no" strong="yes">
        <type></type>
        <name>binop_e</name>
        <qualifiedname>NumRepr::binop_e</qualifiedname>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332" prot="public">
          <name>add</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140" prot="public">
          <name>sub</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a0f9f2d92c2583ef952556e1f382d0974" prot="public">
          <name>mult</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a38696558dc98494c08d951c052900a2a" prot="public">
          <name>div</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8" prot="public">
          <name>rem</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9" prot="public">
          <name>fediv</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf" prot="public">
          <name>other</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" line="32" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_types.hpp" bodystart="32" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_num_repr_1a10e7466eb7ce2646e7f8502d665e61f0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a8fe9f5218406354b79aac7a41bd4823f" kindref="member">uint128_t</ref></type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; <ref refid="namespace_num_repr_1_1type__traits_1af319111801e531a4ba8fee6e00e5b0f3" kindref="member">type_traits::TypeFromIntNumber_t</ref>&lt; B &gt;, static_cast&lt; <ref refid="namespace_num_repr_1_1type__traits_1af319111801e531a4ba8fee6e00e5b0f3" kindref="member">type_traits::TypeFromIntNumber_t</ref>&lt; B &gt; &gt;(B) &gt;</type>
        <definition>using NumRepr::digit_t = typedef dig_t&lt; type_traits::TypeFromIntNumber_t&lt;B&gt;, static_cast&lt;type_traits::TypeFromIntNumber_t&lt;B&gt; &gt;(B) &gt;</definition>
        <argsstring></argsstring>
        <name>digit_t</name>
        <qualifiedname>NumRepr::digit_t</qualifiedname>
        <briefdescription>
<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1189" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1193" bodyend="1187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_num_repr_1a9e06f6d5fa7a7c2262986bba0c4d7f35" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>typename CharT</type>
          </param>
        </templateparamlist>
        <type>constexpr CharT</type>
        <definition>constexpr CharT NumRepr::nullchar</definition>
        <argsstring></argsstring>
        <name>nullchar</name>
        <qualifiedname>NumRepr::nullchar</qualifiedname>
        <initializer>{CharT(&apos;\0&apos;)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="100" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_num_repr_1a267abda3e78b6a487e39c4de923838bf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8" kindref="member">sign_e</ref></type>
        <definition>constexpr sign_e NumRepr::Char2Sign</definition>
        <argsstring>(char ch) noexcept</argsstring>
        <name>Char2Sign</name>
        <qualifiedname>NumRepr::Char2Sign</qualifiedname>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="9" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="9" bodyend="15"/>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</references>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae6e314ed88507b46a8155893a823049c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>arith_integral_c</type>
            <declname>IntT</declname>
            <defname>IntT</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8" kindref="member">sign_e</ref></type>
        <definition>constexpr sign_e NumRepr::Int2Sign</definition>
        <argsstring>(IntT nu) noexcept</argsstring>
        <name>Int2Sign</name>
        <qualifiedname>NumRepr::Int2Sign</qualifiedname>
        <param>
          <type>IntT</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="19" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="19" bodyend="25"/>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</references>
        <references refid="namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a396b4de02e34550acddc2664931975d8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>arith_integral_c</type>
            <declname>IntT</declname>
            <defname>IntT</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0" kindref="member">sign_funct_e</ref></type>
        <definition>constexpr sign_funct_e NumRepr::Int2SignFunct</definition>
        <argsstring>(IntT nu) noexcept</argsstring>
        <name>Int2SignFunct</name>
        <qualifiedname>NumRepr::Int2SignFunct</qualifiedname>
        <param>
          <type>IntT</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="29" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="29" bodyend="37"/>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0a664d33ce0500d45dc2e44770723ba7d1">vminus</references>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859">vzero</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1af38005a1c9fb23a68d4651abc72ddf25" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>arith_natural_c</type>
            <declname>NatIntT</declname>
            <defname>NatIntT</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0" kindref="member">sign_funct_e</ref></type>
        <definition>constexpr sign_funct_e NumRepr::Nat2SignFunct</definition>
        <argsstring>(NatIntT nu) noexcept</argsstring>
        <name>Nat2SignFunct</name>
        <qualifiedname>NumRepr::Nat2SignFunct</qualifiedname>
        <param>
          <type>NatIntT</type>
          <declname>nu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="41" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" bodystart="41" bodyend="47"/>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0aedd99b9b4a181ec16ae4194c9b065e8b">vplus</references>
        <references refid="namespace_num_repr_1a53ea65055c089ed2caa1aa7a885e8eb0ad50833e13d94478df7669d0bfd94e859">vzero</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a518d83628ca3a414ac5e12e47bd7bd5b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_T</type>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1aea9446a386112c2a90c00874130877df" kindref="member">usint</ref></type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
        <definition>constexpr ullint NumRepr::pot_max_base_B_en_Int_T</definition>
        <argsstring>() noexcept</argsstring>
        <name>pot_max_base_B_en_Int_T</name>
        <qualifiedname>NumRepr::pot_max_base_B_en_Int_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="89" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="89" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0c4ce13b175150d7a33d5c7b515f9dfa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_T</type>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
        <definition>constexpr ullint NumRepr::num_digs_max_base_B_en_Int_T</definition>
        <argsstring>() noexcept</argsstring>
        <name>num_digs_max_base_B_en_Int_T</name>
        <qualifiedname>NumRepr::num_digs_max_base_B_en_Int_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="103" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="103" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aeced1290d3d28bee5b4a0e22840a72db" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Int_T</type>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
        <definition>constexpr ullint NumRepr::max_base_B_en_Int_T</definition>
        <argsstring>() noexcept</argsstring>
        <name>max_base_B_en_Int_T</name>
        <qualifiedname>NumRepr::max_base_B_en_Int_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="139" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a05a3dcfc9d03be48f1fb5f03ab8936f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * NumRepr::clear_ccad</definition>
        <argsstring>(char *, usint)</argsstring>
        <name>clear_ccad</name>
        <qualifiedname>NumRepr::clear_ccad</qualifiedname>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1aea9446a386112c2a90c00874130877df" kindref="member">usint</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="102" column="6" declfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" declline="102" declcolumn="6"/>
        <referencedby refid="namespace_num_repr_1a36edd93a4de5c8ef300823ce73625440" compoundref="basic__types_8hpp" startline="106" endline="120">devCadenaC</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a36edd93a4de5c8ef300823ce73625440" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; <ref refid="basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2" kindref="member">uchint</ref> B &gt; class</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2" kindref="member">uchint</ref></type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>constexpr const char *</type>
        <definition>constexpr const char * NumRepr::devCadenaC</definition>
        <argsstring>(T&lt; B &gt; arg, std::size_t long_ccad=64) noexcept</argsstring>
        <name>devCadenaC</name>
        <qualifiedname>NumRepr::devCadenaC</qualifiedname>
        <param>
          <type>T&lt; B &gt;</type>
          <declname>arg</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>long_ccad</declname>
          <defval>64</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="106" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="106" bodyend="120"/>
        <references refid="namespace_num_repr_1a05a3dcfc9d03be48f1fb5f03ab8936f1">clear_ccad</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a233042cc13bd5079b36824a1bf521264" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr char *</type>
        <definition>constexpr char * NumRepr::clear_ccad</definition>
        <argsstring>(char *cad_c, std::size_t long_de_cad_c) noexcept</argsstring>
        <name>clear_ccad</name>
        <qualifiedname>NumRepr::clear_ccad</qualifiedname>
        <param>
          <type>char *</type>
          <declname>cad_c</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>long_de_cad_c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="123" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a98a67aedc0e9a8fc2ec450eea84c153a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr unsigned long long</type>
        <definition>constexpr unsigned long long NumRepr::atoull</definition>
        <argsstring>(char *text) noexcept</argsstring>
        <name>atoull</name>
        <qualifiedname>NumRepr::atoull</qualifiedname>
        <param>
          <type>char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="130" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="130" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a7ab7ff7d3442bc8077616050e508999f" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_head</type>
          </param>
          <param>
            <type>typename T_tail_head</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>T_tail_tail</declname>
            <defname>T_tail_tail</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref></type>
            <declname>n_head</declname>
            <defname>n_head</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref></type>
            <declname>n_tail_head</declname>
            <defname>n_tail_head</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref> ...</type>
            <declname>n_tail_tail</declname>
            <defname>n_tail_tail</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; T_head, n_head+n_tail_head+(...+(n_tail_tail))&gt; &amp;&amp;</type>
        <definition>static constexpr std::array&lt; T_head, n_head+n_tail_head+(...+(n_tail_tail))&gt; &amp;&amp; NumRepr::concatenate_arrays</definition>
        <argsstring>(std::array&lt; T_head, n_head &gt; &amp;&amp;arg_head, std::array&lt; T_tail_head, n_tail_head &gt; &amp;&amp;arg_tail_head, std::array&lt; T_tail_tail, n_tail_tail &gt; &amp;&amp;... arg_tail_tail) noexcept</argsstring>
        <name>concatenate_arrays</name>
        <qualifiedname>NumRepr::concatenate_arrays</qualifiedname>
        <param>
          <type>std::array&lt; T_head, n_head &gt; &amp;&amp;</type>
          <declname>arg_head</declname>
        </param>
        <param>
          <type>std::array&lt; T_tail_head, n_tail_head &gt; &amp;&amp;</type>
          <declname>arg_tail_head</declname>
        </param>
        <param>
          <type>std::array&lt; T_tail_tail, n_tail_tail &gt; &amp;&amp;...</type>
          <declname>arg_tail_tail</declname>
        </param>
    <requiresclause>( ((n_head &gt; 0) &amp;&amp; (n_tail_head &gt; 0) &amp;&amp; ( ... &amp;&amp; (n_tail_tail &gt; 0))) &amp;&amp; (std::is_same_v&lt;T_head,T_tail_head&gt; &amp;&amp; ( ... &amp;&amp; (std::is_same_v&lt;T_tail_head,T_tail_tail&gt;))) )    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>&lt; CONCATENACION DE ARRAYS HOMOGENEOS DEFINICION GENERAL PARA 3+* ARRAYS DE LONGITUDES n_head Y n_tail_head Y ... n_tail_tail CONCATENACION DE ARRAYS HOMOGENEOS DEFINICION PARA 2 ARRAYS DE LONGITUDES T_1 Y T_0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="733" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1adf3e7f42762bf92d06d282f46b21a502" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_1</type>
          </param>
          <param>
            <type>typename T_0</type>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref></type>
            <declname>n_1</declname>
            <defname>n_1</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref></type>
            <declname>n_0</declname>
            <defname>n_0</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; T_0, n_1+n_0 &gt; &amp;&amp;</type>
        <definition>static constexpr std::array&lt; T_0, n_1+n_0 &gt; &amp;&amp; NumRepr::concatenate_arrays</definition>
        <argsstring>(std::array&lt; T_1, n_1 &gt; &amp;&amp;arg_l, std::array&lt; T_0, n_0 &gt; &amp;&amp;arg_r) noexcept</argsstring>
        <name>concatenate_arrays</name>
        <qualifiedname>NumRepr::concatenate_arrays</qualifiedname>
        <param>
          <type>std::array&lt; T_1, n_1 &gt; &amp;&amp;</type>
          <declname>arg_l</declname>
        </param>
        <param>
          <type>std::array&lt; T_0, n_0 &gt; &amp;&amp;</type>
          <declname>arg_r</declname>
        </param>
    <requiresclause>((n_1 &gt; 0)&amp;&amp;(n_0 &gt; 0)&amp;&amp;(std::is_same_v&lt;T_1,T_0&gt;))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" line="752" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/basic_types.hpp" bodystart="752" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval UINT_T</type>
        <definition>consteval UINT_T NumRepr::ui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_1</name>
        <qualifiedname>NumRepr::ui_1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T, B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1179" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1179" bodyend="1179"/>
        <referencedby refid="struct_num_repr_1_1dig__t_1a48f6d7f54f227eaf337438fccd8b9ff4" compoundref="dig__t_8hpp" startline="344" endline="365">NumRepr::dig_t&lt; UINT_T, B &gt;::is_0_divisor</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a3097efc035d69810593924081fe87698" compoundref="dig__t_8hpp" startline="1007" endline="1010">NumRepr::dig_t&lt; UINT_T, B &gt;::is_0or1</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1ac906122dd220e44ed6762896888b8e4c" compoundref="dig__t_8hpp" startline="1001" endline="1004">NumRepr::dig_t&lt; UINT_T, B &gt;::is_1</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a3f3fbeaf6b33d1715bbd18a32c9d786b" compoundref="dig__t_8hpp" startline="1013" endline="1016">NumRepr::dig_t&lt; UINT_T, B &gt;::is_not_1</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1aecc930e8cb3dbc3ede5beeff11ef77ee" compoundref="dig__t_8hpp" startline="320" endline="342">NumRepr::dig_t&lt; UINT_T, B &gt;::is_unit</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1aaa1f4b500974e6fd56e680e03f29b2c2" compoundref="dig__t_8hpp" startline="794" endline="799">NumRepr::dig_t&lt; UINT_T, B &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1dig__t_1a760f7426a2aa1c3633499eb30faa47bc" compoundref="dig__t_8hpp" startline="807" endline="812">NumRepr::dig_t&lt; UINT_T, B &gt;::operator--</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>consteval dig_t&lt; UINT_T, B &gt; NumRepr::dig_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_max</name>
        <qualifiedname>NumRepr::dig_max</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T, B&gt;())    </requiresclause>
        <briefdescription>
<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1183" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1183" bodyend="-1"/>
        <referencedby refid="struct_num_repr_1_1dig__t_1aa62606aacfd127f2670db23a727e1689" compoundref="dig__t_8hpp" startline="367" endline="386">NumRepr::dig_t&lt; UINT_T, B &gt;::mult_inv</referencedby>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, dig_t&lt; UINT_T, Base &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, Base &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO : ESTA VERSION + VERSION CON TRATAMIENTO DE ERRORES RUNTIME </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1206" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1206" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, dig_t&lt; UINT_T, Base &gt; arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref>&lt; UINT_T, Base &gt;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" line="1306" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/dig_t.hpp" bodystart="1306" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ab9f98f4d0eefbee0c13e52061d4a5c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref></type>
            <declname>Length</declname>
            <defname>Length</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, pfx_rat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type>pfx_rat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>
<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>
<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>
<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>
<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>
<para>ESTADO ACTUAL</para>
<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>
<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>
<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2176" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2176" bodyend="2424"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa425b3bf3dd35e9867de22ac45a46616" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">std::size_t</ref></type>
            <declname>Long</declname>
            <defname>Long</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const pfx_rat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const pfx_rat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2428" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2429" bodyend="2440"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aae8203ac76946e39f03d5b06f3fb6d4e" prot="public" static="no" const="yes" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>L</declname>
            <defname>L</defname>
          </param>
        </templateparamlist>
        <type>struct <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">NumRepr::nat_reg_digs_t</ref></type>
        <definition>struct NumRepr::nat_reg_digs_t NumRepr::operator</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator</name>
        <qualifiedname>NumRepr::operator</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref></type>
          <declname>arg</declname>
        </param>
    <requiresclause>(suitable_base&lt;UINT_T,B&gt;() &amp;&amp; (L&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3726" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2572" bodyend="2577"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a7de96c52522aa27131c466dc4e4971fc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::operator-</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2580" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2580" bodyend="2585"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aad072382b242d52d1c76e04446baefad" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::operator*</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::operator*</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TO DO TODAY 20:28-10-11-2022 ARITHMETIC OPERATION : COMPLETE EUCLIDEAN DIVISION BY A BASE_N_T&lt;1&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2588" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1abfd021d8e72dc71da1a449eb9116f7ca" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::fediv</definition>
        <argsstring>(const base_t &amp;larg, const base_N_t&lt; 1 &gt; &amp;rarg) -&gt; res_base_op_t&lt; binop_e::fediv &gt; noexcept</argsstring>
        <name>fediv</name>
        <qualifiedname>NumRepr::fediv</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 1 &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>7 tipo UINT_T entero [7] tipo <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref> wrapper de un entero [[7]] tipo base_t array [[2][3][4][5][6]] / [7] INICIALIZACION</para>
<para>BUCLE PRINCIPAL DE DIVISION</para>
<para>ULTIMA ITERACION</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2598" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2598" bodyend="2670"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ada65737e8d4b53596d709b01b5fba4a7" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 3 &gt;</type>
        <definition>static constexpr base_N_t&lt; 3 &gt; NumRepr::aprox_divB</definition>
        <argsstring>(const base_N_t&lt; 3 &gt; &amp;arg) noexcept</argsstring>
        <name>aprox_divB</name>
        <qualifiedname>NumRepr::aprox_divB</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 3 &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>999 99,9 100</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2673" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2673" bodyend="2709"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0b83f09c968c2c7a2879f430f6c1edf0" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 2 &gt;</type>
        <definition>static constexpr base_N_t&lt; 2 &gt; NumRepr::aprox_divB_not0</definition>
        <argsstring>(const base_N_t&lt; 2 &gt; &amp;arg) noexcept</argsstring>
        <name>aprox_divB_not0</name>
        <qualifiedname>NumRepr::aprox_divB_not0</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 2 &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO 15-11-2022 HECHO DESPUES DE LA HORA 20:00-14-11-2022 PERO EL MISMO DIA FUNCION DE RECURSION PARA LA DIVISION </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2712" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2712" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a72715057ccd3c8ccd1fe65d438a12b76" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref>, 2 &gt;</type>
        <definition>static constexpr std::array&lt; SIG_UINT_T, 2 &gt; NumRepr::aprox_coc</definition>
        <argsstring>(const base_t &amp;dndo, const base_t &amp;dsor, const base_N_t&lt; 3 &gt; &amp;rem, const base_N_t&lt; 2 &gt; &amp;coc, SIG_UINT_T rem_calculado, SIG_UINT_T coc_calculado) noexcept</argsstring>
        <name>aprox_coc</name>
        <qualifiedname>NumRepr::aprox_coc</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>dndo</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>dsor</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 3 &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 2 &gt; &amp;</type>
          <declname>coc</declname>
        </param>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref></type>
          <declname>rem_calculado</declname>
        </param>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref></type>
          <declname>coc_calculado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>RESULTADO BASE_N_T&lt;3&gt; desde RESULTADO BASE_N_T&lt;2&gt;</para>
<para>ALGUN CAST DE UINT_T A SIG_UINT_T ?</para>
<para>ES COC_CALULADO = TEMP[1] O COC_CALULADO = TEMP[0] ? ES REM_CALULADO = TEMP[0] O REM_CALULADO = TEMP[1] ?</para>
<para>PROBAR CON <ndash/>coc_uint rem_2_uint HABRIA QUE INCREMETAR EL REM EN DSOR</para>
<para>PROBAR CON ++coc_uint rem_2_uint HABRIA QUE DECREMETAR EL REM EN DSOR</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2748" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2748" bodyend="2789"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a7c0ae36334b1e4828c574ae2fa161762" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref>, 2 &gt;</type>
        <definition>static constexpr std::array&lt; SIG_UINT_T, 2 &gt; NumRepr::aprox_decr_coc</definition>
        <argsstring>(const base_t &amp;dndo, const base_t &amp;dsor, const base_N_t&lt; 3 &gt; &amp;rem, const base_N_t&lt; 2 &gt; &amp;coc, SIG_UINT_T rem_calculado, SIG_UINT_T coc_calculado) noexcept</argsstring>
        <name>aprox_decr_coc</name>
        <qualifiedname>NumRepr::aprox_decr_coc</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>dndo</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>dsor</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 3 &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 2 &gt; &amp;</type>
          <declname>coc</declname>
        </param>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref></type>
          <declname>rem_calculado</declname>
        </param>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref></type>
          <declname>coc_calculado</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2792" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2792" bodyend="2809"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1abc2db9ec56cac1b1b33de857717bb082" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref>, 2 &gt;</type>
        <definition>static constexpr std::array&lt; SIG_UINT_T, 2 &gt; NumRepr::aprox_incr_coc</definition>
        <argsstring>(const base_t &amp;dndo, const base_t &amp;dsor, const base_N_t&lt; 3 &gt; &amp;rem, const base_N_t&lt; 2 &gt; &amp;coc, SIG_UINT_T rem_calculado, SIG_UINT_T coc_calculado) noexcept</argsstring>
        <name>aprox_incr_coc</name>
        <qualifiedname>NumRepr::aprox_incr_coc</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>dndo</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>dsor</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 3 &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 2 &gt; &amp;</type>
          <declname>coc</declname>
        </param>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref></type>
          <declname>rem_calculado</declname>
        </param>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a169329f4fc827539fe28d786056373be" kindref="member">SIG_UINT_T</ref></type>
          <declname>coc_calculado</declname>
        </param>
        <briefdescription>
<para>TODO 20:00-14-11-2022. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2812" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2812" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad199139db06b7f58cf690f9087d89d6a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::fediv</definition>
        <argsstring>(const base_t &amp;larg, const base_N_t&lt; 2 &gt; &amp;rarg) -&gt; res_base_op_t&lt; binop_e::fediv &gt; noexcept</argsstring>
        <name>fediv</name>
        <qualifiedname>NumRepr::fediv</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a67b3e6f4b8a503e96dabc1bc39ea6fc7" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; 2 &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>COC</para>
<para>REM resto disminuido a 3</para>
<para>GOOD</para>
<para>DNDO</para>
<para>DSOR dismiuido a tamano 2</para>
<para>dsor &gt; B-1 dsor[1] &gt;= dig_1() dndo &gt; dsor dosr != B</para>
<para>INICIALIZACION</para>
<para>BUCLE PRINCIPAL DE DIVISION</para>
<para>DOS CASOS: REM[2]==0 O REM[2]==1 DOS CASOS: DSOR[1]==0 O DSOR[1]==1</para>
<para>COMPROBACION : DSOR*[COC_UINT]+[REM_UINT] == REM HACER LA BUSQUEDA DEL COCIENTE RECURSIVA HASTA DAR CON EL COCIENTE CORRECTO</para>
<para>751 -&gt; 075 47 -&gt; 05</para>
<para>Caso estandar</para>
<para>751 -&gt; 075 99 -&gt; 10</para>
<para>Caso de division por BASE</para>
<para>else if (rem[2].is_not_0() &amp;&amp; dsor[1].<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" kindref="member">is_0()</ref>) { /// 999 -&gt; 100 D*B^2 /// 27 -&gt; 03 E /// D*B^2 / E &gt; B ///&lt; ESTE CASO NO SE PUEDE DAR /// Se ha de reducir el rem practico a los 2 primeros }</para>
<para>999 -&gt; 100 99 -&gt; 10</para>
<para>TODO 11-28-17-11-2022 ULTIMA ITERACION</para>
<para>DOS CASOS: REM[2]==0 O REM[2]==1 DOS CASOS: DSOR[1]==0 O DSOR[1]==1</para>
<para>COMPROBACION : DSOR*[COC_UINT]+[REM_UINT] == REM HACER LA BUSQUEDA DEL COCIENTE RECURSIVA HASTA DAR CON EL COCIENTE CORRECTO</para>
<para>751 -&gt; 075 47 -&gt; 05</para>
<para>PROBAR CON <ndash/>coc_uint rem_2_uint HABRIA QUE INCREMETAR EL REM EN DSOR</para>
<para>PROBAR CON ++coc_uint rem_2_uint HABRIA QUE DECREMETAR EL REM EN DSOR</para>
<para>Caso estandar</para>
<para>751 -&gt; 075 99 -&gt; 10</para>
<para>Caso de division por BASE</para>
<para>else if (rem[2].is_not_0() &amp;&amp; dsor[1].<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" kindref="member">is_0()</ref>) { /// 999 -&gt; 100 D*B^2 /// 27 -&gt; 03 E /// D*B^2 / E &gt; B ///&lt; ESTE CASO NO SE PUEDE DAR /// Se ha de reducir el rem practico a los 2 primeros }</para>
<para>999 -&gt; 100 99 -&gt; 10</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2833" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2833" bodyend="3020"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a12ad114cbeacc428a90c0dbe68a304db" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator/</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator/</name>
        <qualifiedname>NumRepr::operator/</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>DIVISION BY A DIGIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3110" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3110" bodyend="3113"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">fediv</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a12e731c01d58bb29384e5fd1a15683c0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator%</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator%</name>
        <qualifiedname>NumRepr::operator%</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>REMAINDER BY A DIGIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3117" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3117" bodyend="3120"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">fediv</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1afea211be31385d7aaaf396832cc949ee" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::operator+=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3132" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3132" bodyend="3166"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a5fb1fc36c434f2ad0490c9ac5012584b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::operator+=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3171" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3171" bodyend="3175"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1acb13964462ea1b1fb2563ffdbeb3e126" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::operator-=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; cparg pasa a ser el complemento a la base menos 1 de cparg</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3180" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3180" bodyend="3200"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aabc2bd43b5ee0f987e57e929f3725476" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::operator-=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3205" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3205" bodyend="3209"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1af7b484ed4156f95df3afcf66b4fc5c5c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::operator*=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3214" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3214" bodyend="3223"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a1ad8f3cea9f9878347d3a61a002d771b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::operator*=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3228" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3228" bodyend="3232"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a94d274a3a751ac8917e2140f17d936a5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator+</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::operator+</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>TO DO. </para>
        </briefdescription>
        <detaileddescription>
<para>TO DO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3253" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3253" bodyend="3258"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a888f64580c2333d3dd212a77599e3145" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator-</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::operator-</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3262" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3262" bodyend="3267"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa38462b1d6416971cb55d730c121baef" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator*</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::operator*</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3271" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3271" bodyend="3276"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a01905e8e00a05eb55fc7062da6a0443d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator+</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::operator+</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3280" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3280" bodyend="3285"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a40259e0f4a922bab73ff5ad9458ac588" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator-</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::operator-</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3289" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3289" bodyend="3294"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a72326d936b79e06798d35ff3d47893dd" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator*</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::operator*</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3298" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3298" bodyend="3303"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a5da2c3f1358330028d33c61e9c640d48" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>static constexpr size_t NumRepr::cuenta_0s_desde_IZDA</definition>
        <argsstring>(const reg_ints_t&lt; L &gt; &amp;arg) noexcept</argsstring>
        <name>cuenta_0s_desde_IZDA</name>
        <qualifiedname>NumRepr::cuenta_0s_desde_IZDA</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2a56ba266aa59eee3cce6ca18348b6bb" kindref="member">reg_ints_t</ref>&lt; L &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3307" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3307" bodyend="3319"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa46cb26dc37881a94fd1de4005bb52ce" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>static constexpr size_t NumRepr::cuenta_0s_desde_DRCHA</definition>
        <argsstring>(const reg_ints_t&lt; L &gt; &amp;arg) noexcept</argsstring>
        <name>cuenta_0s_desde_DRCHA</name>
        <qualifiedname>NumRepr::cuenta_0s_desde_DRCHA</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2a56ba266aa59eee3cce6ca18348b6bb" kindref="member">reg_ints_t</ref>&lt; L &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3322" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3322" bodyend="3334"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0d49430e01587a166f626b2bd6590e08" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator/</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator/</name>
        <qualifiedname>NumRepr::operator/</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>MOST SIGNIFICANT DIGIT DEL DIVISOR [DEL NUMERO NO DEL TIPO]</para>
<para>MOST SIGNIFICANT DIGIT DEL DIVIDENDO [DEL NUMERO NO DEL TIPO]</para>
<para>ERROR DIVISION BY 0</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3337" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3337" bodyend="3434"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1af6baf33f1c268754e9818d85f8027e8c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::operator%</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator%</name>
        <qualifiedname>NumRepr::operator%</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="3437" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="3437" bodyend="3454"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1abc220e2b8550522f9cb96ecd95d172bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>Length</declname>
            <defname>Length</defname>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream &amp; NumRepr::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, nat_reg_digs_t&lt; Int_Type, Base, Length &gt; &amp;arg)</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; Int_Type, Base, Length &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;()&amp;&amp;(Length &gt; 0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TODO ESTA VERSION + VERSION CON TRATAMIENTO DE ERRORES EN RUNTIME </para>
        </detaileddescription>
        <inbodydescription>
<para>STRING RECOGIDO DESDE LA ENTRADA ESTANDAR CIN</para>
<para>TIPOS A SER UTILIZADOS EN LA FUNCIÓN: NOMBRE DE TIPOS CORTOS</para>
<para>INDICE QUE RECORRE EL STRING RECOGIDO DE ENTRADA</para>
<para>VARIABLES PARA ACCIONES EN LOS ESTADOS</para>
<para>VARIABLE DE RETORNO (BINDED TO THE ARG BY REFERENCE)</para>
<para>ESTADO ACTUAL</para>
<para>CARACTER QUE GUARDARA EL INDICADO POR EL INDICE DEL STRING RECOGIDO DESDE CIN</para>
<para>RECOGEMOS DESDE LA ENTRADA EL STRING CON LA INFORMACION CODIFICADA</para>
<para>MAQUINA DE ESTADOS FINITOS QUE HACE EL PARSE() DE LA ENTRADA</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3090" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3090" bodyend="3338"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="182" endline="184">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aee52933f615df4b729ccc06310036b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
          <param>
            <type>Int_Type</type>
            <declname>Base</declname>
            <defname>Base</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>Long</declname>
            <defname>Long</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; NumRepr::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const nat_reg_digs_t&lt; Int_Type, Base, Long &gt; &amp;arg)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; Int_Type, Base, Long &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(type_traits::suitable_base&lt;Int_Type,Base&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3342" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3343" bodyend="3354"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a349a510b43badac76cd86e34dcbb8288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_UINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_UINT_dig_t</name>
        <qualifiedname>NumRepr::display_constr_UINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="10" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="10" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a27cd3b07e101240bdd85b9248f428585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_SINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_SINT_dig_t</name>
        <qualifiedname>NumRepr::display_constr_SINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="28" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="28" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a65c9d82e583a5b64b3b94c10ae46e80b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_defecto_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_defecto_dig_t</name>
        <qualifiedname>NumRepr::display_constr_defecto_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="51" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="51" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a2abf3d71843768521c5b7b608137bcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_copia_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_copia_dig_t</name>
        <qualifiedname>NumRepr::display_constr_copia_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="66" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="66" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a50ed09e5a479347d085a2dff28299e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_constr_movimiento_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_constr_movimiento_dig_t</name>
        <qualifiedname>NumRepr::display_constr_movimiento_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="87" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="87" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1acd7f0f0f3ad4af5e2a8b26aaf92e59ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_UINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_UINT_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_UINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="113" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="113" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad70bf53a8ff03d0d407bd0b88aac90bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_SINT_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_SINT_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_SINT_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="133" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="133" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aba82289a413133952ad74254c7d86fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_copia_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_copia_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_copia_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="151" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="151" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a3e7eb3c76c069bbf89a13630f24df04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_assign_movimiento_dig_t</definition>
        <argsstring>()</argsstring>
        <name>display_operator_assign_movimiento_dig_t</name>
        <qualifiedname>NumRepr::display_operator_assign_movimiento_dig_t</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="174" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="174" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a6b984dcc8ef024c9c42fcfbc897bb060" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_preincrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_preincrement</name>
        <qualifiedname>NumRepr::display_operator_preincrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="197" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="197" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa5d4ce0684eb1ed7d51e2bd7351b9f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_postincrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_postincrement</name>
        <qualifiedname>NumRepr::display_operator_postincrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="225" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="225" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a17e46977769b816d0006e7b22c0b3a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_predecrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_predecrement</name>
        <qualifiedname>NumRepr::display_operator_predecrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="253" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="253" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad1dcf3e9f99dd7325a7ac774a3908389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_postdecrement</definition>
        <argsstring>()</argsstring>
        <name>display_operator_postdecrement</name>
        <qualifiedname>NumRepr::display_operator_postdecrement</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="281" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="281" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae5396bd9648b4535ea252118b48abed0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add_assign</name>
        <qualifiedname>NumRepr::display_operator_add_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="309" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="309" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a06390888c1a5aa13471f73214555a6ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_add_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="348" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="348" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a02cc28145662d4c0eb86cc8bba1b2890" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract_assign</name>
        <qualifiedname>NumRepr::display_operator_substract_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="380" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="380" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aff607bfd703ccc92f0394a2d53e5a978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_substract_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="423" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="423" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1adf2a3579520b2a41803827f71117b59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_mult_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_mult_assign</name>
        <qualifiedname>NumRepr::display_operator_mult_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="466" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="466" bodyend="505"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a1bfea978c2c4f02951d0aaba99c33277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_mult_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_mult_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_mult_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="509" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="509" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a4f2823e0e1c7c97f647e2c49d5386dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_ediv_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_ediv_assign</name>
        <qualifiedname>NumRepr::display_operator_ediv_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="552" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="552" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a40d1a413dfb00f54f7e5e57ba120e1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_ediv_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_ediv_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_ediv_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="603" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="603" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ab5cfacf83cb5ad8c3ea473eb5f07bed8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_erem_assign</definition>
        <argsstring>()</argsstring>
        <name>display_operator_erem_assign</name>
        <qualifiedname>NumRepr::display_operator_erem_assign</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="661" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="661" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae8f3b3b914ffe3ce9448c8a384a77fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_erem_assign_uint</definition>
        <argsstring>()</argsstring>
        <name>display_operator_erem_assign_uint</name>
        <qualifiedname>NumRepr::display_operator_erem_assign_uint</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="713" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="713" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aef173813ec54d5567be3954915e1c675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add</name>
        <qualifiedname>NumRepr::display_operator_add</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="770" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="770" bodyend="808"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a69df9f333832a022d004ed63d0d01c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_add_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_add_int</name>
        <qualifiedname>NumRepr::display_operator_add_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="812" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="812" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0e28a120b130962ea0116df58c03c6f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract</name>
        <qualifiedname>NumRepr::display_operator_substract</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="853" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="853" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1acabc08f11c12fb6d9f9e790e9030f3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_substract_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_substract_int</name>
        <qualifiedname>NumRepr::display_operator_substract_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="895" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="895" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a8060f5d58bba169daf225959a72bd68a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_multiply</definition>
        <argsstring>()</argsstring>
        <name>display_operator_multiply</name>
        <qualifiedname>NumRepr::display_operator_multiply</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="936" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="936" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aa553f82b42704b3381cd71b67855b1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_multiply_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_multiply_int</name>
        <qualifiedname>NumRepr::display_operator_multiply_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="978" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="978" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a30555c61063d5a6531aad5685221fd1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_edivision</definition>
        <argsstring>()</argsstring>
        <name>display_operator_edivision</name>
        <qualifiedname>NumRepr::display_operator_edivision</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1019" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1019" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ada3dbd81393ca220f533ea9c7b59326c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_edivision_int</definition>
        <argsstring>()</argsstring>
        <name>display_operator_edivision_int</name>
        <qualifiedname>NumRepr::display_operator_edivision_int</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1080" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1080" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a0aa113da9c3c91f1af1c073958cc12a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_C_B</definition>
        <argsstring>()</argsstring>
        <name>display_operator_C_B</name>
        <qualifiedname>NumRepr::display_operator_C_B</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1133" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1133" bodyend="1174"/>
        <references refid="struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70" compoundref="dig__t_8hpp" startline="944" endline="947">NumRepr::dig_t&lt; UINT_T, B &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a2525ee5f113018fcb89a1c8a6a28aa31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_operator_C_Bm1</definition>
        <argsstring>()</argsstring>
        <name>display_operator_C_Bm1</name>
        <qualifiedname>NumRepr::display_operator_C_Bm1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1178" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1178" bodyend="1219"/>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="938" endline="941">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1aec8203e0be75e913ece973211c4b1386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_prop_C_B_eq_inv_C_B</definition>
        <argsstring>()</argsstring>
        <name>display_prop_C_B_eq_inv_C_B</name>
        <qualifiedname>NumRepr::display_prop_C_B_eq_inv_C_B</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1223" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1223" bodyend="1253"/>
        <references refid="struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70" compoundref="dig__t_8hpp" startline="944" endline="947">NumRepr::dig_t&lt; UINT_T, B &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1adb8c5e5fc5db353e6db6327ac4c62742" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_prop_C_Bm1_eq_inv_C_Bm1</definition>
        <argsstring>()</argsstring>
        <name>display_prop_C_Bm1_eq_inv_C_Bm1</name>
        <qualifiedname>NumRepr::display_prop_C_Bm1_eq_inv_C_Bm1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1257" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1257" bodyend="1287"/>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="938" endline="941">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ae0fc1d1a1935c51de9fa9490f212c168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_prop_C_B_minus_1_eq_C_Bm1</definition>
        <argsstring>()</argsstring>
        <name>display_prop_C_B_minus_1_eq_C_Bm1</name>
        <qualifiedname>NumRepr::display_prop_C_B_minus_1_eq_C_Bm1</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1291" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1291" bodyend="1322"/>
        <references refid="struct_num_repr_1_1dig__t_1a946d999d39a25dda024a06800ac57f70" compoundref="dig__t_8hpp" startline="944" endline="947">NumRepr::dig_t&lt; UINT_T, B &gt;::C_B</references>
        <references refid="struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960" compoundref="dig__t_8hpp" startline="938" endline="941">NumRepr::dig_t&lt; UINT_T, B &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1a49752c01c024e2da6e67837bde614d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_unary_operator_minus</definition>
        <argsstring>()</argsstring>
        <name>display_unary_operator_minus</name>
        <qualifiedname>NumRepr::display_unary_operator_minus</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1327" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1327" bodyend="1368"/>
      </memberdef>
      <memberdef kind="function" id="namespace_num_repr_1ad2ec78854da2abb21348af8322a61571" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::allowable_base_type_c</type>
            <declname>UINT_T</declname>
            <defname>UINT_T</defname>
          </param>
          <param>
            <type>UINT_T</type>
            <declname>B</declname>
            <defname>B</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::display_unary_operator_neg</definition>
        <argsstring>()</argsstring>
        <name>display_unary_operator_neg</name>
        <qualifiedname>NumRepr::display_unary_operator_neg</qualifiedname>
    <requiresclause>(type_traits::suitable_base&lt;UINT_T,B&gt;())    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" line="1372" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/test_dig_t.hpp" bodystart="1372" bodyend="1413"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>En general me gustaría tener las siguientes macros desenrrollantes: const <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp; cr_cthis{*this}; <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> &amp; r_cthis {*this}; <ref refid="struct_num_repr_1_1reg__digs__t" kindref="compound">reg_digs_t</ref> cthis {*this}; Como : define cr(type)         const type &amp; cr_cthis{*this}; define r(type) type &amp; r_cthis{*this}; define cp(type) type cp_cthis{*this}; Pero de forma local </para>
    </detaileddescription>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/auxiliary_functions.hpp" line="6" column="1"/>
  </compounddef>
</doxygen>
