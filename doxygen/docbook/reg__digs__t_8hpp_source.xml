<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_reg__digs__t_8hpp_source" xml:lang="es">
<title>reg_digs_t.hpp</title>
<indexterm><primary>reg_digs_t.hpp</primary></indexterm>
Ir a la documentaci√≥n de este archivo.<programlisting linenumbering="unnumbered"><anchor xml:id="_reg__digs__t_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;REG_DIGS_T_HPP_INCLUDED</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;REG_DIGS_T_HPP_INCLUDED</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00003"/>00003 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_dig__t_8hpp">dig_t.hpp</link>&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_utilities_8hpp">utilities.hpp</link>&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_lexer__parser_8hpp">lexer_parser.hpp</link>&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00007"/>00007 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00008"/>00008 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespace_num_repr">NumRepr</link>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00009"/>00009 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00010"/>00010 <emphasis role="keyword">using&#32;</emphasis>type_traits::uint_type_for_radix_c;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00011"/>00011 <emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5">type_traits::suitable_base</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00012"/>00012 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00013"/>00013 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;L&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00014"/>00014 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(L&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00015"/><link linkend="_struct_num_repr_1_1reg__digs__t">00015</link> <emphasis role="keyword">struct</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;std::array&lt;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t&lt;UINT_T,B&gt;</link>,L&gt;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00016"/>00016 public&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00017"/>00017 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00018"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">00018</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t&lt;UINT_T,B&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00019"/>00019 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&gt;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00022"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">00022</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;std::array&lt;dig_t,N&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00023"/>00023 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00024"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">00024</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;L&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00025"/>00025 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00027"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">00027</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t</link>&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00028"/>00028 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00030"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5b679caa4dbb16fb6c5cca1f30ba5f66">00030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a5b679caa4dbb16fb6c5cca1f30ba5f66">const_base_this</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>*&#32;const<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00033"/>00033 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00034"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6feafb3a28270bf7a293959e34d168e6">00034</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>*&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a6feafb3a28270bf7a293959e34d168e6">base_this</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00038"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aabe906a2378892bb152dba2e3f2a7b5c">00038</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aabe906a2378892bb152dba2e3f2a7b5c">r_base_cthis</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*base_this());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00042"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6adb2fc166cc2a4419f5f86bd282df4f">00042</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a6adb2fc166cc2a4419f5f86bd282df4f">cr_base_cthis</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&amp;<emphasis role="keyword">&gt;</emphasis>(*const_base_this()));
<anchor xml:id="_reg__digs__t_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00045"/>00045 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00046"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a813a2fca2665812c80725f66d1e5049f">00046</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a813a2fca2665812c80725f66d1e5049f">cp_base_cthis</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{*(cr_base_cthis())});
<anchor xml:id="_reg__digs__t_8hpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00050"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b">00050</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b">r_cthis</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00053"/>00053 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00054"/><link linkend="_struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b">00054</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b">cr_cthis</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00058"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c">00058</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c">cp_cthis</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00062"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af5c56f665da3c6aa1957ae521e74312d">00062</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af5c56f665da3c6aa1957ae521e74312d">cp_cthis_at</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;k)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cp_base_cthis()[k];
<anchor xml:id="_reg__digs__t_8hpp_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00065"/>00065 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00066"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a926b408a1e43d578157164c351ac60c2">00066</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a926b408a1e43d578157164c351ac60c2">r_cthis_at</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;k)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(r_base_cthis()[k]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00069"/>00069 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00070"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a44c0eab2b1465200a4dc0e349dba0b07">00070</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a44c0eab2b1465200a4dc0e349dba0b07">cr_cthis_at</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;k)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cr_base_cthis()[k]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00073"/>00073 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00074"/>00074 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00075"/>00075 public&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00076"/>00076 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00077"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">00077</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link>&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00078"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">00078</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link>&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">type_traits::sig_SInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00079"/>00079 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;binop_e&#32;op,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00081"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ab04d648f3421732b3103e32a28f28d09">00081</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1ab04d648f3421732b3103e32a28f28d09">res_base_N_op_t</link>&#32;&#32;&#32;=
<anchor xml:id="_reg__digs__t_8hpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t&lt;base_N_t&lt;N&gt;</link>,op,N&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00083"/>00083 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;binop_e&#32;op&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00085"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a410c269c5a379228ee4f9c757cdaace8">00085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a410c269c5a379228ee4f9c757cdaace8">res_base_op_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=
<anchor xml:id="_reg__digs__t_8hpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t&lt;base_t,op,L&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00087"/>00087 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00088"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a9d37af8b2ce4db142cb55a932d8fd805">00088</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a9d37af8b2ce4db142cb55a932d8fd805">dig_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ac6a8ff5406dd59f782f096ea7f2d2da3">dig_t::dig_0</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00090"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3c8f7cb71f70468db3ba5ccef33bdd37">00090</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a3c8f7cb71f70468db3ba5ccef33bdd37">dig_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a1dc126ef160231a2c2a87a30fdda731c">dig_t::dig_1</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00092"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a48a6ce4848e83ccea11c42c2deea38d9">00092</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a48a6ce4848e83ccea11c42c2deea38d9">dig_Bm1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a85fa7ae1435069ddd1b87658c97a5856">dig_t::dig_Bm1</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00094"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aae46074f8eb1e11d4856e2efc720e3b4">00094</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aae46074f8eb1e11d4856e2efc720e3b4">dig_Bm2</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a326196de3bd9537e5c23df66440b8a56">dig_t::dig_Bm2</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00096"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa6b20e53fc72fb5353a27a5db5205ea2">00096</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aa6b20e53fc72fb5353a27a5db5205ea2">ui_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a76b5c675bb32de9c1803da4dd804d8e4">dig_t::ui_0</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00098"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a1ba13ed518c031c71ccd2aa99292c4f5">00098</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a1ba13ed518c031c71ccd2aa99292c4f5">ui_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a7abd8bcb3f0bd6b749488dfad8e56da5">dig_t::ui_1</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00100"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aafcea2323aac8fcedfc0f0780e46df5f">00100</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aafcea2323aac8fcedfc0f0780e46df5f">ui_Bm1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;B-1;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00102"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3d59521dadb20ede37c648c6ec863bda">00102</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;UINT_T&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a3d59521dadb20ede37c648c6ec863bda">ui_B</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;B;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00104"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a869fb55d18546d9f677b47fd1dd1d8bd">00104</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a869fb55d18546d9f677b47fd1dd1d8bd">sui_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1aeb3cb9d0b23b1c211dff853083a6fe83">dig_t::sui_0</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00106"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a80e523569503af77fdf36cada4de6700">00106</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a80e523569503af77fdf36cada4de6700">sui_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a43a4e505e240a8f1ad75f5ad5f8d1353">dig_t::sui_1</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00108"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a51dd71f63e7ccf1c92adbe3876a5eb19">00108</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a51dd71f63e7ccf1c92adbe3876a5eb19">sui_Bm1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9">dig_t::sui_B</link>()-1;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00110"/><link linkend="_struct_num_repr_1_1reg__digs__t_1adaa8d7c0417ae7a7e76237ba2d368ede">00110</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1adaa8d7c0417ae7a7e76237ba2d368ede">sui_B</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9">dig_t::sui_B</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00112"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af47bb7bcb365e6060f836ec7d53c8565">00112</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af47bb7bcb365e6060f836ec7d53c8565">sui_Bp1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a815d56d548d1572c87630f311d8b49e9">dig_t::sui_B</link>()+1;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00114"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ac1cf8584292927fea378bde2e3172fce">00114</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ac1cf8584292927fea378bde2e3172fce">ssi_0</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1a287219a289b34f6f682e318b3ca1f92c">dig_t::ssi_0</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00116"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af598442408cf2ed05923092e2ccb7cd2">00116</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af598442408cf2ed05923092e2ccb7cd2">ssi_1</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1af8eebfebac403516d028ecce97b98d63">dig_t::ssi_1</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00118"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5e0248eb0b0cef64dcbf5fb87823714e">00118</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a5e0248eb0b0cef64dcbf5fb87823714e">ssi_Bm1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179">dig_t::ssi_B</link>()-1;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00120"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a80fbaa972abc3ee57f5e8561eb4e944d">00120</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a80fbaa972abc3ee57f5e8561eb4e944d">ssi_B</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179">dig_t::ssi_B</link>();}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00122"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ae6d6e6d6877d2fe389cdbacbaf7a6f63">00122</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ae6d6e6d6877d2fe389cdbacbaf7a6f63">ssi_Bp1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t_1ae5704d076a53f9416a1b943df75b9179">dig_t::ssi_B</link>()+1;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00124"/>00124 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00129"/>00129 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00132"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ac49dc9af3af62aea5a7dfde9114e6c18">00132</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ac49dc9af3af62aea5a7dfde9114e6c18">regd_base_N_0</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;dig&#32;:&#32;ret)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;=&#32;dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00139"/>00139 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00140"/>00140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00141"/>00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00142"/><link linkend="_struct_num_repr_1_1reg__digs__t_1adb436e23c7144ee0da3db08cac34c7ed">00142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1adb436e23c7144ee0da3db08cac34c7ed">regd_base_N_1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;ret{regd_base_N_0&lt;N&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00144"/>00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;dig_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00147"/>00147 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00150"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa001d41637e1a10c1284b5239b37159c">00150</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aa001d41637e1a10c1284b5239b37159c">regd_base_N_Bm1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00151"/>00151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;ret{regd_base_N_0&lt;N&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;dig_Bm1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00155"/>00155 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00158"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ad9a96eb8b49ed44884da34180b85fe4f">00158</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ad9a96eb8b49ed44884da34180b85fe4f">regd_base_N_B</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;ret{regd_base_N_0&lt;N&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;dig_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00163"/>00163 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;n&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((n&gt;=0)&amp;&amp;(n&#32;&lt;&#32;N))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00166"/>00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00167"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2ef368bdca679fa51aee6d18644b6a12">00167</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2ef368bdca679fa51aee6d18644b6a12">regd_base_N_pow_n_B</link>()&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;ret{regd_base_N_0&lt;N&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[n]&#32;=&#32;dig_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00172"/>00172 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;n&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((n&gt;=0)&amp;&amp;(n&#32;&lt;&#32;N))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00176"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af10d7f31743e81babe1c9d542f30f013">00176</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af10d7f31743e81babe1c9d542f30f013">regd_base_N_pow_n_B_m1</link>()&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;ret{};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;dig_Bm1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{n}&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00186"/>00186 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00193"/>00193 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00195"/><link linkend="_struct_num_repr_1_1reg__digs__t_1affe99648c3d9c6e3e4decac8d4e46ee1">00195</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1affe99648c3d9c6e3e4decac8d4e46ee1">regd_base_0</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_N_0&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00198"/>00198 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00200"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5b1efb8235b79459b15c6f2f84659452">00200</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a5b1efb8235b79459b15c6f2f84659452">regd_base_1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_N_1&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00203"/>00203 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00205"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a475a4bf204efd8f87c400575dc49114d">00205</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a475a4bf204efd8f87c400575dc49114d">regd_base_Bm1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_N_Bm1&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00208"/>00208 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00210"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a69d2abd48bd92a58df7f51fc9e7578dd">00210</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a69d2abd48bd92a58df7f51fc9e7578dd">regd_base_B</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_N_B&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00213"/>00213 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00215"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a55521e5b02fa0a1d56745066e20eab91">00215</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a55521e5b02fa0a1d56745066e20eab91">regd_base_pow_n_B</link>()&#32;&#32;&#32;&#32;&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_N_pow_n_B&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00218"/>00218 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00220"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a16e44b01fdd4e66c3390c34578f32e2c">00220</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a16e44b01fdd4e66c3390c34578f32e2c">regd_base_pow_n_B_m1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_N_pow_n_B_m1&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00222"/>00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00223"/>00223 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00228"/>00228 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00230"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ad04bdf9bcccd5c68c414b2cca9e9bc75">00230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ad04bdf9bcccd5c68c414b2cca9e9bc75">regd_0</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{regd_base_N_0&lt;L&gt;()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00233"/>00233 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00235"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a9d2524d7b34e2e1b7d98ec3a16ccac67">00235</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a9d2524d7b34e2e1b7d98ec3a16ccac67">regd_1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{regd_base_1()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00238"/>00238 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00240"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af02f9cc5afcc26fb14077a939c26ce85">00240</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af02f9cc5afcc26fb14077a939c26ce85">regd_Bm1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{regd_base_Bm1()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00243"/>00243 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00245"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a8f86da208d0c9e947caea1a283711414">00245</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a8f86da208d0c9e947caea1a283711414">regd_B</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{regd_base_B()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00248"/>00248 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00250"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af4fa7fec5b40b63434a86ee594adaed1">00250</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af4fa7fec5b40b63434a86ee594adaed1">regd_pow_n_B</link>()&#32;&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00251"/>00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{regd_base_pow_n_B()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00253"/>00253 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">consteval</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00255"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a1e76f417daec0f07cb28088baec9fb29">00255</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a1e76f417daec0f07cb28088baec9fb29">regd_pow_n_B_m1</link>()&#32;noexcept&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{regd_base_pow_n_B_m1()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00258"/>00258 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00259"/>00259 public&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00267"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2f8a4ff3bd499089c6440c7992ee13cd">00267</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1a2f8a4ff3bd499089c6440c7992ee13cd">begin</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::begin();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00269"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa912c8d96b92e95e0d751f2a4500c436">00269</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1aa912c8d96b92e95e0d751f2a4500c436">cbegin</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::cbegin();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00271"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aae1bd8ec380671dcd31c9d7dcd03d445">00271</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1aae1bd8ec380671dcd31c9d7dcd03d445">end</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::end();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00273"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2cc438add79ca50b7ec3a0dcb3b4c6df">00273</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1a2cc438add79ca50b7ec3a0dcb3b4c6df">cend</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::cend();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00275"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ae0932422c4f294cd994b0f457af37599">00275</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1ae0932422c4f294cd994b0f457af37599">rbegin</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::rbegin();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00277"/><link linkend="_struct_num_repr_1_1reg__digs__t_1abfbe9a50e4c844fa73ee64e3de27d4c1">00277</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1abfbe9a50e4c844fa73ee64e3de27d4c1">crbegin</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::crbegin();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00279"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6a98c20beaf0085e9b75ed6a73b6fac5">00279</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1a6a98c20beaf0085e9b75ed6a73b6fac5">rend</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::rend();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00281"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ab2f586a22c208f2db8981f236be1f8a5">00281</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)<link linkend="_struct_num_repr_1_1reg__digs__t_1ab2f586a22c208f2db8981f236be1f8a5">crend</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::crend();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00283"/>00283 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00284"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a7c0ccc82f763ae0b3bf9fd78f218c206">00284</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a7c0ccc82f763ae0b3bf9fd78f218c206">size</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::size();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00286"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a79ebf142083abdc8dcd44a354f159129">00286</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a79ebf142083abdc8dcd44a354f159129">max_size</link>()const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::max_size();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00288"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a1344b97a93e4af1c28f04d2f8238ee09">00288</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a1344b97a93e4af1c28f04d2f8238ee09">empty</link>()&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;base_t::empty();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00290"/>00290 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00291"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3746b11d0b23dc5d2bbba1d9cea58a41">00291</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a3746b11d0b23dc5d2bbba1d9cea58a41">front</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this-&gt;base_t::front());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00293"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a022dc0ba35bb79d3a00d31f6603bcfbe">00293</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a022dc0ba35bb79d3a00d31f6603bcfbe">front</link>()&#32;const&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this-&gt;base_t::front());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00295"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5fd5f903aae0b2017103d59e368c71f7">00295</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a5fd5f903aae0b2017103d59e368c71f7">back</link>()&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this-&gt;base_t::back());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00297"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ab3d4db33623c17c1f36712663487df1b">00297</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ab3d4db33623c17c1f36712663487df1b">back</link>()&#32;&#32;const&#32;&#32;&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this-&gt;base_t::back());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00299"/>00299 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00300"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a0456b2f0f8d879695698974f9f2b325d">00300</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a0456b2f0f8d879695698974f9f2b325d">fill</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;value)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;base_t::fill(value);&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00302"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa0d612930f23d7545926c12c6149759b">00302</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aa0d612930f23d7545926c12c6149759b">swap</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&amp;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf">other</link>)&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;this-&gt;base_t::swap(*<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf">other</link>.data());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00304"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3acacc33c0ddfe1a24835436f1e9d9f2">00304</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a3acacc33c0ddfe1a24835436f1e9d9f2">reverse</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;std::reverse(this-&gt;begin(),this-&gt;end());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00306"/>00306 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00316"/>00316 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00317"/>00317 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00318"/>00318 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">consteval</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00323"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ab93743da3d764bb199f0d93b13247b73">00323</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ab93743da3d764bb199f0d93b13247b73">reg_digs_t</link>()
<anchor xml:id="_reg__digs__t_8hpp_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{regd_base_0()}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00325"/>00325 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00326"/>00326 private&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00334"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aad87f0f5f3bf9825b962e7288d527b96">00334</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aad87f0f5f3bf9825b962e7288d527b96">make_base_t</link>(<emphasis role="keyword">const</emphasis>&#32;std::initializer_list&lt;dig_t&gt;&amp;&#32;larg)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00335"/>00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(larg.size()&#32;&gt;=&#32;L)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itlist{larg.begin()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itcthis{rarg.begin()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;itcthisend{rarg.end()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(itcthis&#32;!=&#32;itcthisend)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00341"/>00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*itcthis&#32;=&#32;*itlist;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++itcthis;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++itlist;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itlist{larg.begin()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00348"/>00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;itcthis{rarg.begin()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;itlistend{larg.end()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;itcthisend{rarg.end()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(itcthis&#32;!=&#32;itlistend)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*itcthis&#32;=&#32;*itlist;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++itcthis;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++itlist;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(itcthis&#32;!=&#32;itcthisend)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*itcthis&#32;=&#32;dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++itcthis;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::reverse(rarg.begin(),rarg.end());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00364"/>00364 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00365"/>00365 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00369"/>00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00370"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af158dcd2b4c5d1cd725810f7b32a6377">00370</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af158dcd2b4c5d1cd725810f7b32a6377">reg_digs_t</link>(<emphasis role="keyword">const</emphasis>&#32;std::initializer_list&lt;dig_t&gt;&#32;&amp;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{make_base_t(arg)}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00372"/>00372 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(std::is_same_v&lt;Ts,dig_t&gt;&amp;&amp;...)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00379"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6d5930c7c0f8583b4000a60bd32aa00c">00379</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a6d5930c7c0f8583b4000a60bd32aa00c">reg_digs_t</link>(<emphasis role="keyword">const</emphasis>&#32;Ts&#32;&amp;...&#32;args)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{(<link linkend="_structutilities_1_1pack2array">utilities::pack2array</link>&lt;Ts...&gt;{})(args...)}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00381"/>00381 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00384"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5f1afe08bc99f4458f4406fbf8bc4388">00384</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a5f1afe08bc99f4458f4406fbf8bc4388">reg_digs_t</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&amp;&#32;rarg)&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{rarg}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00386"/>00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00387"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a667cc7f5b4658b2195c48e794f5c84a6">00387</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a667cc7f5b4658b2195c48e794f5c84a6">reg_digs_t</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&amp;&amp;&#32;rarg)&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{std::move(rarg)}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00388"/>00388 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00393"/>00393 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00394"/>00394 <emphasis role="keyword">private</emphasis>:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00395"/>00395 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00406"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ad633ab0410a555ecb68b212149995310">00406</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ad633ab0410a555ecb68b212149995310">copy_arg_N</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&amp;&#32;cthis{*(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>))};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;Z{std::min(N,L)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;W{std::max(N,L)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(Z==L)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00412"/>00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;Z&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=arg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(W==L)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;Z&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=arg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{Z}&#32;;&#32;ix&#32;&lt;&#32;W&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis=arg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00425"/>00425 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00435"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2ea6cd439fd6f88b32a780703794106c">00435</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2ea6cd439fd6f88b32a780703794106c">move_arg_N</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&amp;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&amp;&#32;cthis{<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;Z{std::min(N,L)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;W{std::max(N,L)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(Z==L)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;Z&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=std::move(arg[ix]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(W==L)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;Z&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=std::move(arg[ix]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{Z}&#32;;&#32;ix&#32;&lt;&#32;W&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=std::move(dig_0());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis=std::move(arg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00454"/>00454 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00455"/>00455 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00456"/>00456 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00463"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aaba6b4d99022c55a9b8ca3ce2d62a50c">00463</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aaba6b4d99022c55a9b8ca3ce2d62a50c">reg_digs_t</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&amp;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{copy_arg_N&lt;N&gt;(arg)}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00465"/>00465 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00472"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ad86b53a69638c4c1dddbcc396bd8c341">00472</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ad86b53a69638c4c1dddbcc396bd8c341">reg_digs_t</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;N&gt;</link>&#32;&amp;&amp;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;noexcept&#32;:&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>{move_arg_N&lt;N&gt;(std::move(arg))}&#32;{}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00474"/>00474 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00475"/>00475 public&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00476"/>00476 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ints_type&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((<emphasis role="keyword">sizeof</emphasis>...(Ints_type))&#32;==&#32;L)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00487"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912">00487</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912">normalize</link>(Ints_type&#32;...&#32;digits_pow_i)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>pack_type&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_structutilities_1_1pack2array">utilities::pack2array</link>&lt;Ints_type...&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>unique_type&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;pack_type::elem_type;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00495"/>00495 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00497"/>00497 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits">NumRepr::type_traits</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SUInt_type&#32;=
<anchor xml:id="_reg__digs__t_8hpp_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_unsigned_type_v&lt;UINT_T&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_unsigned_type_v&lt;unique_type&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gt_sz_v&lt;UINT_T,unique_type&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t&lt;unique_type&gt;</link>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gt_sz_v&lt;UINT_T,unique_type&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">sig_UInt_for_SInt_t&lt;unique_type&gt;</link>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00528"/>00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is_unsigned_type_v&lt;unique_type&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ge_sz_v&lt;UINT_T,unique_type&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00533"/>00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">sig_UInt_for_SInt_t&lt;sig_SInt_for_UInt_t&lt;UINT_T&gt;</link>&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00534"/>00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">sig_UInt_for_SInt_t&lt;sig_SInt_for_UInt_t&lt;unique_type&gt;</link>&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::conditional_t&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;gt_sz_v&lt;UINT_T,unique_type&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">sig_UInt_for_SInt_t&lt;sig_SInt_for_UInt_t&lt;UINT_T&gt;</link>&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a226e1d44325e03fdc352423b88728bbb">sig_UInt_for_SInt_t&lt;sig_SInt_for_SInt_t&lt;unique_type&gt;</link>&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;SUInt_type,L&gt;&#32;ret_array{((<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>(digits_pow_i))())...};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00545"/>00545 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{&#32;0&#32;};&#32;ix&#32;&lt;&#32;L;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>(ret_array[ix]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00548"/>00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00549"/>00549 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00550"/>00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00552"/>00552 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00553"/>00553 <emphasis role="keyword">public</emphasis>:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00554"/>00554 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00557"/>00557 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<link linkend="_concept_num_repr_1_1type__traits_1_1integral__c">type_traits::integral_c</link>&#32;...&#32;Ints_type&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((<emphasis role="keyword">sizeof</emphasis>...(Ints_type))==L)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00560"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a64366dbe24ccb2e35ba2c4a9c6f1f1f6">00560</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a64366dbe24ccb2e35ba2c4a9c6f1f1f6">reg_digs_t</link>(Ints_type&#32;...&#32;dig_pow_i)&#32;noexcept&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>(normalize&lt;Ints_type...&gt;((<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>(dig_pow_i))()...))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;reverse();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00564"/>00564 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00568"/>00568 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00573"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3556d4ba2e14f426e919f1cfcde675fe">00573</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;operator&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;N&gt;</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>!=&#32;&amp;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copy_arg_N&lt;N&gt;(arg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00577"/>00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00578"/>00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00579"/>00579 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00582"/>00582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00583"/>00583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00584"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ab18c370a730eae337ebe1e42e554bfb3">00584</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;operator&#32;=&#32;(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;N&gt;</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00585"/>00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00586"/>00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00587"/>00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;copy_arg_N&lt;N&gt;(arg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00588"/>00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00589"/>00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00590"/>00590 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00593"/>00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00594"/>00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00595"/><link linkend="_struct_num_repr_1_1reg__digs__t_1add6d93e2ffcc34e57e4698a627d2fd48">00595</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&amp;&#32;operator&#32;=&#32;(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;N&gt;</link>&amp;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00596"/>00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00597"/>00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<emphasis role="keyword">this</emphasis>&#32;!=&#32;&amp;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00598"/>00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;move_arg_N&lt;N&gt;(std::move(arg));
<anchor xml:id="_reg__digs__t_8hpp_source_1l00599"/>00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00601"/>00601 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00603"/>00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00604"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa424868f7b7f2da2b989b2eb96ed1ed1">00604</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;operator&#32;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&amp;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00605"/>00605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00606"/>00606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((&amp;(r_cthis(0)))!=(&amp;arg))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00607"/>00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().<link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00608"/>00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(0)&#32;=&#32;arg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00609"/>00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00610"/>00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00611"/>00611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00612"/>00612 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00615"/>00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_Type&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00616"/>00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00617"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ada84ccdb7769b08b7b91b1dae6452c09">00617</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;operator&#32;=&#32;(Int_Type&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00618"/>00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506">type_traits::maxbase</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00619"/>00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>&#32;B_128t_v{<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link><emphasis role="keyword">&gt;</emphasis>(B)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00620"/>00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;puede_multiplicarse{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00621"/>00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(maxbase&lt;sint128_t&gt;()/B_128t_v)&#32;&gt;&#32;0
<anchor xml:id="_reg__digs__t_8hpp_source_1l00622"/>00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00623"/>00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((&amp;(this-&gt;m_dc))&#32;!=&#32;(&amp;arg))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00624"/>00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>&#32;creg_g{<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link><emphasis role="keyword">&gt;</emphasis>(arg)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00625"/>00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a7673a3c7d88f28a54277d1d03bca2502">sint128_t</link>&#32;BasePowIx{B_128t_v};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00626"/>00626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;k{1u}&#32;;&#32;k&#32;&lt;&#32;L&#32;;&#32;++k)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00627"/>00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(puede_multiplicarse)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BasePowIx&#32;*=&#32;B_128t_v;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00630"/>00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(creg_g&#32;&lt;&#32;0)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00633"/>00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creg_g&#32;+=&#32;BasePowIx;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00634"/>00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00635"/>00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;k{0u}&#32;;&#32;k&#32;&lt;&#32;L&#32;;&#32;++k){
<anchor xml:id="_reg__digs__t_8hpp_source_1l00636"/>00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(k)&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>(creg_g%B_128t_v);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00637"/>00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;creg_g&#32;/=&#32;B_128t_v;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00638"/>00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00639"/>00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00640"/>00640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cr_cthis());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00641"/>00641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00642"/>00642 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00646"/>00646 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00647"/>00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">int</emphasis>egral_c&#32;Int_Type&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00649"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3ff2a749d367851189bc05a1687a0b22">00649</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">operator</emphasis>&#32;Int_Type()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00650"/>00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506">type_traits::maxbase</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00651"/>00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">uint64_t</link>&#32;retInt{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00652"/>00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">uint64_t</link>&#32;BasePowIx{1};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00653"/>00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;k{0}&#32;;&#32;k&#32;&lt;&#32;L&#32;;&#32;++k)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00654"/>00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retInt&#32;+=&#32;cr_cthis_at(k)*BasePowIx;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00655"/>00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;BasePowIx&#32;*=&#32;B;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00656"/>00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;&#32;&#32;&#32;&#32;(k+1&#32;&lt;&#32;L)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00657"/>00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00658"/>00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(maxbase&lt;Int_Type&gt;()&#32;&lt;&#32;(retInt+((cr_cthis_at(k+1)*BasePowIx)))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00659"/>00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00660"/>00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retInt;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00661"/>00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00662"/>00662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retInt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00663"/>00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00664"/>00664 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00665"/>00665 private&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00670"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a19a5a18b4db93320f0b9060aada7c146">00670</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>*&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a19a5a18b4db93320f0b9060aada7c146">data</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00671"/>00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(this-&gt;base_t::data());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00672"/>00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00673"/>00673 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00674"/>00674 public&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l00679"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5">00679</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>*&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5">data</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00680"/>00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>*<emphasis role="keyword">&gt;</emphasis>(this-&gt;base_t::data()));
<anchor xml:id="_reg__digs__t_8hpp_source_1l00681"/>00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00682"/>00682 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00683"/>00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00684"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a7838aa779ec4ee589ba738f92786f356">00684</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">decltype</emphasis>(<emphasis role="keyword">auto</emphasis>)&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a7838aa779ec4ee589ba738f92786f356">cpy_data</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00685"/>00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*(this-&gt;base_t::data()));
<anchor xml:id="_reg__digs__t_8hpp_source_1l00686"/>00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00687"/>00687 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00689"/>00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00690"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a81530d3849391d6dbc3c3a17fb486607">00690</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a81530d3849391d6dbc3c3a17fb486607">operator[]</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00691"/>00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cr_cthis_at(ix));
<anchor xml:id="_reg__digs__t_8hpp_source_1l00692"/>00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00693"/>00693 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00695"/>00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00696"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aaa8d34738ae18ebceb3399ca4df463b8">00696</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aaa8d34738ae18ebceb3399ca4df463b8">operator[]</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00697"/>00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(r_cthis_at(ix));
<anchor xml:id="_reg__digs__t_8hpp_source_1l00698"/>00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00699"/>00699 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00700"/>00700 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00708"/>00708 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00709"/>00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00710"/><link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">00710</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00711"/>00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(dig_0());&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00712"/>00712 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00713"/>00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00714"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350">00714</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350">set_1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00715"/>00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(dig_0());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00716"/>00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis()[0].set_1();&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00717"/>00717 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00718"/>00718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00719"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a635891fe476a0d485b6430eb003c66ff">00719</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a635891fe476a0d485b6430eb003c66ff">set_Bm1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00720"/>00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(dig_0());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00721"/>00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis()[0].set_Bm1();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00722"/>00722 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00723"/>00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00724"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a9736402ea76979c6f3b550b4e7f8a2f0">00724</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a9736402ea76979c6f3b550b4e7f8a2f0">set_dig</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;d)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00725"/>00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(d);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00726"/>00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis()[0]&#32;=&#32;d;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00727"/>00727 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00728"/>00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00729"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a02db587c3f90aadabbde0f92731f622d">00729</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a02db587c3f90aadabbde0f92731f622d">set_fill_dig</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;d)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00730"/>00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(d);&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00731"/>00731 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00732"/>00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00733"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a0d7f94d520c14a413858bb3fd2ebae9c">00733</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a0d7f94d520c14a413858bb3fd2ebae9c">set_fill_1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00734"/>00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(dig_1());&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00735"/>00735 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00736"/>00736 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00737"/>00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00738"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a8449e0efdd8a69da67e519ee2716c200">00738</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a8449e0efdd8a69da67e519ee2716c200">set_fill_Bm1</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00739"/>00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().fill(dig_Bm1());&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00740"/>00740 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00741"/>00741 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00751"/>00751 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00754"/>00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N_i,<emphasis role="keywordtype">size_t</emphasis>&#32;N_pf&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;i&#32;&#32;es&#32;inicio</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1lemphasis role="comment">//&#32;pf&#32;es&#32;pasado&#32;el&#32;final</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00756"/>00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((N_i&#32;&lt;&#32;N_pf)&amp;&amp;(N_pf&#32;&lt;=&#32;L))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00757"/>00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00758"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a00ff39c7cca1ca76bfb5c0dd8021841b">00758</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a00ff39c7cca1ca76bfb5c0dd8021841b">set_interval_0</link>()&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00759"/>00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{N_i}&#32;;&#32;ix&#32;&lt;&#32;N_pf&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00760"/>00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(ix).set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00761"/>00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00762"/>00762 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00765"/>00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;N_i,<emphasis role="keywordtype">size_t</emphasis>&#32;N_pf&gt;&#32;<emphasis role="comment">//&#32;i&#32;&#32;es&#32;inicio</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1lemphasis role="comment">//&#32;pf&#32;es&#32;pasado&#32;el&#32;final</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00767"/>00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((N_i&#32;&lt;&#32;N_pf)&amp;&amp;(N_pf&#32;&lt;=&#32;L))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00768"/>00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00769"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af61633115c32e8183d2f606ce5d815fd">00769</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1af61633115c32e8183d2f606ce5d815fd">set_interval_Bm1</link>()&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00770"/>00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{N_i}&#32;;&#32;ix&#32;&lt;&#32;N_pf&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00771"/>00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(ix).set_Bm1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00772"/>00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00773"/>00773 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00776"/>00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N_i,<emphasis role="keywordtype">size_t</emphasis>&#32;N_pf&gt;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;i&#32;&#32;es&#32;inicio</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1lemphasis role="comment">//&#32;pf&#32;es&#32;pasado&#32;el&#32;final</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00778"/>00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((N_i&#32;&lt;&#32;N_pf)&amp;&amp;(N_pf&#32;&lt;=&#32;L))
<anchor xml:id="_reg__digs__t_8hpp_source_1l00779"/>00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00780"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a538c70fae56df59c2ddbe0868f24cdaf">00780</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a538c70fae56df59c2ddbe0868f24cdaf">set_interval_dig</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;dig)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00781"/>00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{N_i}&#32;;&#32;ix&#32;&lt;&#32;N_pf&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00782"/>00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(ix)&#32;=&#32;dig;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00783"/>00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00784"/>00784 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00788"/>00788 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00789"/>00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00790"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d">00790</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d">is_0</link>()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00791"/>00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00792"/>00792 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;it{this-&gt;cbegin()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00793"/>00793 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;itend{this-&gt;cend()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00794"/>00794 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(it&#32;!=&#32;itend)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00795"/>00795 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(it-&gt;is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00796"/>00796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00797"/>00797 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++it;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00798"/>00798 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00799"/>00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00800"/>00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00801"/>00801 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00802"/>00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00803"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683">00803</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683">is_1</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00804"/>00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00805"/>00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00806"/>00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&lt;L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00807"/>00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00808"/>00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00809"/>00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00810"/>00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00811"/>00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00812"/>00812 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00813"/>00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00814"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5">00814</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5">is_Bm1</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00815"/>00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_Bm1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00816"/>00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00817"/>00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&lt;L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00818"/>00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00819"/>00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00820"/>00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00821"/>00821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00822"/>00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00823"/>00823 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00824"/>00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00825"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a4b713404cbac91d3d972d1b8595bdb40">00825</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4b713404cbac91d3d972d1b8595bdb40">is_B</link>()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00826"/>00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00827"/>00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L&#32;==&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00828"/>00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00829"/>00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00830"/>00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00831"/>00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(1).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00832"/>00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00833"/>00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{&#32;2&#32;};&#32;ix&#32;&lt;&#32;L;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00834"/>00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00835"/>00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00836"/>00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00837"/>00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00838"/>00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00839"/>00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00840"/>00840 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00841"/>00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00842"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a15cc6e417db19bb0483b3d81b31bf20d">00842</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a15cc6e417db19bb0483b3d81b31bf20d">is_Bp1</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00843"/>00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L&#32;==&#32;1)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00844"/>00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00845"/>00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00846"/>00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00847"/>00847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(1).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00848"/>00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00849"/>00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{&#32;2&#32;};&#32;ix&#32;&lt;&#32;L;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00850"/>00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00851"/>00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00852"/>00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00853"/>00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00854"/>00854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00855"/>00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00856"/>00856 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00857"/>00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;n&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00858"/>00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(n&lt;L)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00859"/>00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00860"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a435cc68f0dd8a90375404140fc9c8ff8">00860</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a435cc68f0dd8a90375404140fc9c8ff8">is_B_pow_m1</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;0)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cr_cthis().is_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;1)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cr_cthis().is_Bm1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l00867"/>00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00868"/>00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;2)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00869"/>00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(1).is_not_Bm1()&#32;||&#32;cr_cthis(0).is_not_Bm1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00870"/>00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00871"/>00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{2}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00872"/>00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00873"/>00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00874"/>00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00875"/>00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00876"/>00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00877"/>00877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00878"/>00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_Bm1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00879"/>00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00880"/>00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{n}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00881"/>00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00882"/>00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00883"/>00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00884"/>00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00885"/>00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00886"/>00886 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00887"/>00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;n&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00888"/>00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(n&lt;L-1)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00889"/>00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00890"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa9715a437357c3a2a1f79fc7477bb57a">00890</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aa9715a437357c3a2a1f79fc7477bb57a">is_B_pow</link>()&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00891"/>00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00892"/>00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;0)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00893"/>00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00894"/>00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00895"/>00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00896"/>00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00897"/>00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00898"/>00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00899"/>00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00900"/>00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;1)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00901"/>00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00902"/>00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00903"/>00903 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(1).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00904"/>00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00905"/>00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{2}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00906"/>00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00907"/>00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00908"/>00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00909"/>00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00910"/>00910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;2)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00911"/>00911 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(0).is_not_0()&#32;||&#32;cr_cthis(1).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00912"/>00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00913"/>00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(2).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00914"/>00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00915"/>00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{3}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00916"/>00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00917"/>00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00918"/>00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00919"/>00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00920"/>00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00921"/>00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00922"/>00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00923"/>00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00924"/>00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(n).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00925"/>00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00926"/>00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{n+1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00927"/>00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00928"/>00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00929"/>00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00930"/>00930 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00931"/>00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00932"/>00932 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00933"/>00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00934"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2cc4d03f17f00015a43125e0f5018ef2">00934</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2cc4d03f17f00015a43125e0f5018ef2">is_any_B_pow</link>()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l00935"/>00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00936"/>00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;pred_not_0&#32;=&#32;[](<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;d){<emphasis role="keywordflow">return</emphasis>&#32;(d.is_not_0());};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00937"/>00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&#32;it{std::find_if(cr_cthis().cbegin(),cr_cthis().cend(),pred_not_0)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00938"/>00938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(it&#32;!=&#32;cr_cthis().cend())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00939"/>00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;card{std::count_if(cr_cthis().cbegin(),cr_cthis().cend(),pred_not_0)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l00940"/>00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(card&#32;!=&#32;1)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00941"/>00941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00942"/>00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00943"/>00943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(it-&gt;is_0());
<anchor xml:id="_reg__digs__t_8hpp_source_1l00944"/>00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00945"/>00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00946"/>00946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00947"/>00947 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00948"/>00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00949"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a8f7a8ee6879194fd027b67e20f578474">00949</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a8f7a8ee6879194fd027b67e20f578474">is_filled_of_1</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00950"/>00950 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00951"/>00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix).is_not_1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00952"/>00952 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00953"/>00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00954"/>00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00955"/>00955 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00956"/>00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00957"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ae0ead5a6439ee2a2a9f56dc29353ef60">00957</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ae0ead5a6439ee2a2a9f56dc29353ef60">is_filled_of_Bm1</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00958"/>00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00959"/>00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis_at(ix).is_not_Bm1())
<anchor xml:id="_reg__digs__t_8hpp_source_1l00960"/>00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00961"/>00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00962"/>00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00963"/>00963 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00964"/>00964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00965"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a3a7c58a84c5be2458373bc6083a4e3e9">00965</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a3a7c58a84c5be2458373bc6083a4e3e9">is_filled_of</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;d)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00966"/>00966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00967"/>00967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis(ix)&#32;!=&#32;d)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00968"/>00968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00969"/>00969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00970"/>00970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00971"/>00971 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00981"/>00981 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00983"/>00983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00984"/><link linkend="_struct_num_repr_1_1reg__digs__t_1acd5dfd683e4fee83f7561568f809a2ba">00984</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1acd5dfd683e4fee83f7561568f809a2ba">cat</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00985"/>00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>{arg});&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l00986"/>00986 
<anchor xml:id="_reg__digs__t_8hpp_source_1l00988"/>00988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00989"/>00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l00990"/>00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;L+M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00991"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aeaaa5fc1d830756bffaf882156b86896">00991</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeaaa5fc1d830756bffaf882156b86896">cat</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;larg,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00992"/>00992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l00993"/>00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t&lt;L+M&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l00994"/>00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00995"/>00995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;larg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l00996"/>00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{L}&#32;;&#32;ix&#32;&lt;&#32;M&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l00997"/>00997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;rarg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l00998"/>00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l00999"/>00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01000"/>01000 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01002"/>01002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01003"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a8e8c64cba0341a3ad057053b346e42bd">01003</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;L+1&gt;</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a8e8c64cba0341a3ad057053b346e42bd">cat</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;larg,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01004"/>01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01005"/>01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;L+1&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01006"/>01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01007"/>01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;larg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01008"/>01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[L]&#32;=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01009"/>01009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01010"/>01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01011"/>01011 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01013"/>01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01014"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a1cdda4f3f9f0ef5c4668901fb0e40b33">01014</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;1+L&gt;</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a1cdda4f3f9f0ef5c4668901fb0e40b33">cat</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;larg,<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01015"/>01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01016"/>01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;1+L&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01017"/>01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;larg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01018"/>01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L+1&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01019"/>01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;rarg[ix-1];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01020"/>01020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01021"/>01021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01022"/>01022 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01024"/>01024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01025"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8">01025</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;1&gt;</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8">cat</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;larg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01026"/>01026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;1&gt;</link>{larg});&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01027"/>01027 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01029"/>01029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01030"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649">01030</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;2&gt;</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649">cat</link>(<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;larg,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;rarg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01031"/>01031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;2&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01032"/>01032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;larg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01033"/>01033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01034"/>01034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01035"/>01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01036"/>01036 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01039"/>01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T0,<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01040"/>01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01041"/>01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((std::is_same_v&lt;Ts,dig_t&gt;)&amp;&amp;...)&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01042"/>01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(std::is_same_v&lt;T0,dig_t&gt;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01043"/>01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01044"/>01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01045"/>01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;1+(<emphasis role="keyword">sizeof</emphasis>&#32;...&#32;(Ts))&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01046"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa542abd7039bf3f0a9c62200a7b944d8">01046</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aa542abd7039bf3f0a9c62200a7b944d8">cat</link>(T0&#32;dig0,Ts&#32;...&#32;dig_pack)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01047"/>01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cat(dig_0,dig_pack...);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01048"/>01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01049"/>01049 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01052"/>01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01053"/>01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01054"/>01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((std::is_same_v&lt;Ts,dig_t&gt;)&amp;&amp;...)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01055"/>01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(std::is_same_v&lt;T,dig_t&gt;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01056"/>01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01057"/>01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01058"/>01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;L+1+(<emphasis role="keyword">sizeof</emphasis>&#32;...&#32;(Ts))&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01059"/><link linkend="_struct_num_repr_1_1reg__digs__t_1adb0296af7bc31546157ad06a67573a22">01059</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1adb0296af7bc31546157ad06a67573a22">cat</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;larg,T&#32;dig,Ts&#32;...&#32;dig_pack)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01060"/>01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cat(larg,cat(dig,dig_pack...));
<anchor xml:id="_reg__digs__t_8hpp_source_1l01061"/>01061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01062"/>01062 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01065"/>01065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01066"/>01066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01067"/>01067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((std::is_same_v&lt;Ts,dig_t&gt;)&amp;&amp;...)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01068"/>01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(std::is_same_v&lt;T,dig_t&gt;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01069"/>01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01070"/>01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01071"/>01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;L+1+(<emphasis role="keyword">sizeof</emphasis>&#32;...&#32;(Ts))&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01072"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ae9ba2cc837d955061093bb0da463e2e6">01072</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ae9ba2cc837d955061093bb0da463e2e6">cat</link>(T&#32;dig,Ts&#32;...&#32;dig_pack,<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01073"/>01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01074"/>01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cat(cat(dig,dig_pack...),rarg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01075"/>01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01076"/>01076 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01081"/>01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;...&#32;N_pack&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01082"/>01082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01083"/>01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01084"/>01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;N+(...+(N_pack))&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01085"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a217ae996ddbff03f35fb3e7c6b24c1dd">01085</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a217ae996ddbff03f35fb3e7c6b24c1dd">cat</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;N&gt;</link>&#32;larg,<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;N_pack&gt;</link>&#32;...&#32;rarg_pack)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01086"/>01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01087"/>01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cat(larg,rarg_pack...);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01088"/>01088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01089"/>01089 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01091"/>01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;ibegin,<emphasis role="keywordtype">size_t</emphasis>&#32;iend&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01092"/>01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((iend&#32;&lt;=&#32;L)&amp;&amp;(ibegin&#32;&lt;&#32;L)&amp;&amp;(ibegin&#32;!=&#32;iend))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01093"/>01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01094"/>01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;(ibegin&#32;&lt;&#32;iend)?(iend-ibegin):(ibegin-iend)&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01095"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa50d8abff6aa4a71c41fcb31c0441eb2">01095</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;subregister()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01096"/>01096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*this};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01097"/>01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(ibegin&#32;&lt;&#32;iend)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01098"/>01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t</link>&lt;iend-ibegin&gt;&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01099"/>01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{ibegin}&#32;;&#32;ix&#32;&lt;&#32;iend&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01100"/>01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix-ibegin]&#32;=&#32;cthis[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01101"/>01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01102"/>01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01103"/>01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01104"/>01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01105"/>01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;reg_N_digs_t&lt;iend-ibegin&gt;&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01106"/>01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;ix{iend}&#32;;&#32;ix&#32;&gt;&#32;ibegin-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01107"/>01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix-ibegin]&#32;=&#32;cthis[L-1-ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01108"/>01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01109"/>01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01110"/>01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01111"/>01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01112"/>01112 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01117"/>01117 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01118"/>01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01119"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a">01119</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a">mC_Bm1</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01120"/>01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01121"/>01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(ix).<link linkend="_struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a">mC_Bm1</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01122"/>01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01123"/>01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cr_cthis());
<anchor xml:id="_reg__digs__t_8hpp_source_1l01124"/>01124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01125"/>01125 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01126"/>01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01127"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb">01127</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb">mC_B</link>()&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01128"/>01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis().<link linkend="_struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a">mC_Bm1</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01129"/>01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01130"/>01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(r_cthis(ix).is_not_Bm1())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01131"/>01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++r_cthis(ix);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01132"/>01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cr_cthis());
<anchor xml:id="_reg__digs__t_8hpp_source_1l01133"/>01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01134"/>01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01135"/>01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;r_cthis(ix).set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01136"/>01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01137"/>01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01138"/>01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cr_cthis());
<anchor xml:id="_reg__digs__t_8hpp_source_1l01139"/>01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01140"/>01140 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01141"/>01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01142"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2">01142</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2">C_Bm1</link>()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l01143"/>01143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(cp_cthis().mC_Bm1());&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01144"/>01144 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01145"/>01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01146"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c">01146</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c">C_B</link>()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l01147"/>01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::move(cp_cthis().mC_B());&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01148"/>01148 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01152"/>01152 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01153"/>01153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01154"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a05a97a435bf59c5442be92c071176aac">01154</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;operator&#32;!()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l01155"/>01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;C_Bm1();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01156"/>01156 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01157"/>01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01158"/><link linkend="_struct_num_repr_1_1reg__digs__t_1addfe409a19fc9017ac89b2516f4a6a8a">01158</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;operator&#32;-()&#32;const&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l01159"/>01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;C_B();&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01160"/>01160 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01161"/>01161 public&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l01163"/>01163 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01168"/>01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01169"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a844edc62cc648266e8e9073666b00a87">01169</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8">operator &lt;&lt; </link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01170"/>01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{L-1-n}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01171"/>01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cp_cthis(ix+n)&#32;&#32;=&#32;cr_cthis(ix);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01172"/>01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01173"/>01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01174"/>01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cp_cthis(ix+n)&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01175"/>01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01176"/>01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cp_cthis());
<anchor xml:id="_reg__digs__t_8hpp_source_1l01177"/>01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01178"/>01178 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01180"/>01180 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01181"/>01181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01182"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a9847e4f64cf1507ee623d67775eba2df">01182</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1aa578c0c4c9f69c8a6949ae841ab20a14">operator &lt;&lt;= </link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01183"/>01183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01184"/>01184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{L-1-n}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01185"/>01185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix+n]&#32;&#32;&#32;&#32;&#32;=&#32;cthis[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01186"/>01186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01187"/>01187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01188"/>01188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01189"/>01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01190"/>01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01191"/>01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01192"/>01192 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01193"/>01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01194"/><link linkend="_struct_num_repr_1_1reg__digs__t_1acda9e6eea4d49b7f6fbbf9c3bec9f7cd">01194</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1a9da1c60e9a0710e6940735e5aa6471e2">operator &gt;&gt;= </link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01195"/>01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01196"/>01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;Ls&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link><emphasis role="keyword">&gt;</emphasis>(L);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01197"/>01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;ns&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link><emphasis role="keyword">&gt;</emphasis>(n);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01198"/>01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;Ls-ns&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01199"/>01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;cthis[ix+n];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01200"/>01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01201"/>01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;ix{Ls-ns}&#32;;&#32;ix&#32;&lt;&#32;Ls&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01202"/>01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01203"/>01203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01204"/>01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01205"/>01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01206"/>01206 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01207"/>01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01208"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a91c247827ae9c2c539b5d7089a9fe884">01208</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac">operator &gt;&gt; </link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01209"/>01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;ret{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01210"/>01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&gt;&gt;=&#32;n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01211"/>01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01212"/>01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01213"/>01213 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01214"/>01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01215"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c289fab138512b65681d3c6fa1df2cc">01215</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c289fab138512b65681d3c6fa1df2cc">rem_B</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01216"/>01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;ret{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01217"/>01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&lt;&lt;=&#32;L-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01218"/>01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01219"/>01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01220"/>01220 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01221"/>01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01222"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5826bd193c62e736efdbe0fdd81cb653">01222</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a5826bd193c62e736efdbe0fdd81cb653">m_rem_B</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01223"/>01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01224"/>01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;&lt;&lt;=&#32;L-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01225"/>01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01226"/>01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01227"/>01227 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01228"/>01228 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01229"/>01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01230"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a9f01e4cb3e143f6a26bd251919afe9d8">01230</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a9f01e4cb3e143f6a26bd251919afe9d8">mer_B</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01231"/>01231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;ret{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01232"/>01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&gt;&gt;=&#32;L-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01233"/>01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01234"/>01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01235"/>01235 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01236"/>01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01237"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a717ff4a829077dbe06174feaa92a22d7">01237</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a717ff4a829077dbe06174feaa92a22d7">m_mer_B</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;n)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01238"/>01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01239"/>01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;&gt;&gt;=&#32;L-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01240"/>01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01241"/>01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01242"/>01242 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01243"/>01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01244"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a1b446da3b8751e1c8af8839e1a59b1c5">01244</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1af300f03bc135c81afa3965c905feda49">operator |= </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>&#32;&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01245"/>01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01246"/>01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01247"/>01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]&#32;|=&#32;rarg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01248"/>01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01249"/>01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01250"/>01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01251"/>01251 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01252"/>01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01253"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a88399df8a3b2e9f6fa413f5ba8c4147a">01253</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_namespace_num_repr_1a688d5f9678ad6dca21557cc629c46c8e">operator | </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01254"/>01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;ret{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01255"/>01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;|=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01256"/>01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01257"/>01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01258"/>01258 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01259"/>01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01260"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aebcb3bf7aaf1baa65bd97aeec1e777df">01260</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;<link linkend="_namespace_num_repr_1a0a2d2cfc3bfc462709ba6cc17b5cd0d4">operator &amp;= </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;rarg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01261"/>01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01262"/>01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01263"/>01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]&#32;&amp;=&#32;rarg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01264"/>01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01265"/>01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(cthis);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01266"/>01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01267"/>01267 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01268"/>01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01269"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a20034464834ae81a063a9c8fa4224f45">01269</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;<link linkend="_namespace_num_repr_1a342a2a8c42d37ee5900c73815b5f289b">operator &amp; </link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;rarg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01270"/>01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;ret{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01271"/>01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&amp;=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01272"/>01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01273"/>01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01274"/>01274 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01279"/>01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01280"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">01280</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">index_of_MSDig</link>()&#32;const&#32;noexcept&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01281"/>01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;ix{L-1}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01282"/>01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cr_cthis_at(ix).is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01283"/>01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ix;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01284"/>01284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01285"/>01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(-1);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01286"/>01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01287"/>01287 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01293"/>01293 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01295"/>01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01296"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a72a186fd0231cb5140dc75466e628688">01296</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01297"/>01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01298"/>01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[0]&#32;!=&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01299"/>01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01300"/>01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01301"/>01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01302"/>01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01303"/>01303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01304"/>01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01305"/>01305 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01306"/>01306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01307"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ad76a2aa47907fd2f3ec19035c0a926a6">01307</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;!=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01308"/>01308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01309"/>01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01310"/>01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01311"/>01311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01312"/>01312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[0]&#32;!=&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01313"/>01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01314"/>01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01315"/>01315 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01316"/>01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01317"/>01317 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01318"/>01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01319"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a5ecc41aa76ee4b40c1f7480177d701f4">01319</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&gt;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01320"/>01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01321"/>01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01322"/>01322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01323"/>01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01324"/>01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[0]&#32;&gt;&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01325"/>01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01326"/>01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01327"/>01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01328"/>01328 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01329"/>01329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01330"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a84b45a6bb497fbda0a83ac5b58c8a1a6">01330</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&lt;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01331"/>01331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01332"/>01332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01333"/>01333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01334"/>01334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01335"/>01335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[0]&#32;&gt;=&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01336"/>01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01337"/>01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01338"/>01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01339"/>01339 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01340"/>01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01341"/><link linkend="_struct_num_repr_1_1reg__digs__t_1ae9a2c8fbb6a3aa1ed25aee8950b0b10f">01341</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&gt;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01342"/>01342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01343"/>01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01344"/>01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01345"/>01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01346"/>01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[0]&#32;&gt;=&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01347"/>01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01348"/>01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01349"/>01349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01350"/>01350 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01351"/>01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01352"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a871e547fbf592d7bf26f82fd019a3e65">01352</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&lt;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01353"/>01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01354"/>01354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;L&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01355"/>01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01356"/>01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01357"/>01357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[0]&#32;&gt;&#32;rarg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01358"/>01358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01359"/>01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01360"/>01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01361"/>01361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01362"/>01362 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01366"/>01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01367"/>01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01368"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2d1a40f341324f56e566b838fe888264">01368</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;==&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01369"/>01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01370"/>01370 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01371"/>01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;P{std::min(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01372"/>01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;Q{std::max(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01373"/>01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;L_gt_M{L&gt;M};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01374"/>01374 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01375"/>01375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L!=M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01376"/>01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{P}&#32;;&#32;ix&#32;&lt;&#32;Q&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01377"/>01377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L_gt_M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01378"/>01378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01379"/>01379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01380"/>01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01381"/>01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01382"/>01382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rarg[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01383"/>01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01384"/>01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01385"/>01385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01386"/>01386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01387"/>01387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;P&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01388"/>01388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix]&#32;!=&#32;rarg[ix])
<anchor xml:id="_reg__digs__t_8hpp_source_1l01389"/>01389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01390"/>01390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01391"/>01391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01392"/>01392 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01393"/>01393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01394"/>01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01395"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a369c8486faffc16e8bc798dbce25b101">01395</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;!=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01396"/>01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01397"/>01397 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01398"/>01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;P{std::min(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01399"/>01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;Q{std::max(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01400"/>01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;L_gt_M{L&gt;M};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01401"/>01401 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01402"/>01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L!=M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01403"/>01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{P}&#32;;&#32;ix&#32;&lt;&#32;Q&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01404"/>01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L_gt_M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01405"/>01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01406"/>01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01407"/>01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01408"/>01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01409"/>01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rarg[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01410"/>01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01411"/>01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01412"/>01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01413"/>01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01414"/>01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;P&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01415"/>01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix]&#32;!=&#32;rarg[ix])
<anchor xml:id="_reg__digs__t_8hpp_source_1l01416"/>01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01417"/>01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01418"/>01418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01419"/>01419 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01420"/>01420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01421"/>01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01422"/><link linkend="_struct_num_repr_1_1reg__digs__t_1af6e5280e0fbfa4b07d1a6651cbafa515">01422</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&gt;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01423"/>01423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01424"/>01424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;P{std::min(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01425"/>01425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;Q{std::max(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01426"/>01426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;L_gt_M{L&gt;M};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01427"/>01427 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01428"/>01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L&#32;!=&#32;M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01429"/>01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{P}&#32;;&#32;ix&#32;&lt;&#32;Q&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01430"/>01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L&gt;M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01431"/>01431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01432"/>01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01433"/>01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01434"/>01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01435"/>01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rarg[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01436"/>01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01437"/>01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01438"/>01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01439"/>01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01440"/>01440 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01441"/>01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{L}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01442"/>01442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix]&#32;&gt;&#32;rarg[ix])
<anchor xml:id="_reg__digs__t_8hpp_source_1l01443"/>01443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01444"/>01444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01445"/>01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01446"/>01446 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01447"/>01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01448"/>01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01449"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a37b9758878b51f5ed9ebbebc14b41c9c">01449</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&lt;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01450"/>01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01451"/>01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;P{std::min(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01452"/>01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;Q{std::max(L,M)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01453"/>01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;L_gt_M{L&gt;M};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01454"/>01454 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01455"/>01455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L&#32;!=&#32;M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01456"/>01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{P}&#32;;&#32;ix&#32;&lt;&#32;Q&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01457"/>01457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(L_gt_M)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01458"/>01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01459"/>01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01460"/>01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01461"/>01461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01462"/>01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rarg[ix].is_not_0())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01463"/>01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01464"/>01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01465"/>01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01466"/>01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01467"/>01467 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01468"/>01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{L}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01469"/>01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[ix]&#32;&lt;&#32;rarg[ix])
<anchor xml:id="_reg__digs__t_8hpp_source_1l01470"/>01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01471"/>01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01472"/>01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01473"/>01473 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01474"/>01474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01475"/>01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01476"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a869c348238795f848214949bad8445b0">01476</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&gt;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01477"/>01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01478"/>01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(!(cthis&#32;&lt;&#32;rarg));&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01479"/>01479 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01480"/>01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01481"/>01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01482"/><link linkend="_struct_num_repr_1_1reg__digs__t_1aa68aa5a93f69fcb7a191fec77bb27332">01482</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;operator&#32;&lt;=&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01483"/>01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01484"/>01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(!(cthis&#32;&gt;&#32;rarg));&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01485"/>01485 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01487"/>01487 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01488"/>01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01489"/>01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01490"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a0f39118683e41ccec4e43fc0c3a94f7f">01490</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::strong_ordering&#32;operator&#32;&lt;=&gt;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_N_digs_t&lt;M&gt;</link>&amp;&#32;arg)&#32;<emphasis role="keyword">const</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01491"/>01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01492"/>01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01493"/>01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis&#32;==&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01494"/>01494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::strong_ordering::equal;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01495"/>01495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis&#32;&lt;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01496"/>01496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::strong_ordering::less;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01497"/>01497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01498"/>01498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::strong_ordering::greater;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01499"/>01499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01500"/>01500 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01502"/>01502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01503"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a1598611c9a2c97185a0c0719ed7309de">01503</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::weak_ordering&#32;operator&#32;&lt;=&gt;&#32;(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&#32;&amp;&#32;arg)&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01504"/>01504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01505"/>01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;cthis{*<emphasis role="keyword">this</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01506"/>01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis&#32;&gt;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01507"/>01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::weak_ordering::greater;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01508"/>01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis&#32;&lt;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01509"/>01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::weak_ordering::less;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01510"/>01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01511"/>01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::weak_ordering::equivalent;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01512"/>01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01515"/>01515 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01516"/>01516 &#32;&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01517"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a9328818c1dfd9433ac98d72cdfa8aba5">01517</link> &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a9328818c1dfd9433ac98d72cdfa8aba5">is_type_template_string_id</link>(std::string&#32;in)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01518"/>01518 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01519"/>01519 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_digs_t&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01520"/>01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_digs_&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01521"/>01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_digs&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01522"/>01522 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_dig&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01523"/>01523 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_di&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01524"/>01524 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_d&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01525"/>01525 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg_&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01526"/>01526 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;reg&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01527"/>01527 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;re&quot;</emphasis>)||
<anchor xml:id="_reg__digs__t_8hpp_source_1l01528"/>01528 &#32;&#32;&#32;&#32;&#32;&#32;(in&#32;==&#32;<emphasis role="stringliteral">&quot;r&quot;</emphasis>)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01529"/>01529 &#32;&#32;&#32;&#32;);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01530"/>01530 &#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01531"/>01531 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01532"/>01532 &#32;&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01533"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a7d907a0fc450d27d7937370a2209aed6">01533</link> &#32;&#32;std::string&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a7d907a0fc450d27d7937370a2209aed6">to_type_template_string_id</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l01534"/>01534 &#32;&#32;{&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::string{<emphasis role="stringliteral">&quot;reg_digs&quot;</emphasis>};&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01535"/>01535 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01536"/>01536 &#32;&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01537"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a2ff36f133f6bcf9cd379e54be025a214">01537</link> &#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a2ff36f133f6bcf9cd379e54be025a214">size_of_type_template_string_id</link>()&#32;noexcept
<anchor xml:id="_reg__digs__t_8hpp_source_1l01538"/>01538 &#32;&#32;{&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(to_type_template_string_id()).size();&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01539"/>01539 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01540"/>01540 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01543"/>01543 &#32;&#32;<emphasis role="keyword">static</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01544"/><link linkend="_struct_num_repr_1_1reg__digs__t_1a011d4b57bf296a0e08fff4385eca0e08">01544</link> &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t_1a011d4b57bf296a0e08fff4385eca0e08">get_type_template_string_id_token</link>(std::istream&amp;&#32;is)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01545"/>01545 &#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01546"/>01546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;input_char&#32;=&#32;type_traits::nullchar&lt;char&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01547"/>01547 &#32;&#32;&#32;&#32;std::string&#32;old_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01548"/>01548 &#32;&#32;&#32;&#32;std::string&#32;new_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01549"/>01549 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01550"/>01550 &#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01551"/>01551 &#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01552"/>01552 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_type_template_string_id(new_input_string))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01553"/>01553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01554"/>01554 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01555"/>01555 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01556"/>01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01557"/>01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;to_type_template_string_id()
<anchor xml:id="_reg__digs__t_8hpp_source_1l01558"/>01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01559"/>01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01560"/>01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01561"/>01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string
<anchor xml:id="_reg__digs__t_8hpp_source_1l01562"/>01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01563"/>01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01564"/>01564 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01565"/>01565 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01566"/>01566 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(new_input_string==to_type_template_string_id())
<anchor xml:id="_reg__digs__t_8hpp_source_1l01567"/>01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01568"/>01568 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01569"/>01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01570"/>01570 &#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01571"/>01571 &#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01572"/>01572 };
<anchor xml:id="_reg__digs__t_8hpp_source_1l01573"/>01573 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01575"/>01575 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>128_t&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;L&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01576"/><link linkend="_namespace_num_repr_1a162b6953f603031db66e18e2b8240bc2">01576</link> <emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t">register_of_digits_t</link>&#32;=
<anchor xml:id="_reg__digs__t_8hpp_source_1l01577"/>01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01578"/>01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t&lt;B&gt;</link>,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01579"/>01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">type_traits::TypeFromIntNumber_t&lt;B&gt;</link><emphasis role="keyword">&gt;</emphasis>(B),
<anchor xml:id="_reg__digs__t_8hpp_source_1l01580"/>01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L
<anchor xml:id="_reg__digs__t_8hpp_source_1l01581"/>01581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01582"/>01582 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01590"/>01590 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01592"/>01592 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,&#32;UInt_t&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01593"/>01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&gt;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01594"/>01594 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01595"/><link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">01595</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>&amp;&#32;larg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01596"/>01596 {
<anchor xml:id="_reg__digs__t_8hpp_source_1l01597"/>01597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01598"/>01598 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01599"/>01599 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01601"/>01601 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,&#32;UInt_t&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01602"/>01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((N&gt;0)&amp;&amp;(M&gt;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01603"/>01603 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01604"/><link linkend="_namespace_num_repr_1a164d8860f3a0813504ee30c88c7bcab0">01604</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N+M&gt;</link>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01605"/>01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01606"/>01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,M&gt;</link>&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01607"/>01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01608"/>01608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N+M&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01609"/>01609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01610"/>01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;larg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01611"/>01611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{N}&#32;;&#32;ix&#32;&lt;&#32;M&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01612"/>01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;rarg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01613"/>01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01614"/>01614 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01615"/>01615 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01617"/>01617 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,&#32;UInt_t&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01618"/>01618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&#32;&gt;&#32;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01619"/>01619 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01620"/><link linkend="_namespace_num_repr_1afb9644c35a4bfb14155cb38894940e10">01620</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N+1&gt;</link>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01621"/>01621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01622"/>01622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UInt_t,B&gt;</link>&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01623"/>01623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01624"/>01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N+1&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01625"/>01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01626"/>01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;larg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01627"/>01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[N]&#32;=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01628"/>01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01629"/>01629 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01630"/>01630 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01632"/>01632 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,&#32;UInt_t&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01633"/>01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(M&#32;&gt;&#32;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01634"/>01634 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01635"/><link linkend="_namespace_num_repr_1a991ca8bb9c18feb0b5e776550b7ad703">01635</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,1+M&gt;</link>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01636"/>01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UInt_t,B&gt;</link>&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01637"/>01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,M&gt;</link>&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01638"/>01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01639"/>01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,1+M&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01640"/>01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;larg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01641"/>01641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{1}&#32;;&#32;ix&#32;&lt;&#32;M+1&#32;;&#32;++ix)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01642"/>01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[ix]&#32;=&#32;rarg[ix-1];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01643"/>01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01644"/>01644 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01645"/>01645 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01647"/>01647 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,&#32;UInt_t&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01648"/>01648 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01649"/><link linkend="_namespace_num_repr_1a90dce0ccc34796d52120a70c0abe2fb3">01649</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,1&gt;</link>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UInt_t,B&gt;</link>&#32;larg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01650"/>01650 {&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,1&gt;</link>{larg};&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01651"/>01651 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01653"/>01653 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,&#32;UInt_t&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01654"/>01654 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01655"/><link linkend="_namespace_num_repr_1a064a18e22bc1be2b2a8b4bd9b8bfcafb">01655</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,2&gt;</link>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UInt_t,B&gt;</link>&#32;larg,<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UInt_t,B&gt;</link>&#32;rarg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01656"/>01656 {&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,2&gt;</link>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01657"/>01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;larg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01658"/>01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01659"/>01659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01660"/>01660 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01664"/>01664 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,UInt_t&#32;B,<emphasis role="keyword">typename</emphasis>&#32;T0,<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01665"/>01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01666"/>01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((std::is_same_v&lt;Ts,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;...)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01667"/>01667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01668"/>01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(std::is_same_v&lt;T0,dig_t&lt;UInt_t,B&gt;&gt;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01669"/>01669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01670"/>01670 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01671"/><link linkend="_namespace_num_repr_1ad235de59c6fb0e337d7d1974999b7c90">01671</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UInt_t,B,1+(<emphasis role="keyword">sizeof</emphasis>&#32;...&#32;(Ts))&gt;&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(T0&#32;dig0,Ts&#32;...&#32;dig_pack)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01672"/>01672 <emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01673"/>01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(dig0,dig_pack...);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01674"/>01674 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01675"/>01675 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01679"/>01679 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,UInt_t&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01680"/>01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(((std::is_same_v&lt;Ts,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;(N&gt;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01681"/>01681 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01682"/><link linkend="_namespace_num_repr_1a0706a8207d9326e70eb68286a809eac0">01682</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UInt_t,B,N+1+(<emphasis role="keyword">sizeof</emphasis>&#32;...&#32;(Ts))&gt;&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01683"/>01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01684"/>01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;dig,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01685"/>01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Ts&#32;...&#32;dig_pack
<anchor xml:id="_reg__digs__t_8hpp_source_1l01686"/>01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(larg,<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(dig,dig_pack...));&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01687"/>01687 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01691"/>01691 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,UInt_t&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;M,<emphasis role="keyword">typename</emphasis>&#32;T,<emphasis role="keyword">typename</emphasis>&#32;...&#32;Ts&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01692"/>01692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01693"/>01693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((std::is_same_v&lt;Ts,dig_t&lt;UInt_t,B&gt;&gt;)&amp;&amp;...)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01694"/>01694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01695"/>01695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(std::is_same_v&lt;T,dig_t&lt;UInt_t,B&gt;&gt;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01696"/>01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01697"/>01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(M&gt;0)&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01698"/>01698 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01699"/><link linkend="_namespace_num_repr_1a4725158490aa07256f8ba8b9bb7179e4">01699</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UInt_t,B,M+1+(<emphasis role="keyword">sizeof</emphasis>&#32;...&#32;(Ts))&gt;&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01700"/>01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;T&#32;dig,
<anchor xml:id="_reg__digs__t_8hpp_source_1ls&#32;...&#32;dig_pack,
<anchor xml:id="_reg__digs__t_8hpp_source_1llink linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,M&gt;</link>&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01703"/>01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01704"/>01704 <emphasis role="keyword">noexcept</emphasis>&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(dig,dig_pack...),rarg);&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01705"/>01705 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01709"/>01709 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UInt_t,UInt_t&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;...&#32;N_pack&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01710"/>01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01711"/>01711 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01712"/>01712 <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UInt_t,B,N+(...+(N_pack))&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01713"/><link linkend="_namespace_num_repr_1af76d4c574256a8ae2913dd960c035d9a">01713</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N&gt;</link>&#32;larg,<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UInt_t,B,N_pack&gt;</link>&#32;...&#32;rarg_pack)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01714"/>01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1a6f762ec285d399a1aba905239740d424">concat</link>(larg,rarg_pack...);&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01715"/>01715 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01716"/>01716 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01717"/>01717 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01718"/><link linkend="_namespace_num_repr_1a3e02d589f6de47a7861f7d11e76d4d73">01718</link> <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01719"/>01719 <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<emphasis role="keyword">operator</emphasis>&#32;&lt;&lt;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01720"/>01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01721"/>01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n
<anchor xml:id="_reg__digs__t_8hpp_source_1l01722"/>01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01723"/>01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;cparg{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01724"/>01724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::int32_t&#32;ix{N-1-n}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01725"/>01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg[ix+n]&#32;&#32;&#32;&#32;&#32;=&#32;larg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01726"/>01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01727"/>01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::int32_t&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01728"/>01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;::dig_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01729"/>01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01730"/>01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01731"/>01731 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01732"/>01732 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01733"/>01733 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01734"/>01734 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01735"/>01735 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01736"/><link linkend="_namespace_num_repr_1aa578c0c4c9f69c8a6949ae841ab20a14">01736</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;&lt;&lt;=&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01737"/>01737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01738"/>01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n
<anchor xml:id="_reg__digs__t_8hpp_source_1l01739"/>01739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01740"/>01740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::int32_t&#32;ix{N-1-n}&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01741"/>01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg[ix+n]&#32;&#32;&#32;&#32;&#32;&#32;=&#32;larg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01742"/>01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01743"/>01743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::int32_t&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01744"/>01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;::dig_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01745"/>01745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01746"/>01746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(larg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01747"/>01747 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01748"/>01748 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01749"/>01749 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01750"/>01750 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01751"/>01751 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01752"/><link linkend="_namespace_num_repr_1a9da1c60e9a0710e6940735e5aa6471e2">01752</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;&gt;&gt;=&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01753"/>01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01754"/>01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n
<anchor xml:id="_reg__digs__t_8hpp_source_1l01755"/>01755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01756"/>01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::int32_t&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;N-n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01757"/>01757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;larg[ix+n];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01758"/>01758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01759"/>01759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::int32_t&#32;ix{N-n}&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01760"/>01760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg[ix]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;::dig_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01761"/>01761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01762"/>01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(larg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01763"/>01763 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01764"/>01764 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01765"/>01765 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01766"/>01766 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01767"/>01767 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01768"/><link linkend="_namespace_num_repr_1a02cf5374fb604e0ac92479795f57be45">01768</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<emphasis role="keyword">operator</emphasis>&#32;&gt;&gt;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01769"/>01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01770"/>01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n
<anchor xml:id="_reg__digs__t_8hpp_source_1l01771"/>01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01772"/>01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>{larg}.ref_data()&#32;&gt;&gt;=&#32;n);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01773"/>01773 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01774"/>01774 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01775"/>01775 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01776"/>01776 <emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01777"/>01777 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01778"/><link linkend="_namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee">01778</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<link linkend="_namespace_num_repr_1aabd0c98823a42f27c17a1392d05111ee">rem_B</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,<emphasis role="keywordtype">size_t</emphasis>&#32;n)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01779"/>01779 <emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01780"/>01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;ret{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01781"/>01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&lt;&lt;=&#32;N-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01782"/>01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01783"/>01783 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01784"/>01784 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01785"/>01785 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01786"/>01786 <emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01787"/>01787 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01788"/><link linkend="_namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad">01788</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1a76d56b1ce8fdf8fe9f2dad696d0793ad">m_rem_B</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;larg,<emphasis role="keywordtype">size_t</emphasis>&#32;n)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01789"/>01789 <emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01790"/>01790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg&#32;&lt;&lt;=&#32;N-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01791"/>01791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(larg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01792"/>01792 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01793"/>01793 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01794"/>01794 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01795"/>01795 <emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01796"/>01796 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01797"/><link linkend="_namespace_num_repr_1a791ee564df192b445483d0088d163710">01797</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<link linkend="_namespace_num_repr_1a791ee564df192b445483d0088d163710">mer_B</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,<emphasis role="keywordtype">size_t</emphasis>&#32;n)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01798"/>01798 <emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01799"/>01799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;ret{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01800"/>01800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&gt;&gt;=&#32;N-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01801"/>01801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01802"/>01802 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01803"/>01803 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01804"/>01804 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01805"/>01805 <emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01806"/>01806 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01807"/><link linkend="_namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb">01807</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1a24e1622d28f1fc5b86dac826d719cccb">m_mer_B</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;larg,<emphasis role="keywordtype">size_t</emphasis>&#32;n)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01808"/>01808 <emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01809"/>01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg&#32;&gt;&gt;=&#32;N-n;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01810"/>01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(larg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01811"/>01811 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01812"/>01812 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01813"/>01813 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01814"/>01814 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01815"/>01815 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01816"/><link linkend="_namespace_num_repr_1af300f03bc135c81afa3965c905feda49">01816</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;|=&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01817"/>01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01818"/>01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01819"/>01819 )&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01820"/>01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01821"/>01821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg[ix]&#32;|=&#32;rarg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01822"/>01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01823"/>01823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(larg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01824"/>01824 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01825"/>01825 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01826"/>01826 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01827"/>01827 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01828"/>01828 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01829"/><link linkend="_namespace_num_repr_1a688d5f9678ad6dca21557cc629c46c8e">01829</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<emphasis role="keyword">operator</emphasis>&#32;|&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01830"/>01830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01831"/>01831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01832"/>01832 )&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01833"/>01833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;ret{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01834"/>01834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;|=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01835"/>01835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01836"/>01836 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01837"/>01837 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01838"/>01838 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01839"/>01839 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01840"/>01840 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01841"/><link linkend="_namespace_num_repr_1a0a2d2cfc3bfc462709ba6cc17b5cd0d4">01841</link> <emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;<emphasis role="keyword">operator</emphasis>&#32;&amp;=&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01842"/>01842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01843"/>01843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01844"/>01844 )&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01845"/>01845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01846"/>01846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;larg[ix]&#32;&amp;=&#32;rarg[ix];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01847"/>01847 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01848"/>01848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(larg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01849"/>01849 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01850"/>01850 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01851"/>01851 <emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>_type_for_radix_c&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01852"/>01852 &#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((suitable_base&lt;UINT_T,B&gt;())&amp;&amp;(N&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l01853"/>01853 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01854"/><link linkend="_namespace_num_repr_1a342a2a8c42d37ee5900c73815b5f289b">01854</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<emphasis role="keyword">operator</emphasis>&#32;&amp;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01855"/>01855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01856"/>01856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01857"/>01857 )&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01858"/>01858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;ret{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01859"/>01859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;&amp;=&#32;rarg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01860"/>01860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(ret);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01861"/>01861 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01863"/>01863 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01864"/>01864 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01865"/><link linkend="_namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254">01865</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<link linkend="_namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254">m_incr</link>(<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;rarg)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01866"/>01866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//using&#32;SIG_UINT_T&#32;=&#32;typename&#32;type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01867"/>01867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01868"/>01868 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01869"/>01869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;carry{dig_t::dig_0()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01870"/>01870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=0&#32;;&#32;i&#32;&lt;&#32;N&#32;;&#32;++i)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01871"/>01871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(i==0)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01872"/>01872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rarg[0].is_Bm1())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01873"/>01873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rarg[0].<link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01874"/>01874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry.set_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01875"/>01875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01876"/>01876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01877"/>01877 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++rarg[0];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01878"/>01878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry.<link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01879"/>01879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01880"/>01880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01881"/>01881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01882"/>01882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01883"/>01883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry.is_not_0())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01884"/>01884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rarg[i].is_Bm1())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01885"/>01885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rarg[i].<link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01886"/>01886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry.set_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01887"/>01887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01888"/>01888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01889"/>01889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++rarg[i];
<anchor xml:id="_reg__digs__t_8hpp_source_1l01890"/>01890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry.<link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01891"/>01891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01892"/>01892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01893"/>01893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01894"/>01894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01895"/>01895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry.set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01896"/>01896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01897"/>01897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01898"/>01898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01899"/>01899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01900"/>01900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(rarg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01901"/>01901 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01902"/>01902 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01903"/>01903 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01904"/>01904 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01905"/>01905 <link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01906"/><link linkend="_namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6">01906</link> <link linkend="_namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6">m_sum_digs_carryin1</link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>&amp;&#32;left,<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>&#32;right)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01907"/>01907 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01908"/>01908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01909"/>01909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;d_0&#32;=&#32;dig_t::dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01910"/>01910 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;d_1&#32;=&#32;dig_t::dig_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01911"/>01911 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01912"/>01912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;left_CBm1{left.<link linkend="_struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960">C_Bm1</link>()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01913"/>01913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(left.is_Bm1())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01914"/>01914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;=&#32;right;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01915"/>01915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d_1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01916"/>01916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01917"/>01917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(right.is_Bm1())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01918"/>01918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d_1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01919"/>01919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01920"/>01920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(left_CBm1&#32;&lt;&#32;right+d_1)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01921"/>01921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;=&#32;right-left_CBm1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01922"/>01922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d_1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01923"/>01923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01924"/>01924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01925"/>01925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;+=&#32;right;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01926"/>01926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++left;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01927"/>01927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d_0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01928"/>01928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01929"/>01929 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01930"/>01930 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01931"/>01931 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01932"/>01932 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01933"/>01933 <link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01934"/><link linkend="_namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0">01934</link> <link linkend="_namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0">m_sum_digs_carryin0</link>(<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>&amp;&#32;left,<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>&#32;right)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01935"/>01935 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01936"/>01936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01937"/>01937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;d_0&#32;=&#32;dig_t::dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01938"/>01938 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;d_1&#32;=&#32;dig_t::dig_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01939"/>01939 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01940"/>01940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;left_CBm1{left.<link linkend="_struct_num_repr_1_1dig__t_1a3d6a5c0e1d8a4719d58a476cfb68c960">C_Bm1</link>()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01941"/>01941 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(left_CBm1&#32;&gt;=&#32;right){
<anchor xml:id="_reg__digs__t_8hpp_source_1l01942"/>01942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;+=&#32;right;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01943"/>01943 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d_0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01944"/>01944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01945"/>01945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01946"/>01946 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;left&#32;=&#32;right-left_CBm1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01947"/>01947 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--left;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01948"/>01948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;d_1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01949"/>01949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01950"/>01950 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01951"/>01951 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01952"/>01952 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01953"/>01953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01954"/>01954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01955"/><link linkend="_namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3">01955</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a259867ff7627eb58b940d354ed1f87e3">m_sum</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l01956"/>01956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l01957"/>01957 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l01958"/>01958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01959"/>01959 {
<anchor xml:id="_reg__digs__t_8hpp_source_1l01960"/>01960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01961"/>01961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;d_0&#32;=&#32;dig_t::dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l01962"/>01962 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01963"/>01963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;carry{d_0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01964"/>01964 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=0&#32;;&#32;i&#32;&lt;&#32;N&#32;;&#32;++i)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01965"/>01965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;left_CBm1{larg[i].<link linkend="_struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2">C_Bm1</link>()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01966"/>01966 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry.is_0())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01967"/>01967 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry&#32;=&#32;<link linkend="_namespace_num_repr_1ad08658a7e95e0914597309c1243ea7f0">m_sum_digs_carryin0</link>(larg[i],rarg[i]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01968"/>01968 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01969"/>01969 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01970"/>01970 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry&#32;=&#32;<link linkend="_namespace_num_repr_1a7a96dff18dd75c2309445fcf46a84be6">m_sum_digs_carryin1</link>(larg[i],rarg[i]);
<anchor xml:id="_reg__digs__t_8hpp_source_1l01971"/>01971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01972"/>01972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01973"/>01973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;carry;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01974"/>01974 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l01975"/>01975 
<anchor xml:id="_reg__digs__t_8hpp_source_1l01978"/>01978 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,&#32;UINT_T&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01979"/>01979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&gt;1)
<anchor xml:id="_reg__digs__t_8hpp_source_1l01980"/>01980 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01981"/><link linkend="_namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7">01981</link> <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<link linkend="_namespace_num_repr_1a59c4987f35abcca7f49e248841dbdda7">aprox_units_divB</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l01983"/>01983 {
<anchor xml:id="_reg__digs__t_8hpp_source_1l01988"/>01988 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01989"/>01989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;cparg{arg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l01990"/>01990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cparg&#32;&gt;&gt;&#32;1).is_0())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01991"/>01991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01992"/>01992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01993"/>01993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cparg[0]&lt;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>{B/2})||(cparg.is_any_B_pow()))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01994"/>01994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01995"/>01995 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01996"/>01996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l01997"/>01997 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cparg[N-1].is_not_Bm1())&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l01998"/>01998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l01999"/>01999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254">m_incr</link>(cparg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02000"/>02000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02001"/>02001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02002"/>02002 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02003"/>02003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;temp&#32;=&#32;arg.template&#32;subregister&lt;1,N&gt;();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02004"/>02004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(temp.is_filled_of_Bm1()){
<anchor xml:id="_reg__digs__t_8hpp_source_1l02006"/>02006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg.set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02007"/>02007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg[N-1].set_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02008"/>02008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02009"/>02009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02010"/>02010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02012"/>02012 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;&gt;&gt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02013"/>02013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a47075bda02da4f0bcb6a4d3fd0f5b254">m_incr</link>(cparg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02014"/>02014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02015"/>02015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02016"/>02016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02017"/>02017 }&#32;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02019"/>02019 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02021"/><link linkend="_namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08">02021</link> <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,&#32;UINT_T&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;n&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02022"/>02022 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;((n&#32;&gt;&#32;0)&#32;&amp;&amp;&#32;(n&#32;&lt;&#32;N)&#32;&amp;&amp;&#32;(N&#32;&gt;&#32;1))&#32;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02023"/>02023 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02024"/>02024 <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;<link linkend="_namespace_num_repr_1ae65c8d3561b59553ca3379f80f42af08">aprox_units_divB_n</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;arg)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02025"/>02025 {
<anchor xml:id="_reg__digs__t_8hpp_source_1l02026"/>02026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;(n&#32;==&#32;N-1){
<anchor xml:id="_reg__digs__t_8hpp_source_1l02027"/>02027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_units_divB&lt;UINT_T,B,N&gt;(arg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02028"/>02028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02029"/>02029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02030"/>02030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;cparg{arg};&#32;<emphasis role="comment">//&#32;n&#32;=&#32;N-x&#32;=&gt;&#32;x&#32;=&#32;N-n</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02031"/>02031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;ix{0}&#32;;&#32;ix&#32;&lt;&#32;N-n&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02032"/>02032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cparg&#32;=&#32;aprox_units_divB&lt;UINT_T,B,N&gt;(cparg);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02033"/>02033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02034"/>02034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cparg;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02035"/>02035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02036"/>02036 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l02037"/>02037 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02040"/>02040 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,&#32;UINT_T&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02041"/>02041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&#32;&gt;&#32;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02042"/>02042 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02046"/>02046 std::array&lt;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>,2&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02047"/>02047 aprox_coc_rem(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02048"/>02048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;rem,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02049"/>02049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;dsor
<anchor xml:id="_reg__digs__t_8hpp_source_1l02050"/>02050 )&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02051"/>02051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG_UINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02052"/>02052 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02053"/>02053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;SIG_UINT_T,2&gt;&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02054"/>02054 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02055"/>02055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;dsor_msb{<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(dsor.<link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">index_of_MSDig</link>())};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02056"/>02056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;rem_uint&#32;{SIG_UINT_T(rem)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02057"/>02057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;dsor_uint&#32;{dsor[dsor_msb]()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02058"/>02058 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02059"/>02059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG_UINT_T&#32;coc_calculado&#32;=&#32;rem_uint&#32;/&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02060"/>02060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG_UINT_T&#32;rem_calculado&#32;=&#32;rem_uint&#32;%&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02061"/>02061 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02062"/>02062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dsor_msb==0)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02064"/>02064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;SIG_UINT_T&#32;rem_uint&#32;{SIG_UINT_T(rem)};</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02065"/>02065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;SIG_UINT_T&#32;dsor_uint&#32;{dsor[0]()};</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02066"/>02066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SIG_UINT_T&#32;coc_calculado&#32;=&#32;rem_uint&#32;/&#32;dsor_uint;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02067"/>02067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//SIG_UINT_T&#32;rem_calculado&#32;=&#32;rem_uint&#32;%&#32;dsor_uint;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02068"/>02068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;rem_aprox&#32;{SIG_UINT_T(dsor)*coc_calculado+rem_calculado};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02069"/>02069 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02070"/>02070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;rem_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02071"/>02071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02072"/>02072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02073"/>02073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02074"/>02074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02077"/>02077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;dsor_red{dsor};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02078"/>02078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1aa5fa2b87168e073c709bcbb23cb33988">uint64_t</link>&#32;ix{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02079"/>02079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02080"/>02080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsor_red&#32;=&#32;aprox_units_divB&lt;UINT_T,B,N&gt;(dsor_red);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02081"/>02081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dsor_red.template&#32;index_of_MSDig&lt;UINT_T,B,N&gt;()&#32;==&#32;1)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02082"/>02082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02083"/>02083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02084"/>02084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;rem_red{<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02085"/>02085 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02086"/>02086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;iy{ix}&#32;;&#32;iy&#32;&gt;&#32;-1&#32;;&#32;--iy)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02087"/>02087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_red&#32;=&#32;aprox_units_divB&lt;UINT_T,B,N&gt;(rem_red);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02088"/>02088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02089"/>02089 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02090"/>02090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;dsor_uint&#32;{SIG_UINT_T(dsor_red)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02091"/>02091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;rem_uint&#32;{SIG_UINT_T(rem_red)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02092"/>02092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;rem_aprox&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02093"/>02093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsor*<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>{coc_calculado}+<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>{rem_calculado}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02094"/>02094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02095"/>02095 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02096"/>02096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((rem_aprox&#32;&lt;=&#32;rem)&amp;&amp;(rem_aprox&#32;+&#32;dsor&#32;&gt;&#32;rem))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02098"/>02098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;rem_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02099"/>02099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02100"/>02100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02101"/>02101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02102"/>02102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rem_aprox&#32;&gt;&#32;rem)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02104"/>02104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02105"/>02105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_calculado&#32;+=&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02106"/>02106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_coc_rem&lt;UINT_T,B,N&gt;(rem,dsor,coc_calculado,rem_calculado);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02107"/>02107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02108"/>02108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02110"/>02110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02111"/>02111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_calculado&#32;-=&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02112"/>02112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_coc_rem&lt;UINT_T,B,N&gt;(rem,dsor,coc_calculado,rem_calculado);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02113"/>02113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02114"/>02114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02115"/>02115 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l02116"/>02116 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02119"/>02119 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,&#32;UINT_T&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;N&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02120"/>02120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&#32;&gt;&#32;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02121"/>02121 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02125"/>02125 std::array&lt;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>,2&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02126"/>02126 <link linkend="_namespace_num_repr_1a42cc99f9e1a6096b619df7c44eb7b33e">aprox_coc_rem</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02127"/>02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;rem&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02128"/>02128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&amp;&#32;dsor&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02129"/>02129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>&#32;coc_calculado&#32;&#32;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02130"/>02130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>&#32;rem_calculado
<anchor xml:id="_reg__digs__t_8hpp_source_1l02131"/>02131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02132"/>02132 {&#32;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02134"/>02134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG_UINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02135"/>02135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;SIG_UINT_T,2&gt;&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02136"/>02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;dsor_msb{<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(dsor.<link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">index_of_MSDig</link>())};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02137"/>02137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dsor_msb==0)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02139"/>02139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;rem_aprox&#32;{SIG_UINT_T(dsor)*coc_calculado+rem_calculado};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02140"/>02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;rem_uint&#32;{SIG_UINT_T(rem)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02141"/>02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;dsor_uint&#32;{dsor[0]()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02142"/>02142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((rem_aprox&#32;&lt;=&#32;rem_uint)&amp;&amp;(rem_aprox&#32;+&#32;dsor_uint&#32;&gt;&#32;rem_uint))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02144"/>02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;rem_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02145"/>02145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02146"/>02146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02147"/>02147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02148"/>02148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rem_aprox&#32;&gt;&#32;rem)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02150"/>02150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02151"/>02151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_calculado&#32;+=&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02152"/>02152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_coc_rem&lt;UINT_T,B,N&gt;(rem,dsor,coc_calculado,rem_calculado);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02153"/>02153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02154"/>02154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02156"/>02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02157"/>02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_calculado&#32;-=&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02158"/>02158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_coc_rem&lt;UINT_T,B,N&gt;(rem,dsor,coc_calculado,rem_calculado);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02159"/>02159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02161"/>02161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02162"/>02162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02165"/>02165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;dsor_red{dsor};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02166"/>02166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02167"/>02167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;ix&#32;&lt;&#32;N&#32;;&#32;++ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02168"/>02168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dsor_red&#32;=&#32;aprox_units_divB&lt;UINT_T,B,N&gt;(dsor_red);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02169"/>02169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dsor_red.template&#32;index_of_MSDig&lt;UINT_T,B,N&gt;()&#32;==&#32;1)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02170"/>02170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02171"/>02171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02172"/>02172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;rem_red{<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02173"/>02173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;;&#32;ix&#32;&gt;&#32;-1&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02174"/>02174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_red&#32;=&#32;aprox_units_divB&lt;UINT_T,B,N&gt;(rem_red);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02175"/>02175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02176"/>02176 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02177"/>02177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;dsor_uint&#32;{SIG_UINT_T(dsor_red)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02178"/>02178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;SIG_UINT_T&#32;rem_uint&#32;{SIG_UINT_T(rem_red)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02179"/>02179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;rem_aprox&#32;{dsor*<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>{coc_calculado}+<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>{rem_calculado}};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02180"/>02180 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02181"/>02181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((rem_aprox&#32;&lt;=&#32;rem)&amp;&amp;(rem_aprox&#32;+&#32;dsor&#32;&gt;&#32;rem))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02183"/>02183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;rem_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02184"/>02184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02185"/>02185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02186"/>02186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02187"/>02187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rem_aprox&#32;&gt;&#32;rem)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02189"/>02189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02190"/>02190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_calculado&#32;+=&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02191"/>02191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_coc_rem&lt;UINT_T,B,N&gt;(rem,dsor,coc_calculado,rem_calculado);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02192"/>02192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02193"/>02193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02195"/>02195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++coc_calculado;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02196"/>02196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem_calculado&#32;-=&#32;dsor_uint;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02197"/>02197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;aprox_coc_rem&lt;UINT_T,B,N&gt;(rem,dsor,coc_calculado,rem_calculado);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02198"/>02198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02199"/>02199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02200"/>02200 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l02202"/>02202 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02204"/>02204 <emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;UINT_T,UINT_T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;N,<emphasis role="keywordtype">size_t</emphasis>&#32;M&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02205"/><link linkend="_namespace_num_repr_1a1924720464e58ae5372de9b39a45d496">02205</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(N&#32;&gt;&#32;0)&amp;&amp;(M&#32;&gt;&#32;0)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02206"/>02206 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keyword">inline</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02207"/>02207 std::array&lt;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UINT_T,B,std::max(N,M)&gt;,2&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02208"/>02208 <link linkend="_namespace_num_repr_1a1924720464e58ae5372de9b39a45d496">fediv</link>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02209"/>02209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,N&gt;</link>&#32;&amp;&#32;larg,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02210"/>02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,M&gt;</link>&#32;&amp;&#32;rarg
<anchor xml:id="_reg__digs__t_8hpp_source_1l02211"/>02211 )&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02212"/>02212 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02213"/>02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;MaxParam&#32;=&#32;std::max(N,M);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02214"/>02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>base_t&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;UINT_T,B,MaxParam&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02215"/>02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>SIG_UINT_T&#32;=&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02216"/>02216 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02217"/>02217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>ret_type&#32;=&#32;std::array&lt;base_t,2&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02218"/>02218 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02219"/>02219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_t&#32;dndo{larg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02220"/>02220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_t&#32;dsor{rarg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02221"/>02221 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02222"/>02222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;dsor_MSDig{larg.<link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">index_of_MSDig</link>()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02224"/>02224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;dndo_MSDig{rarg.<link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">index_of_MSDig</link>()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02226"/>02226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;dist_dndo_dsor{std::abs(dndo_MSDig-dndo_MSDig)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02227"/>02227 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02228"/>02228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_t&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>{base_t::regd_0()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02229"/>02229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;base_t&#32;coc{base_t::regd_0()};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02230"/>02230 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02231"/>02231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_0(dsor))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02232"/>02232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret_type&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02233"/>02233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;std::move(coc);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02234"/>02234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;std::move(<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02235"/>02235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02236"/>02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02237"/>02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(is_1(dsor))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02238"/>02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret_type&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02239"/>02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;dndo;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02240"/>02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1].set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02241"/>02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02242"/>02242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02243"/>02243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dndo&#32;&lt;&#32;dsor)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02244"/>02244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret_type&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02245"/>02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0].set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02246"/>02246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;dndo;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02247"/>02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02248"/>02248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02249"/>02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dndo&#32;==&#32;dsor)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02250"/>02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret_type&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02251"/>02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0].set_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02252"/>02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1].set_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02253"/>02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02254"/>02254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02255"/>02255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02256"/>02256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;pl_dndo{dndo_MSDig-dsor_MSDig+1};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02257"/>02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link>&#32;ix{dsor_MSDig},iy{dndo_MSDig}&#32;;&#32;ix&gt;-1&#32;;&#32;--ix,--iy)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02258"/>02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>[ix]&#32;=&#32;dndo[iy];
<anchor xml:id="_reg__digs__t_8hpp_source_1l02259"/>02259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02260"/>02260 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02261"/>02261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;numloops{0}&#32;;&#32;numloops&lt;dist_dndo_dsor&#32;;&#32;++numloops)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02262"/>02262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02263"/>02263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;==&#32;dsor)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02264"/>02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;&lt;&lt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02265"/>02265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc[0]&#32;=&#32;base_t::dig_1();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02266"/>02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;base_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02267"/>02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--pl_dndo;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02268"/>02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>[0]&#32;=&#32;dndo[pl_dndo];
<anchor xml:id="_reg__digs__t_8hpp_source_1l02269"/>02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02270"/>02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;&lt;&#32;dsor)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02271"/>02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;&lt;&lt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02272"/>02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc[0]&#32;=&#32;base_t::dig_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02273"/>02273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;&lt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02274"/>02274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--pl_dndo;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02275"/>02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>[0]&#32;=&#32;dndo[pl_dndo];
<anchor xml:id="_reg__digs__t_8hpp_source_1l02276"/>02276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02280"/>02280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02281"/>02281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;ret{aprox_coc_rem&lt;N&gt;(<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>,dsor)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02282"/>02282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG_UINT_T&#32;coc_dig{ret[0]};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02283"/>02283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;SIG_UINT_T&#32;rem_dig{ret[1]};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02284"/>02284 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02285"/>02285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;&lt;&lt;=&#32;1;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;coc&#32;=&#32;coc&#32;*&#32;B</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02286"/>02286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc[0]&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(coc_dig);&#32;<emphasis role="comment">//&#32;coc&#32;=&#32;coc&#32;+&#32;D&#32;&#32;;&#32;B-1&#32;&gt;=&#32;D&#32;&gt;&#32;1</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02287"/>02287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;--pl_dndo;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02288"/>02288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;&lt;&lt;=&#32;1;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02289"/>02289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>[0]&#32;=&#32;dndo[pl_dndo];
<anchor xml:id="_reg__digs__t_8hpp_source_1l02290"/>02290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02291"/>02291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02292"/>02292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::array&lt;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UINT_T,B,std::max(N,M)&gt;,2&gt;&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02293"/>02293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=&#32;coc;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02294"/>02294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02295"/>02295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02296"/>02296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02297"/>02297 }
<anchor xml:id="_reg__digs__t_8hpp_source_1l02298"/><link linkend="_namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad">02298</link> 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02300"/>02300 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;UINT_T,UINT_T&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02301"/>02301 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad">get_digit_token</link>(std::istream&amp;&#32;is,<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>&amp;&#32;dig_value)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02302"/>02302 &#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02303"/>02303 &#32;&#32;&#32;&#32;std::string&#32;old_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02304"/>02304 &#32;&#32;&#32;&#32;std::string&#32;new_input_string{<emphasis role="stringliteral">&quot;&quot;</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02305"/>02305 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;index{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02306"/>02306 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;input_char&#32;=&#32;type_traits::nullchar&lt;char&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02307"/>02307 &#32;&#32;&#32;&#32;UINT_T&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02308"/>02308 &#32;&#32;&#32;&#32;dig_value&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;::dig_0</link>();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02309"/>02309 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02310"/>02310 &#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;input_char;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02311"/>02311 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index==0)&amp;&amp;(lex::is_separator(input_char)))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02312"/>02312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02313"/>02313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02314"/>02314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02315"/>02315 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02316"/>02316 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((index&#32;==&#32;0)&amp;&amp;(!&#32;lex::is_separator(input_char)))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02317"/>02317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02318"/>02318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;escribir&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;#&apos;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02319"/>02319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02320"/>02320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Considera&#32;que&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02321"/>02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;old_input_string
<anchor xml:id="_reg__digs__t_8hpp_source_1l02322"/>02322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;y&#32;continua&#32;escribiendo&#32;a&#32;partir&#32;de&#32;ahi&quot;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02323"/>02323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;=&#32;old_input_string;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02324"/>02324 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02325"/>02325 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;=1)&#32;&amp;&amp;&#32;lex::is_digit(input_char))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02326"/>02326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lex::digit_value(input_char)&#32;&lt;&#32;B)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02327"/>02327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;new_input_string&#32;+=&#32;input_char;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02328"/>02328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;*=&#32;B;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02329"/>02329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;+=&#32;lex::digit_value(input_char);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02330"/>02330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(uint_value&#32;&lt;&#32;B)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02331"/>02331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;new_input_string;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02332"/>02332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig_value&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;UINT_T,B&gt;</link>(uint_value);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02333"/>02333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++index;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02334"/>02334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02335"/>02335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02336"/>02336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;old_input_string&#32;=&#32;<emphasis role="stringliteral">&quot;#&quot;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02337"/>02337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02338"/>02338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;poner&#32;un&#32;valor&#32;menor&#32;que&#32;la&#32;base&#32;y&#32;has&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02339"/>02339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;puesto&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;uint_value&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;escrito&#32;como&#32;\&quot;&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02340"/>02340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02341"/>02341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02342"/>02342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02343"/>02343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02344"/>02344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02345"/>02345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;=1)&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02346"/>02346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;!&#32;lex::is_digit(input_char)&#32;&amp;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02347"/>02347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(input_char&#32;!=&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02348"/>02348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02349"/>02349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;El&#32;caracter&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02350"/>02350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;input_char
<anchor xml:id="_reg__digs__t_8hpp_source_1l02351"/>02351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;no&#32;es&#32;valido&#32;aqui&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02352"/>02352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02353"/>02353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02354"/>02354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02355"/>02355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02356"/>02356 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02357"/>02357 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((index&gt;1)&amp;&amp;(input_char&#32;==&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02358"/>02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02359"/>02359 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02360"/>02360 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02361"/>02361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Has&#32;cometido&#32;un&#32;error,&#32;tenias&#32;que&#32;escribir&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02362"/>02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;#digdigdig..._&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02363"/>02363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;\&quot;&#32;&#32;y&#32;has&#32;escrito&#32;&quot;</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02364"/>02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;new_input_string&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02365"/>02365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;uint_value&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02366"/>02366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02367"/>02367 &#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02368"/>02368 &#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02369"/>02369 &#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02370"/><link linkend="_namespace_num_repr_1a4a43d171097231b9c153662a4d96d170">02370</link> 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02372"/>02372 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;T,T&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02373"/>02373 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespace_num_repr_1a4a43d171097231b9c153662a4d96d170">get_radix_token</link>(std::istream&amp;&#32;is)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02374"/>02374 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;T,B&gt;::get_radix_token</link>(is);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02375"/><link linkend="_namespace_num_repr_1a6fdae534a76a017d02140a70aa7dc8a3">02375</link> &#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02376"/>02376 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02377"/>02377 &#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;T,T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;L&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02378"/>02378 &#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;get_digit_loop_token&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02379"/>02379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::istream&amp;&#32;is,<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;T,B,L&gt;</link>&amp;&#32;value
<anchor xml:id="_reg__digs__t_8hpp_source_1l02380"/>02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02381"/>02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;idx{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02382"/>02382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(<emphasis role="keyword">true</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02383"/>02383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(idx&#32;&lt;&#32;L)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02384"/>02384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1a85361eaf407fae0ec70f013c1eec25ad">get_digit_token</link>(is,value[idx]))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02385"/>02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++idx;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02386"/>02386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02387"/>02387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02388"/>02388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(;idx&#32;&lt;&#32;L;++idx)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02389"/>02389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value[idx]&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02390"/>02390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02391"/>02391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;error&#32;consiguiendo&#32;el&#32;digito&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;idx
<anchor xml:id="_reg__digs__t_8hpp_source_1l02392"/>02392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02393"/>02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cerr&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;digitos&#32;a&#32;0&#32;a&#32;partir&#32;del&#32;indice&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;idx
<anchor xml:id="_reg__digs__t_8hpp_source_1l02394"/>02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02395"/>02395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02396"/>02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02397"/>02397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02398"/>02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(idx&#32;&gt;=&#32;L)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02399"/>02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02400"/>02400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02401"/><link linkend="_namespace_num_repr_1a1cdc1a9d45497ce154566f6f15abdc32">02401</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02402"/>02402 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02403"/>02403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;type_traits::<emphasis role="keywordtype">unsigned</emphasis>_<emphasis role="keywordtype">int</emphasis>egral_c&#32;T,T&#32;B,<emphasis role="keywordtype">size_t</emphasis>&#32;L&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02404"/>02404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;read&#32;(std::istream&amp;&#32;is,<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;T,B,L&gt;</link>&amp;&#32;value)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02405"/>02405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">noexcept</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02406"/>02406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cerr</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02407"/>02407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;T,B,L&gt;</link>&#32;default_value{};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02408"/>02408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;type_token&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;T,B,L&gt;::get_type_template_string_id_token</link>(is);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02409"/>02409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(type_token)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02410"/>02410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_namespace_num_repr_1a6fdae534a76a017d02140a70aa7dc8a3">get_digit_loop_token</link>(is,value))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02411"/>02411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;T,B&gt;::get_radix_token</link>(is))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02412"/>02412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02413"/>02413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02414"/>02414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02415"/>02415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;default_value;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02416"/>02416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02417"/>02417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02418"/>02418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02419"/>02419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02420"/>02420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;default_value;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02421"/>02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02422"/>02422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02423"/>02423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02424"/>02424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;value&#32;=&#32;default_value;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02425"/>02425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02426"/>02426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02427"/>02427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02428"/>02428 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02431"/>02431 &#32;&#32;<emphasis role="keyword">using&#32;namespace&#32;</emphasis>type_traits;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02432"/>02432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>128_t&#32;B&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02433"/>02433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">digit_t</link>&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02434"/><link linkend="_namespace_num_repr_1adee56f6cb05bebc237af032f75d2c03b">02434</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;</link>(B)&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02435"/>02435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;</link>(B)<emphasis role="keyword">&gt;</emphasis>&gt;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link><emphasis role="keyword">&gt;</emphasis>(B))
<anchor xml:id="_reg__digs__t_8hpp_source_1l02436"/>02436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02437"/>02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;u<emphasis role="keywordtype">int</emphasis>128_t&#32;B,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;L&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02438"/>02438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t">register_digs_t</link>&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02439"/>02439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;</link>(B)&gt;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02440"/>02440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1_1type__traits_1a4bda2ea1083d135a865f451a7968fe7b">TypeFromIntNumber_t&lt;static_cast&lt;uint128_t&gt;</link>(B)<emphasis role="keyword">&gt;</emphasis>&gt;(<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_namespace_num_repr_1a412296ccfc8e357e166ab1365f2777f3">uint128_t</link><emphasis role="keyword">&gt;</emphasis>(B)),
<anchor xml:id="_reg__digs__t_8hpp_source_1l02441"/>02441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;L
<anchor xml:id="_reg__digs__t_8hpp_source_1l02442"/>02442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02443"/>02443 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02445"/>02445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Int_Type,Int_Type&#32;Base,<emphasis role="keywordtype">size_t</emphasis>&#32;Length&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02446"/>02446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(type_traits::suitable_base&lt;Int_Type,Base&gt;()&amp;&amp;(Length&#32;&gt;&#32;0))
<anchor xml:id="_reg__digs__t_8hpp_source_1l02447"/>02447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::istream&#32;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02448"/>02448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_nat__num__t_8hpp_1abb536e9b1b1447052db560972a06adbe">operator &gt;&gt; </link>(std::istream&#32;&amp;&#32;is,<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;Int_Type,Base,Length&gt;</link>&#32;&amp;&#32;arg)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02449"/>02449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;estado_e&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02450"/>02450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e0ini&#32;&#32;&#32;,&#32;e1r&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e1e&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e1g&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e1sep&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02451"/>02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e1d&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e1i&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e2g&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e2start&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e2dig&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02452"/>02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;e2dp&#32;&#32;&#32;&#32;,&#32;e2end&#32;,&#32;e2B&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e3dig&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;e0fin
<anchor xml:id="_reg__digs__t_8hpp_source_1l02453"/>02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02455"/>02455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;longitud_cadena
<anchor xml:id="_reg__digs__t_8hpp_source_1l02456"/>02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02457"/>02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02458"/>02458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(Length+1)*
<anchor xml:id="_reg__digs__t_8hpp_source_1l02459"/>02459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">size_t</emphasis><emphasis role="keyword">&gt;</emphasis>(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02460"/>02460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ceil(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02461"/>02461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02462"/>02462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::log2(<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis><emphasis role="keyword">&gt;</emphasis>(Base))&#32;+&#32;1
<anchor xml:id="_reg__digs__t_8hpp_source_1l02463"/>02463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02464"/>02464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02465"/>02465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02466"/>02466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;&#32;&#32;&#32;&#32;&#32;&#32;+16
<anchor xml:id="_reg__digs__t_8hpp_source_1l02467"/>02467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02468"/>02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;sds{};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02469"/>02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sds.resize(longitud_cadena);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02470"/>02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sds.assign(longitud_cadena,<emphasis role="charliteral">&apos;\0&apos;</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02472"/>02472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>inttype&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;<link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t&lt;Int_Type&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02473"/>02473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1dig__t">dig_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t&lt;Int_Type,Base&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02474"/>02474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis><link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;Int_Type,Base,Length&gt;</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02476"/>02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;indice{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02478"/>02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Int_Type&#32;digito{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02479"/>02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;longitud{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02480"/>02480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;inttype&#32;numero_base_recogido{0};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02482"/>02482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&amp;&#32;numero_ret{arg};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02484"/>02484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;estado_e&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02486"/>02486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c&#32;=&#32;type_traits::nullchar&lt;char&gt;;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02488"/>02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;sds;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02490"/>02490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02491"/>02491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;c&#32;=&#32;sds[indice];
<anchor xml:id="_reg__digs__t_8hpp_source_1l02492"/>02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>(est_act)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02493"/>02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e0ini&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02494"/>02494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02495"/>02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;r&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02496"/>02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1r;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02497"/>02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02498"/>02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02499"/>02499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02500"/>02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02501"/>02501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02502"/>02502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1r&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02503"/>02503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02504"/>02504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02505"/>02505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;e&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02506"/>02506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1e;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02507"/>02507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02508"/>02508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02509"/>02509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02510"/>02510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02511"/>02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02512"/>02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02513"/>02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02514"/>02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1e&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02515"/>02515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02516"/>02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;g&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02517"/>02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1g;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02518"/>02518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02519"/>02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02520"/>02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02521"/>02521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02522"/>02522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02523"/>02523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02524"/>02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1g&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02525"/>02525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02526"/>02526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;_&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02527"/>02527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1sep;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02528"/>02528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02529"/>02529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02530"/>02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02531"/>02531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02532"/>02532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02533"/>02533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02534"/>02534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1sep&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02535"/>02535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02536"/>02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;d&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02537"/>02537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1d;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02538"/>02538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02539"/>02539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02540"/>02540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02541"/>02541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02542"/>02542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02543"/>02543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02544"/>02544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1d&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02545"/>02545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02546"/>02546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;i&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02547"/>02547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e1i;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02548"/>02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02549"/>02549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02550"/>02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02551"/>02551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02552"/>02552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02553"/>02553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02554"/>02554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1i&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02555"/>02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02556"/>02556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;g&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02557"/>02557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2g;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02558"/>02558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02559"/>02559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02560"/>02560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02561"/>02561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02562"/>02562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02563"/>02563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02564"/>02564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2g&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02565"/>02565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02566"/>02566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;#&apos;</emphasis>)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02567"/>02567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2start;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02568"/>02568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02569"/>02569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02570"/>02570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02571"/>02571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02572"/>02572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02573"/>02573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02574"/>02574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2start&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02575"/>02575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02576"/>02576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(((c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>)&amp;&amp;(c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>))&amp;&amp;(std::abs(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>)&lt;Base))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02577"/>02577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2dig;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02578"/>02578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02579"/>02579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02580"/>02580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02581"/>02581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret&#32;=&#32;reg_digs_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02582"/>02582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02583"/>02583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02584"/>02584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02585"/>02585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02586"/>02586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02587"/>02587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02588"/>02588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret&#32;=&#32;reg_digs_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02589"/>02589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02590"/>02590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02591"/>02591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02592"/>02592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2dig&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02593"/>02593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02594"/>02594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dig_c&#32;{(c&#32;&gt;=&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&amp;&amp;&#32;(c&#32;&lt;=&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02595"/>02595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dig_lt_Base{digito&lt;Base};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02596"/>02596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;c_es_dig_B&#32;{dig_c&#32;&amp;&amp;&#32;dig_lt_Base};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02597"/>02597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dig_B_cdl&#32;{c_es_dig_B&#32;&amp;&amp;&#32;(longitud&#32;&lt;=&#32;Length-1)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02598"/>02598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;tt_dig_B_cdl&#32;{(c==<emphasis role="charliteral">&apos;:&apos;</emphasis>)&amp;&amp;dig_lt_Base&amp;&amp;(longitud&#32;&lt;=&#32;Length-1)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02599"/>02599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;tf_dig_B_cdl&#32;{(c==<emphasis role="charliteral">&apos;#&apos;</emphasis>)&amp;&amp;dig_lt_Base&amp;&amp;(longitud&#32;==&#32;Length-1)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02600"/>02600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(dig_B_cdl)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02601"/>02601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;*=&#32;10;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02602"/>02602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;+=&#32;(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02603"/>02603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2dig;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02604"/>02604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02605"/>02605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tt_dig_B_cdl)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02606"/>02606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2dp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02607"/>02607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02608"/>02608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tf_dig_B_cdl)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02609"/>02609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2end;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02610"/>02610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02611"/>02611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02612"/>02612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02613"/>02613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02614"/>02614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02615"/>02615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02616"/>02616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret&#32;=&#32;reg_digs_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02617"/>02617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02618"/>02618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02619"/>02619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02620"/>02620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2dp&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02621"/>02621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02622"/>02622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dig_c&#32;{(c&#32;&gt;=&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&amp;&amp;&#32;(c&#32;&lt;=&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02623"/>02623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;c_es_dig_B&#32;{(std::abs(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>)&lt;Base)&#32;&amp;&amp;&#32;(digito&lt;Base)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02624"/>02624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;dig_B_cdl&#32;{dig_c&#32;&amp;&amp;&#32;c_es_dig_B&#32;&amp;&amp;&#32;(longitud&#32;&lt;&#32;Length-1)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02625"/>02625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rdig_B_cdl&#32;{dig_c&#32;&amp;&amp;&#32;c_es_dig_B&#32;&amp;&amp;&#32;dig_B_cdl};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02626"/>02626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rdig_B_cdl)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02627"/>02627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2dig;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02628"/>02628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret[Length-1-longitud]&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(digito);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02629"/>02629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++longitud;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02630"/>02630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;c-<emphasis role="charliteral">&apos;0&apos;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02631"/>02631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02632"/>02632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02633"/>02633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02634"/>02634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02635"/>02635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02636"/>02636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02637"/>02637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02638"/>02638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret&#32;=&#32;reg_digs_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02639"/>02639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02640"/>02640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02641"/>02641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02642"/>02642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2end&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02643"/>02643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02644"/>02644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;c_es_sepfin&#32;{c&#32;==&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02645"/>02645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;d_es_digB&#32;{digito&#32;&lt;&#32;Base};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02646"/>02646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;l_coincide&#32;{longitud&#32;==&#32;Length-1};<emphasis role="comment">//&#32;llega&#32;al&#32;cero&#32;?</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02647"/>02647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;rdigB_cdl&#32;{c_es_sepfin&#32;&amp;&amp;&#32;d_es_digB&#32;&amp;&amp;&#32;l_coincide};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02648"/>02648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(rdigB_cdl)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02649"/>02649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e2B;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02650"/>02650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret[Length-1-longitud]&#32;=&#32;<link linkend="_struct_num_repr_1_1dig__t">dig_t</link>(digito);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02651"/>02651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02652"/>02652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02653"/>02653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02654"/>02654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02655"/>02655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02656"/>02656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02657"/>02657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02658"/>02658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02659"/>02659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret&#32;=&#32;reg_digs_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02660"/>02660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02661"/>02661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02662"/>02662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02663"/>02663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2B&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02664"/>02664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02665"/>02665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&#32;&gt;=&#32;<emphasis role="charliteral">&apos;0&apos;</emphasis>)&amp;&amp;(c&#32;&lt;=&#32;<emphasis role="charliteral">&apos;9&apos;</emphasis>))&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02666"/>02666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e3dig;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02667"/>02667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;c-<emphasis role="charliteral">&apos;0&apos;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02668"/>02668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02669"/>02669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02670"/>02670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02671"/>02671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02672"/>02672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02673"/>02673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;longitud&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02674"/>02674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02675"/>02675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_ret&#32;=&#32;reg_digs_t::regd_0();
<anchor xml:id="_reg__digs__t_8hpp_source_1l02676"/>02676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02677"/>02677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02678"/>02678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02679"/>02679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e3dig&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02680"/>02680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02681"/>02681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;espacio_c&#32;{c&#32;&lt;&#32;16};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02682"/>02682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;digito_c&#32;{(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>)&#32;&amp;&amp;&#32;(c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02683"/>02683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;num_base_lt_Base&#32;{numero_base_recogido&#32;&lt;&#32;Base};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02684"/>02684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;num_base_eq_Base&#32;{numero_base_recogido&#32;==&#32;Base};
<anchor xml:id="_reg__digs__t_8hpp_source_1l02685"/>02685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(digito_c&#32;&amp;&amp;&#32;num_base_lt_Base)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02686"/>02686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e3dig;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02687"/>02687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;*=&#32;10;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02688"/>02688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;+=&#32;(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02689"/>02689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02690"/>02690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(espacio_c&#32;&amp;&amp;&#32;num_base_eq_Base)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02691"/>02691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;*=&#32;10;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02692"/>02692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;+=&#32;(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02693"/>02693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0fin;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02694"/>02694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02695"/>02695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02696"/>02696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02697"/>02697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0ini;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02698"/>02698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;=&#32;0;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02699"/>02699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02700"/>02700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02701"/>02701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02702"/>02702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e0fin&#32;:
<anchor xml:id="_reg__digs__t_8hpp_source_1l02703"/>02703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02704"/>02704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0fin;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02705"/>02705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02706"/>02706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02707"/>02707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++indice;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02708"/>02708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(est_act!=e0fin);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02709"/>02709 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02710"/>02710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(is);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02711"/><link linkend="_namespace_num_repr_1aef762c1b9785e93fffd3336262a8e096">02711</link> &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02712"/>02712 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02713"/>02713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&lt;<emphasis role="keyword">typename</emphasis>&#32;Int_Type,Int_Type&#32;Base,<emphasis role="keywordtype">size_t</emphasis>&#32;Long&gt;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02714"/>02714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">requires</emphasis>&#32;(type_traits::suitable_base&lt;Int_Type,Base&gt;())
<anchor xml:id="_reg__digs__t_8hpp_source_1l02715"/>02715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ostream&#32;&amp;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02716"/>02716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;&lt;&lt;&#32;(
<anchor xml:id="_reg__digs__t_8hpp_source_1l02717"/>02717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ostream&#32;&amp;&#32;os,
<anchor xml:id="_reg__digs__t_8hpp_source_1l02718"/>02718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t&lt;Int_Type,Base,Long&gt;</link>&#32;&amp;&#32;arg)
<anchor xml:id="_reg__digs__t_8hpp_source_1l02719"/>02719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02720"/>02720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using&#32;</emphasis>inttype&#32;=&#32;<link linkend="_namespace_num_repr_1ad76647f24e00f176e977848784fb7826">ullint_t</link>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02721"/>02721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;reg_dig#&quot;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02722"/>02722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_namespace_num_repr_1ab15118a9d5fcec3c552d695027565862">int32_t</link>&#32;ix{Long-1}&#32;;&#32;ix&#32;&gt;&#32;0&#32;;&#32;--ix)&#32;{
<anchor xml:id="_reg__digs__t_8hpp_source_1l02723"/>02723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;static_cast&lt;inttype&gt;(arg[ix]());
<anchor xml:id="_reg__digs__t_8hpp_source_1l02724"/>02724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;:&apos;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02725"/>02725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02726"/>02726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;static_cast&lt;inttype&gt;(arg[0]());
<anchor xml:id="_reg__digs__t_8hpp_source_1l02727"/>02727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;#B&quot;</emphasis>;
<anchor xml:id="_reg__digs__t_8hpp_source_1l02728"/>02728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;static_cast&lt;inttype&gt;(Base);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02729"/>02729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(os);
<anchor xml:id="_reg__digs__t_8hpp_source_1l02730"/>02730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="_reg__digs__t_8hpp_source_1l02731"/>02731 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02732"/>02732 }&#32;<emphasis role="comment">//&#32;CLOSE&#32;NAMESPACE&#32;NUMREPR</emphasis>
<anchor xml:id="_reg__digs__t_8hpp_source_1l02733"/>02733 
<anchor xml:id="_reg__digs__t_8hpp_source_1l02734"/>02734 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;REG_DIGS_T_HPP_INCLUDED</emphasis>
</programlisting></section>
