<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="es">
  <compounddef id="struct_num_repr_1_1base__num__t" kind="struct" language="C++" prot="public">
    <compoundname>NumRepr::base_num_t</compoundname>
    <includes refid="base__num__t_8hpp" local="no">base_num_t.hpp</includes>
    <templateparamlist>
      <param>
        <type>type_traits::allowable_base_type_c</type>
        <declname>UINT_T</declname>
        <defname>UINT_T</defname>
      </param>
      <param>
        <type>UINT_T</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>using NumRepr::base_num_t&lt; UINT_T, B &gt;::dig_t =  dig_t&lt;UINT_T,B&gt;</definition>
        <argsstring></argsstring>
        <name>dig_t</name>
        <qualifiedname>NumRepr::base_num_t::dig_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="14" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1base__num__t_1a21e924224be346831465d62658048e8d" prot="public" static="no">
        <type>basic_string&lt; <ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref> &gt;</type>
        <definition>using NumRepr::base_num_t&lt; UINT_T, B &gt;::nbstr =  basic_string&lt;dig_t&gt;</definition>
        <argsstring></argsstring>
        <name>nbstr</name>
        <qualifiedname>NumRepr::base_num_t::nbstr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="15" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1base__num__t_1aa9bc0366bf9701cb6a9e1a376ad1d72c" prot="public" static="no">
        <type>typename nbstr::iterator</type>
        <definition>using NumRepr::base_num_t&lt; UINT_T, B &gt;::striterator =  typename nbstr::iterator</definition>
        <argsstring></argsstring>
        <name>striterator</name>
        <qualifiedname>NumRepr::base_num_t::striterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="16" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1base__num__t_1a191af9d669240a254ae0baf13b42e4eb" prot="public" static="no">
        <type>typename nbstr::const_iterator</type>
        <definition>using NumRepr::base_num_t&lt; UINT_T, B &gt;::cstriterator =  typename nbstr::const_iterator</definition>
        <argsstring></argsstring>
        <name>cstriterator</name>
        <qualifiedname>NumRepr::base_num_t::cstriterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="17" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1base__num__t_1ab44d302436000bf34977f77a71d8625b" prot="public" static="no">
        <type>typename nbstr::reverse_iterator <ref refid="struct_num_repr_1_1base__num__t_1ab44d302436000bf34977f77a71d8625b" kindref="member">rstriterator</ref></type>
        <definition>using NumRepr::base_num_t&lt; UINT_T, B &gt;::rstriterator =  typename nbstr::reverse_iterator rstriterator</definition>
        <argsstring></argsstring>
        <name>rstriterator</name>
        <qualifiedname>NumRepr::base_num_t::rstriterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="18" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1base__num__t_1ab280333280a8a03cd74695e9dcd575f8" prot="public" static="no">
        <type>typename nbstr::const_reverse_iterator <ref refid="struct_num_repr_1_1base__num__t_1ab280333280a8a03cd74695e9dcd575f8" kindref="member">crstriterator</ref></type>
        <definition>using NumRepr::base_num_t&lt; UINT_T, B &gt;::crstriterator =  typename nbstr::const_reverse_iterator crstriterator</definition>
        <argsstring></argsstring>
        <name>crstriterator</name>
        <qualifiedname>NumRepr::base_num_t::crstriterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_num_repr_1_1base__num__t_1a523deb97f871bc82d20ecbd24e08c4f0" prot="public" static="no" mutable="no">
        <type>basic_string&lt; <ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref>&lt; UINT_T, B &gt; &gt;</type>
        <definition>basic_string&lt;dig_t&lt;UINT_T,B&gt; &gt; NumRepr::base_num_t&lt; UINT_T, B &gt;::m_dstr</definition>
        <argsstring></argsstring>
        <name>m_dstr</name>
        <qualifiedname>NumRepr::base_num_t::m_dstr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="12" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1ae9342a10ee981b65001a2b4ac9531c2a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <definition>constexpr size_t NumRepr::base_num_t&lt; UINT_T, B &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <qualifiedname>NumRepr::base_num_t::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="21" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a787fd6e3da2fc99d82cafb0c019d3a6e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::base_num_t&lt; UINT_T, B &gt;::resize</definition>
        <argsstring>(size_t arg) noexcept</argsstring>
        <name>resize</name>
        <qualifiedname>NumRepr::base_num_t::resize</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="25" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1aa87935430034d037a47f77d48129d396" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::base_num_t&lt; UINT_T, B &gt;::operator[]</definition>
        <argsstring>(ullint arg) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::base_num_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="29" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1ab45f89faa50972e77b570e23000d880b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr dig_t &amp; NumRepr::base_num_t&lt; UINT_T, B &gt;::operator[]</definition>
        <argsstring>(ullint arg) noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::base_num_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542" kindref="member">ullint</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="34" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a2228b2ea1c8eb9e62cab5195997ba27c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::base_num_t&lt; UINT_T, B &gt;::clear</definition>
        <argsstring>() noexcept</argsstring>
        <name>clear</name>
        <qualifiedname>NumRepr::base_num_t::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="39" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1ac3b9a3016627cc57cd83994fb1cff928" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::base_num_t&lt; UINT_T, B &gt;::push_back</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>push_back</name>
        <qualifiedname>NumRepr::base_num_t::push_back</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="44" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a6f5da3393f245c55d9d5bd9b60f84605" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::base_num_t&lt; UINT_T, B &gt;::insert</definition>
        <argsstring>(size_t pos, size_t tam, dig_t parg) noexcept</argsstring>
        <name>insert</name>
        <qualifiedname>NumRepr::base_num_t::insert</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>tam</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref></type>
          <declname>parg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="49" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a840806eac58252d667191b46398cc2bf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr num_basic_t</type>
        <definition>constexpr num_basic_t NumRepr::base_num_t&lt; UINT_T, B &gt;::substr</definition>
        <argsstring>(size_t pos, size_t n) const noexcept</argsstring>
        <name>substr</name>
        <qualifiedname>NumRepr::base_num_t::substr</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="54" column="30" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a3cadf0a0ed7ae17bedd45c9679ea0471" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::base_num_t&lt; UINT_T, B &gt;::push_front</definition>
        <argsstring>(dig_t parg) noexcept</argsstring>
        <name>push_front</name>
        <qualifiedname>NumRepr::base_num_t::push_front</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" kindref="member">dig_t</ref></type>
          <declname>parg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="59" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1aa62e4f311f8a54460324fbe74ba8ca55" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1base__num__t_1aa9bc0366bf9701cb6a9e1a376ad1d72c" kindref="member">striterator</ref></type>
        <definition>constexpr striterator NumRepr::base_num_t&lt; UINT_T, B &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <qualifiedname>NumRepr::base_num_t::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="64" column="30" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a950b55fad9a60d1f6de766ea81bd5c1d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1base__num__t_1a191af9d669240a254ae0baf13b42e4eb" kindref="member">cstriterator</ref></type>
        <definition>constexpr cstriterator NumRepr::base_num_t&lt; UINT_T, B &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <qualifiedname>NumRepr::base_num_t::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="67" column="31" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a34beb03b3bf13ab17bbe0c09be0b4c1f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1base__num__t_1ab44d302436000bf34977f77a71d8625b" kindref="member">rstriterator</ref></type>
        <definition>constexpr rstriterator NumRepr::base_num_t&lt; UINT_T, B &gt;::rbegin</definition>
        <argsstring>() noexcept</argsstring>
        <name>rbegin</name>
        <qualifiedname>NumRepr::base_num_t::rbegin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="70" column="31" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1ac2c79936cb8ae389665174a2d26cb1a5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1base__num__t_1ab280333280a8a03cd74695e9dcd575f8" kindref="member">crstriterator</ref></type>
        <definition>constexpr crstriterator NumRepr::base_num_t&lt; UINT_T, B &gt;::rend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rend</name>
        <qualifiedname>NumRepr::base_num_t::rend</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="73" column="32" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a6ae3c24171fa8af240327437913ac659" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::base_num_t&lt; UINT_T, B &gt;::erase</definition>
        <argsstring>(size_t pos, size_t tam) noexcept</argsstring>
        <name>erase</name>
        <qualifiedname>NumRepr::base_num_t::erase</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>tam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="76" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1base__num__t_1a6e6eeda172a8ae2ded447ce44a2718dc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const num_basic_t &amp;</type>
        <definition>constexpr const num_basic_t &amp; NumRepr::base_num_t&lt; UINT_T, B &gt;::operator&amp;=</definition>
        <argsstring>(const num_basic_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::base_num_t::operator&amp;=</qualifiedname>
        <param>
          <type>const num_basic_t &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="81" column="37" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(<ref refid="namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5" kindref="member">type_traits::suitable_base</ref>&lt;UINT_T,B&gt;())    </requiresclause>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>NumRepr::base_num_t&lt; UINT_T, B &gt;</label>
        <link refid="struct_num_repr_1_1base__num__t"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" line="10" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/base_num_t.hpp" bodystart="10" bodyend="85"/>
    <listofallmembers>
      <member refid="struct_num_repr_1_1base__num__t_1aa62e4f311f8a54460324fbe74ba8ca55" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>begin</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a2228b2ea1c8eb9e62cab5195997ba27c" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>clear</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1ab280333280a8a03cd74695e9dcd575f8" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>crstriterator</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a191af9d669240a254ae0baf13b42e4eb" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>cstriterator</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a7659e7b2966d79b14fba17dbb4df50e9" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>dig_t</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a950b55fad9a60d1f6de766ea81bd5c1d" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>end</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a6ae3c24171fa8af240327437913ac659" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>erase</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a6f5da3393f245c55d9d5bd9b60f84605" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>insert</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a523deb97f871bc82d20ecbd24e08c4f0" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>m_dstr</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a21e924224be346831465d62658048e8d" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>nbstr</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a6e6eeda172a8ae2ded447ce44a2718dc" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1aa87935430034d037a47f77d48129d396" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1ab45f89faa50972e77b570e23000d880b" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1ac3b9a3016627cc57cd83994fb1cff928" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>push_back</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a3cadf0a0ed7ae17bedd45c9679ea0471" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>push_front</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a34beb03b3bf13ab17bbe0c09be0b4c1f" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>rbegin</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1ac2c79936cb8ae389665174a2d26cb1a5" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>rend</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a787fd6e3da2fc99d82cafb0c019d3a6e" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>resize</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1ab44d302436000bf34977f77a71d8625b" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>rstriterator</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1ae9342a10ee981b65001a2b4ac9531c2a" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>size</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1aa9bc0366bf9701cb6a9e1a376ad1d72c" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>striterator</name></member>
      <member refid="struct_num_repr_1_1base__num__t_1a840806eac58252d667191b46398cc2bf" prot="public" virt="non-virtual"><scope>NumRepr::base_num_t</scope><name>substr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
