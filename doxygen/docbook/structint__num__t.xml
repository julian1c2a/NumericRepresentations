<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structint__num__t" xml:lang="es">
<title>Referencia de la plantilla de la Estructura int_num_t&lt; UINT_T, B &gt;</title>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;int_num_t.hpp&gt;</computeroutput>
</para>
Diagrama de herencias de int_num_t&lt; UINT_T, B &gt;<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Diagrama de colaboración para int_num_t&lt; UINT_T, B &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Métodos públicos    </title>
        <itemizedlist>
            <listitem><para><link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_structint__num__t_1a489e24fd874f049d247539eb02416338">size</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_structint__num__t_1ab4d080e8e63685dda079d97feadfcdd6">resize</link> (<link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> arg)</para>
</listitem>
            <listitem><para>void <link linkend="_structint__num__t_1acafc6ec0215c9f6f09a33d9ee36734c5">push_front</link> (<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t</link>&lt; B &gt; parg)</para>
</listitem>
            <listitem><para>void <link linkend="_structint__num__t_1a6575701ad34d79f67738bdef51c92a2d">push_back</link> (<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t</link>&lt; B &gt; arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a7f3774184a787970729029ccdbac6031">operator&amp;=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1afe238bb5556c227702fa86b5d0fc0085">num_int</link> (const num_int &amp;a)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1afab6608baa9f5d4cd58703aaf9a7ee32">num_int</link> (const string &amp;a)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1adbe31357255b5c039d22ff0dbe48afc2">num_int</link> (dig a0)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1afd31333558c0bb1fac3d7a3333dc5cff">num_int</link> (dig a1, dig a0)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a8244d16e71dd32fc028ceae5bd163ec1">num_int</link> (dig a2, dig a1, dig a0)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a486388fb8875a29054c71c3dd5f1ca06">num_int</link> (const std::vector&lt; dig &gt; &amp;arg)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a7ce1c5264e0c3a3c44ab70b7c6150523">num_int</link> (const std::list&lt; dig &gt; &amp;arg)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a670bc907a69ae9886a4a157616eb59ca">num_int</link> (sign_e s, dig a0)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1aaf3ce8859b4934b0f2ff857045947aa5">num_int</link> (sign_e s, dig a1, dig a0)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a10e5e0316befc37645141fc22b769528">num_int</link> (sign_e s, dig a2, dig a1, dig a0)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ac181f6b5e9a48b847383bd068994760f">num_int</link> (sign_e s, const std::vector&lt; dig &gt; &amp;arg, <link linkend="_int__num__t_8hpp_1a161d5c264828471eb6953fd0febc0ccf">forma_t</link> argforma=<link linkend="_int__num__t_8hpp_1a161d5c264828471eb6953fd0febc0ccfa4f005c0b220d0d145556380873d149cc">noraw</link>)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a658b09d4b3089d07319e898c91139994">num_int</link> (sign_e s, const std::list&lt; dig &gt; &amp;arg)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae067d8dffb3fb8963894dfca8173b4c4">num_int</link> (spardigs a)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a5227f809c7e7b23f61318a82ece3ee94">num_int</link> (pardigs a)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a48068ebe04d7903949d4e0072ee498c5">num_int</link> (sign_e s, pardigs a)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1a9f278fa0d5a6b8c1bcfdb8c6532715e9">num_int</link> (char ch)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1aa4b349b6871e2d8e2b3b4bd004bc31d7">num_int</link> (<link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link> a)</para>
</listitem>
            <listitem><para>template&lt;typename Int_T &gt; </para><para><link linkend="_structint__num__t_1aa828975d8442bd5ec18f43f4f42e2b83">num_int</link> (Int_T a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1aeeedd95e69e5f62662b060823b3bded7">operator=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a9acb58f0efc3566801617544f7cf0f34">operator=</link> (const num_uint&lt; B &gt; &amp;a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a88f785ba180ab05fc888f0e239edd220">operator=</link> (const pardigs_t&lt; B &gt; &amp;a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a27c84cf65ec38b837a61ba034fe4904e">operator=</link> (const spardigs_t&lt; B &gt; &amp;a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a8cdc61cc457f067863755a8627f7b19b">operator=</link> (const <link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t</link>&lt; B &gt; &amp;a)</para>
</listitem>
            <listitem><para>template&lt;typename Int_T &gt; </para><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a8d92e34d54ec97b31d037d46ee06a780">operator=</link> (Int_T a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1adc2df3abaaff6ae0a4bc37ff90a0ad10">operator=</link> (const std::vector&lt; dig &gt; &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1acbcdc8b8891a1038bd87be6cb7a4078e">operator=</link> (const std::list&lt; dig &gt; &amp;arg)</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t_1aae2d5fd1815a61a2aadc21c151a34e6b">ceros_a_la_izqda</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t_1a0f7c7d803d12ead8126beb05485022c3">unos_a_la_izqda</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_structint__num__t_1ae09c19efabf27eb9caf36f33f0f380dd">ceros_a_la_drcha</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_structint__num__t_1a9ffbfe2524e6104557827b766b800890">unos_a_la_drcha</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1ac789d6752f2a0d51e6e3304c66529716">filled_of_all_digits_are_Bm1</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1ab074dd2e3e7b88588a25d371dc2c1636">filled_of_all_digits_are_0</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t_1a55203f0d36573721c63de3837f8d416e">digs_no_significativos</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t_1a4bf7f711400d921df1c0d05cbe3c9d3d">digs_fracc_no_significativos</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t_1acbbb77c55849e7b5b26a162c90acf32d">Bm1_a_la_izqda</link> () const</para>
</listitem>
            <listitem><para><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t_1aec4ca498212a838867d18a5cd246aa6f">Bm1_a_la_drcha</link> () const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1a3f6da26847b75caa02c9969f51702de8">operator==</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1a0fa45dac193d9e3ccf9dcbd3a0f0a6bd">operator!=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1acec6fb387e79e65f37e779ffb18d8730">operator&gt;=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1a8a80c22f65c390355de7421e1ddd7d54">operator&lt;=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1acb4f8554bc619a61d768b8b7467ddf46">operator&gt;</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para>bool <link linkend="_structint__num__t_1a6212907f79ef713205e6d09e5e340f2c">operator&lt;</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a1fa5a610a675322a17233b696994276a">operator+</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1abf1ec8aeeadefe6195d33e62435eca37">operator-</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1ae1144a6001a66b5fecad8debf5454bc2">operator*</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1acc818e68d0ebebc9ee1a14c0a9506328">operator/</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a958e81879bcf27742be664eaf019a125">operator%</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a4041caab018eb58e56fb521bf68df70f">operator*</link> (pardigs a) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a9d17a82f0441ed16b2c59ec506d66a04">operator+</link> (dig arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a8530f1cbf642af939f70b37e142e5f55">operator-</link> (dig arg) const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1ac16f8bd1c9be289861368780674163d0">operator*</link> (dig a) const</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1adac8cb6ab4d43634b44059a0d7a21dc4">operator+=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1adcde21a88cbb4b810259e675944e1ec8">operator-=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1ab4f61bc56098580779f5fb4f8d52cf44">operator*=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a6087d5c5da71405c13e8e818a8cac6b0">operator/=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1aff9076398c6852dc5249e2ab6dfa5500">operator%=</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1aaf1452877f71e57336b8faa91dd1e776">operator*=</link> (pardigs a)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a82d829e8d83d2300d289a51744b256ca">operator+=</link> (dig arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a7f13a2a6f67cf120d694d6c390d07572">operator-=</link> (dig arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a15fd56ca4bfffa62e6896bb3e0c8720c">operator*=</link> (dig arg)</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a8baef8b2dde5755813320416f58699df">operator-</link> () const</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a2f3c3db7d5472decaeb8ef735f01541e">operator!</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a3a812ddf5e23511d20f4b40f0a1d119e">mC_B</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1ac325668599524297888380a9239225cb">mC_Bm1</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a94f6a0a608614642522b2d8fff91aff0">abs</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1acf8be3251610cf7365b5a7ae48dfa001">absp</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1aba3e9122269d8c60f598be8416397ba2">divB</link> () const</para>
</listitem>
            <listitem><para>dig <link linkend="_structint__num__t_1a4d4b2c2c862d358a897074e2afe9c298">remB</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1ad1ba25e7c16f7c3bc032c36646f00f68">divBp</link> ()</para>
</listitem>
            <listitem><para>dig <link linkend="_structint__num__t_1ae37121ea60fbd75600561e3bbef77194">remBp</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a066a49e72fc5bde03a85fdd2fa693973">div2</link> () const</para>
</listitem>
            <listitem><para>dig <link linkend="_structint__num__t_1aeb24d35b97a122413d6ae886f55d59e7">rem2</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a11d24d94e5768ecceb341991ab7203a9">div2p</link> ()</para>
</listitem>
            <listitem><para>dig <link linkend="_structint__num__t_1ad5ba09cfe05ae18fbcb505b0e92b1745">rem2p</link> ()</para>
</listitem>
            <listitem><para>dig <link linkend="_structint__num__t_1a7536efd30cc24248602b3083295a782c">remBm1</link> () const</para>
</listitem>
            <listitem><para>pair&lt; <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>, <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &gt; <link linkend="_structint__num__t_1a4b7bc7c10c03f0560b724614e4e4278f">EuclidDiv</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg) const</para>
</listitem>
            <listitem><para>pair&lt; <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>, const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; &gt; <link linkend="_structint__num__t_1a4e1b2b56ffe5f4d8f0cf2b31fee922fc">EuclidDivP</link> (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp;arg)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1affa4d6ff03dfb310a7b6bda3ecc1eb7a">operator++</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a1edf8c750b0cc6f7494ac5ce0a88f720">operator++</link> (int)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a0f0b3db6587b441868f2cccb2f4b014c">operator--</link> ()</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1aaaae8b092ad0edcf7bb36b11c22f81f7">operator--</link> (int)</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a6798bee749c9972bd4440497ff48d9d1">reduce</link> () const</para>
</listitem>
            <listitem><para>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t_1a80b19146b3ea979dd1f6a431b7a061fe">reduce_fracc</link> ()</para>
</listitem>
            <listitem><para><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t_1a77eb337c0667017330ac2c49c694fef8">reduce_fracc</link> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Amigas    </title>
        <itemizedlist>
            <listitem><para>template&lt;const <link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link> Base&gt; </para><para>istream &amp; <link linkend="_structint__num__t_1a4f6ccae9e31bfa06fed310d86da2e416">operator&gt;&gt;</link> (istream &amp;is, <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&lt; Base &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;const <link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link> Base&gt; </para><para>ostream &amp; <link linkend="_structint__num__t_1a86f81a5b1d351d2424e16c2a6c522728">operator&lt;&lt;</link> (ostream &amp;os, <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&lt; Base &gt; arg)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descripción detallada</title>
<simplesect><title>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt;<?linebreak?>struct int_num_t&lt; UINT_T, B &gt;</title></simplesect>
</section>
<section>
<title>Documentación de las funciones miembro</title>
<anchor xml:id="_structint__num__t_1a94f6a0a608614642522b2d8fff91aff0"/><section>
    <title>abs()</title>
<indexterm><primary>abs</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>abs</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::abs ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cthis(*<emphasis role="keyword">this</emphasis>);
01603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vminus)
01605 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.mC_B();
01606 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
01608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
<para>
Referenciado por <link linkend="_l00978">int_num_t&lt; UINT_T, B &gt;::operator%()</link> y <link linkend="_l00931">int_num_t&lt; UINT_T, B &gt;::operator/()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a94f6a0a608614642522b2d8fff91aff0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a94f6a0a608614642522b2d8fff91aff0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acf8be3251610cf7365b5a7ae48dfa001"/><section>
    <title>absp()</title>
<indexterm><primary>absp</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>absp</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::absp ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01611 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
01612 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vminus)&#32;cthis.mC_B();
01614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
01616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
<para>
Referenciado por <link linkend="_l01275">int_num_t&lt; UINT_T, B &gt;::operator*=()</link> y <link linkend="_l01295">int_num_t&lt; UINT_T, B &gt;::operator/=()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acf8be3251610cf7365b5a7ae48dfa001_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acf8be3251610cf7365b5a7ae48dfa001_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aec4ca498212a838867d18a5cd246aa6f"/><section>
    <title>Bm1_a_la_drcha()</title>
<indexterm><primary>Bm1_a_la_drcha</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>Bm1_a_la_drcha</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::Bm1_a_la_drcha ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;digitos&#32;no&#32;significativos&#32;para&#32;números&#32;negativos&#32;fraccionarios</emphasis>
00630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;fin&#32;=&#32;cthis.size();
00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sz=0;
00633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0;
00634 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;(k&#32;&lt;&#32;fin)&#32;and&#32;(!Exit)&#32;;&#32;++k)&#32;{
00635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[k]==(B-1))&#32;++sz;
00636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sz;
00639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aec4ca498212a838867d18a5cd246aa6f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acbbb77c55849e7b5b26a162c90acf32d"/><section>
    <title>Bm1_a_la_izqda()</title>
<indexterm><primary>Bm1_a_la_izqda</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>Bm1_a_la_izqda</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::Bm1_a_la_izqda ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00613 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00614 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//digitos&#32;no&#32;significativos&#32;para&#32;números&#32;negativos</emphasis>
00616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sz=0;
00618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=(cthis.size()-1);
00619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;(k&#32;&gt;&#32;0)&#32;and&#32;(!Exit)&#32;;&#32;--k)&#32;{
00620 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[k]==(B-1))&#32;++sz;
00621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00622 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00623 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((k==0)&#32;and&#32;(cthis[0]==(B-1))&#32;and&#32;(!Exit))&#32;++sz;
00624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;return&#32;sz;
00625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acbbb77c55849e7b5b26a162c90acf32d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ae09c19efabf27eb9caf36f33f0f380dd"/><section>
    <title>ceros_a_la_drcha()</title>
<indexterm><primary>ceros_a_la_drcha</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>ceros_a_la_drcha</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::ceros_a_la_drcha ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;num_uint&#32;&amp;&#32;cthis&#32;=&#32;(*this);</emphasis>
00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz=0;
00549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;fin=this-&gt;<link linkend="_structint__num__t_1a489e24fd874f049d247539eb02416338">size</link>();
00550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;finl&#32;=&#32;fin-1;
00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<emphasis role="keyword">operator</emphasis>[](finl)==0)&#32;{
00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=finl&#32;;&#32;(i&#32;&gt;=0)&#32;and&#32;(!Exit)&#32;;&#32;--i)&#32;{
00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<emphasis role="keyword">operator</emphasis>[](i)==0)&#32;++sz;
00554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sz;
00558 }
</programlisting><para>
Hace referencia a <link linkend="_l00046">int_num_t&lt; UINT_T, B &gt;::size()</link>.</para>
<para>
Referenciado por <link linkend="_l00607">int_num_t&lt; UINT_T, B &gt;::digs_fracc_no_significativos()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae09c19efabf27eb9caf36f33f0f380dd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae09c19efabf27eb9caf36f33f0f380dd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aae2d5fd1815a61a2aadc21c151a34e6b"/><section>
    <title>ceros_a_la_izqda()</title>
<indexterm><primary>ceros_a_la_izqda</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>ceros_a_la_izqda</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::ceros_a_la_izqda ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//digitos&#32;no&#32;significativos&#32;para&#32;números&#32;positivos</emphasis>
00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz=0;
00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;fin=&#32;this-&gt;<link linkend="_structint__num__t_1a489e24fd874f049d247539eb02416338">size</link>();
00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=fin-1&#32;;&#32;(i&#32;&gt;=&#32;0)&#32;and&#32;(!Exit)&#32;;&#32;--i)&#32;{
00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;char_es_0&#32;=&#32;(cthis[i]==0);
00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(char_es_0){
00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++sz;
00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sz;
00525 }
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l00046">int_num_t&lt; UINT_T, B &gt;::size()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aae2d5fd1815a61a2aadc21c151a34e6b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a4bf7f711400d921df1c0d05cbe3c9d3d"/><section>
    <title>digs_fracc_no_significativos()</title>
<indexterm><primary>digs_fracc_no_significativos</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>digs_fracc_no_significativos</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::digs_fracc_no_significativos ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00607 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00608 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;num_uint&#32;&amp;&#32;cthis&#32;=&#32;(*this);</emphasis>
00609 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//digitos&#32;no&#32;significativos</emphasis>
00610 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;this-&gt;<link linkend="_structint__num__t_1ae09c19efabf27eb9caf36f33f0f380dd">ceros_a_la_drcha</link>();
00611 }
</programlisting><para>
Hace referencia a <link linkend="_l00545">int_num_t&lt; UINT_T, B &gt;::ceros_a_la_drcha()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a4bf7f711400d921df1c0d05cbe3c9d3d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a55203f0d36573721c63de3837f8d416e"/><section>
    <title>digs_no_significativos()</title>
<indexterm><primary>digs_no_significativos</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>digs_no_significativos</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::digs_no_significativos ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//digitos&#32;no&#32;significativos</emphasis>
00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;retorno;
00596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//if&#32;((size()&lt;1)&#32;and&#32;(signo==vminus))&#32;return&#32;0;</emphasis>
00597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vplus)&#32;{
00598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retorno&#32;=&#32;cthis.ceros_a_la_izqda();
00599 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retorno;
00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00601 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00602 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;retorno&#32;=&#32;cthis.unos_a_la_izqda();
00603 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;retorno;
00604 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00605 }
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
<para>
Referenciado por <link linkend="_l00663">int_num_t&lt; UINT_T, B &gt;::operator!=()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a55203f0d36573721c63de3837f8d416e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a55203f0d36573721c63de3837f8d416e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a066a49e72fc5bde03a85fdd2fa693973"/><section>
    <title>div2()</title>
<indexterm><primary>div2</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>div2</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::div2 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01662 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;signo;
01663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_int(cthis.abs());
01664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
01665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
01666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;dig&#32;dos&#32;=&#32;2;
01667 
01668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int(dos);
01669 
01670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;((B==2)?(1):(0));
01671 
01672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
01673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(B==2)&#32;dvsor_int[0]=1;<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
01674 
01675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
01676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
01677 
01678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
01679 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
01680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;1;
01681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;0;
01682 
01683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
01684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
01685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
01686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
01687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
01688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
01689 
01690 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
01691 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
01692 <emphasis role="comment"></emphasis>
01693 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;=&#32;rem.cthis.insert(0,cssor,0);</emphasis>
01694 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;+=&#32;dvndo_fra;</emphasis>
01695 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
01696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn==vminus)&#32;dvndo_int.mC_B();
01697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
01698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dvndo_int;
01701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a066a49e72fc5bde03a85fdd2fa693973_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a11d24d94e5768ecceb341991ab7203a9"/><section>
    <title>div2p()</title>
<indexterm><primary>div2p</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>div2p</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::div2p ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;signo;
01728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.absp();
01729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;dvndo_int&#32;=&#32;(*this);
01731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
01732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;dig&#32;dos&#32;=&#32;2;
01733 
01734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int(dos);
01735 
01736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;((B==2)?(1):(0));
01737 
01738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
01739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(B==2)&#32;dvsor_int[0]=1;<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
01740 
01741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
01742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
01743 
01744 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
01745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
01746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;1;
01747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;0;
01748 
01749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
01750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
01751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
01752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
01753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
01754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
01755 
01756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
01757 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
01758 <emphasis role="comment"></emphasis>
01759 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;=&#32;rem.lst_digs.insert(0,cssor,0);</emphasis>
01760 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;+=&#32;dvndo_fra;</emphasis>
01761 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
01762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn==vminus)&#32;dvndo_int.mC_B();
01763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
01764 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dvndo_int;
01767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a11d24d94e5768ecceb341991ab7203a9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aba3e9122269d8c60f598be8416397ba2"/><section>
    <title>divB()</title>
<indexterm><primary>divB</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>divB</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::divB ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01624 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01625 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy(*<emphasis role="keyword">this</emphasis>);
01626 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01627 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;cpy.signo;
01628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.absp();
01629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.cthis.erase(0,1);
01630 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn==vminus)&#32;cpy.mC_B();
01631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy;
01633 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aba3e9122269d8c60f598be8416397ba2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ad1ba25e7c16f7c3bc032c36646f00f68"/><section>
    <title>divBp()</title>
<indexterm><primary>divBp</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>divBp</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::divBp ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cpy&#32;=&#32;(*this);
01644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01645 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;cpy.signo;
01646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.absp();
01647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.cthis.erase(0,1);
01648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn==vminus)&#32;cpy.mC_B();
01649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy;
01651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ad1ba25e7c16f7c3bc032c36646f00f68_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a4b7bc7c10c03f0560b724614e4e4278f"/><section>
    <title>EuclidDiv()</title>
<indexterm><primary>EuclidDiv</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>EuclidDiv</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>pair&lt; <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>, <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &gt; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::EuclidDiv (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_ndo&#32;=&#32;signo;
02082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_sor&#32;=&#32;arg.signo;
02083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_int&#32;=&#32;cthis;
02084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.absp();
02085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
02086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int&#32;=&#32;arg.abs();
02087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
02088 
02089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
02090 
02091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;dvsor_int.ceros_a_la_drcha();&#32;<emphasis role="comment">//¿?</emphasis>
02092 
02093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
02094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.erase(0,cssor);<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
02095 
02096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
02097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
02098 
02099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
02100 
02101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
02102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
02103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;dvsor_int.size();
02104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;longtsor;
02105 
02106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
02107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
02108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
02109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
02110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
02111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
02112 
02113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
02114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
02115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
02116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>.insert(0,cssor,0);
02117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;+=&#32;dvndo_fra;
02118 
02119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn_ndo&#32;!=&#32;sgn_sor)&#32;dvndo_int.mC_B();
02120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
02121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
02122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
02123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;make_pair(rem,dvndo_int);
02124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a4b7bc7c10c03f0560b724614e4e4278f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a4e1b2b56ffe5f4d8f0cf2b31fee922fc"/><section>
    <title>EuclidDivP()</title>
<indexterm><primary>EuclidDivP</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>EuclidDivP</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>pair&lt; <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>, const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; &gt; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::EuclidDivP (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_ndo&#32;=&#32;signo;
02129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_sor&#32;=&#32;arg.signo;
02130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.absp();
02131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;dvndo_int&#32;=&#32;cthis;
02133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int&#32;=&#32;arg.abs();
02134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
02135 
02136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
02137 
02138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;dvsor_int.ceros_a_la_drcha();&#32;<emphasis role="comment">//¿?</emphasis>
02139 
02140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
02141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.erase(0,cssor);<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
02142 
02143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
02144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
02145 
02146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
02147 
02148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
02149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
02150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;dvsor_int.size();
02151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;longtsor;
02152 
02153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
02154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
02155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
02156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
02157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
02158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
02159 
02160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
02161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
02162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
02163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>.insert(0,cssor,0);
02164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;+=&#32;dvndo_fra;
02165 
02166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn_ndo&#32;!=&#32;sgn_sor)&#32;dvndo_int.mC_B();
02167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
02168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
02169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
02170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;make_pair(rem,dvndo_int);
02171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a4e1b2b56ffe5f4d8f0cf2b31fee922fc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ab074dd2e3e7b88588a25d371dc2c1636"/><section>
    <title>filled_of_all_digits_are_0()</title>
<indexterm><primary>filled_of_all_digits_are_0</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>filled_of_all_digits_are_0</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::filled_of_all_digits_are_0 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;longitud&#32;=&#32;cthis.size();
00587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;longitud;++i)
00588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[i]!=dig(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00590 }
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ab074dd2e3e7b88588a25d371dc2c1636_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ac789d6752f2a0d51e6e3304c66529716"/><section>
    <title>filled_of_all_digits_are_Bm1()</title>
<indexterm><primary>filled_of_all_digits_are_Bm1</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>filled_of_all_digits_are_Bm1</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::filled_of_all_digits_are_Bm1 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;longitud&#32;=&#32;cthis.size();
00579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;longitud;i++)
00580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis[i]!=dig(B-1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00582 }
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ac789d6752f2a0d51e6e3304c66529716_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a3a812ddf5e23511d20f4b40f0a1d119e"/><section>
    <title>mC_B()</title>
<indexterm><primary>mC_B</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>mC_B</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::mC_B ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01556 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01557 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;striterator&#32;fin&#32;=&#32;cthis.end();
01559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;striterator&#32;&#32;it&#32;=&#32;cthis.begin();
01560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;fin&#32;;&#32;++it&#32;)
01561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*it)&#32;=&#32;(!(*it));
01562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;=&#32;cthis.begin();
01563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;(*it)+1;
01564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=aux.g_first();
01565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++it;
01566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((aux.g_second())!=&#32;spardigs())&#32;{
01567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;fin&#32;;&#32;++it&#32;)&#32;{
01568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_first(aux.g_second());
01569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_second(0);
01570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(aux&#32;==&#32;spardigs())&#32;<emphasis role="keywordflow">break</emphasis>;
01571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(*it);
01572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1a6575701ad34d79f67738bdef51c92a2d">push_back</link>(aux.g_first());
01574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1a6575701ad34d79f67738bdef51c92a2d">push_back</link>(aux.g_second());
01575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;((signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>)?vplus:vminus);
01577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs();
01578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
01580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l00083">int_num_t&lt; UINT_T, B &gt;::push_back()</link>.</para>
<para>
Referenciado por <link linkend="_l01475">int_num_t&lt; UINT_T, B &gt;::operator*=()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a3a812ddf5e23511d20f4b40f0a1d119e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a3a812ddf5e23511d20f4b40f0a1d119e_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ac325668599524297888380a9239225cb"/><section>
    <title>mC_Bm1()</title>
<indexterm><primary>mC_Bm1</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>mC_Bm1</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::mC_Bm1 ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01583 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01584 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cpy&#32;=&#32;(*this);
01585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;striterator&#32;fin&#32;=&#32;cpy.end();
01586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;striterator&#32;&#32;it&#32;=&#32;cpy.begin();
01587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;fin&#32;;&#32;++it&#32;)
01588 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*it)&#32;=&#32;(!(*it));
01589 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.signo&#32;=&#32;((cpy.signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>)?vplus:vminus);
01590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux&#32;=&#32;spardigs();
01591 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy;
01593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ac325668599524297888380a9239225cb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ae209e7a115353db1633459a602d24e0b"/><section>
    <title>num_int()<computeroutput>[1/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs();
00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.num_basic::clear();
00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.num_basic::push_back(<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t&lt;B&gt;</link>(0));
00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
<para>
Referenciado por <link linkend="_l01601">int_num_t&lt; UINT_T, B &gt;::abs()</link>, <link linkend="_l01610">int_num_t&lt; UINT_T, B &gt;::absp()</link>, <link linkend="_l00627">int_num_t&lt; UINT_T, B &gt;::Bm1_a_la_drcha()</link>, <link linkend="_l00613">int_num_t&lt; UINT_T, B &gt;::Bm1_a_la_izqda()</link>, <link linkend="_l00511">int_num_t&lt; UINT_T, B &gt;::ceros_a_la_izqda()</link>, <link linkend="_l00592">int_num_t&lt; UINT_T, B &gt;::digs_no_significativos()</link>, <link linkend="_l01660">int_num_t&lt; UINT_T, B &gt;::div2()</link>, <link linkend="_l01725">int_num_t&lt; UINT_T, B &gt;::div2p()</link>, <link linkend="_l01624">int_num_t&lt; UINT_T, B &gt;::divB()</link>, <link linkend="_l01642">int_num_t&lt; UINT_T, B &gt;::divBp()</link>, <link linkend="_l02079">int_num_t&lt; UINT_T, B &gt;::EuclidDiv()</link>, <link linkend="_l02126">int_num_t&lt; UINT_T, B &gt;::EuclidDivP()</link>, <link linkend="_l00584">int_num_t&lt; UINT_T, B &gt;::filled_of_all_digits_are_0()</link>, <link linkend="_l00576">int_num_t&lt; UINT_T, B &gt;::filled_of_all_digits_are_Bm1()</link>, <link linkend="_l01555">int_num_t&lt; UINT_T, B &gt;::mC_B()</link>, <link linkend="_l01582">int_num_t&lt; UINT_T, B &gt;::mC_Bm1()</link>, <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>, <link linkend="_l01534">int_num_t&lt; UINT_T, B &gt;::operator!()</link>, <link linkend="_l00663">int_num_t&lt; UINT_T, B &gt;::operator!=()</link>, <link linkend="_l00978">int_num_t&lt; UINT_T, B &gt;::operator%()</link>, <link linkend="_l01343">int_num_t&lt; UINT_T, B &gt;::operator%=()</link>, <link linkend="_l00912">int_num_t&lt; UINT_T, B &gt;::operator*()</link>, <link linkend="_l01275">int_num_t&lt; UINT_T, B &gt;::operator*=()</link>, <link linkend="_l00799">int_num_t&lt; UINT_T, B &gt;::operator+()</link>, <link linkend="_l02196">int_num_t&lt; UINT_T, B &gt;::operator++()</link>, <link linkend="_l01189">int_num_t&lt; UINT_T, B &gt;::operator+=()</link>, <link linkend="_l00855">int_num_t&lt; UINT_T, B &gt;::operator-()</link>, <link linkend="_l02274">int_num_t&lt; UINT_T, B &gt;::operator--()</link>, <link linkend="_l01232">int_num_t&lt; UINT_T, B &gt;::operator-=()</link>, <link linkend="_l00931">int_num_t&lt; UINT_T, B &gt;::operator/()</link>, <link linkend="_l01295">int_num_t&lt; UINT_T, B &gt;::operator/=()</link>, <link linkend="_l00765">int_num_t&lt; UINT_T, B &gt;::operator&lt;()</link>, <link linkend="_l00708">int_num_t&lt; UINT_T, B &gt;::operator&lt;=()</link>, <link linkend="_l00372">int_num_t&lt; UINT_T, B &gt;::operator=()</link>, <link linkend="_l00647">int_num_t&lt; UINT_T, B &gt;::operator==()</link>, <link linkend="_l00736">int_num_t&lt; UINT_T, B &gt;::operator&gt;()</link>, <link linkend="_l00680">int_num_t&lt; UINT_T, B &gt;::operator&gt;=()</link>, <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>, <link linkend="_l02411">int_num_t&lt; UINT_T, B &gt;::reduce_fracc()</link>, <link linkend="_l01703">int_num_t&lt; UINT_T, B &gt;::rem2()</link>, <link linkend="_l01769">int_num_t&lt; UINT_T, B &gt;::rem2p()</link>, <link linkend="_l01635">int_num_t&lt; UINT_T, B &gt;::remB()</link>, <link linkend="_l01805">int_num_t&lt; UINT_T, B &gt;::remBm1()</link>, <link linkend="_l01653">int_num_t&lt; UINT_T, B &gt;::remBp()</link> y <link linkend="_l00528">int_num_t&lt; UINT_T, B &gt;::unos_a_la_izqda()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae209e7a115353db1633459a602d24e0b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae209e7a115353db1633459a602d24e0b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a9f278fa0d5a6b8c1bcfdb8c6532715e9"/><section>
    <title>num_int()<computeroutput>[2/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (char ch)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;Char2Dig&lt;B&gt;(ch);
00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a9f278fa0d5a6b8c1bcfdb8c6532715e9_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1afe238bb5556c227702fa86b5d0fc0085"/><section>
    <title>num_int()<computeroutput>[3/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (const num_int &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=a.signo;
00144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=a.aux;
00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(a.size());
00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0;&#32;k&#32;&lt;&#32;a.size()&#32;;&#32;++k)
00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=a[k];
00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_afe238bb5556c227702fa86b5d0fc0085_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a7ce1c5264e0c3a3c44ab70b7c6150523"/><section>
    <title>num_int()<computeroutput>[4/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (const std::list&lt; dig &gt; &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;list&lt;dig&gt;::iterator&#32;it=arg.begin();
00222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;list&lt;dig&gt;::const_iterator&#32;itf=arg.end();
00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;itf&#32;;&#32;++it&#32;)
00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.push_back(*it);
00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a7ce1c5264e0c3a3c44ab70b7c6150523_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a486388fb8875a29054c71c3dd5f1ca06"/><section>
    <title>num_int()<computeroutput>[5/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (const std::vector&lt; dig &gt; &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(&#32;arg.size()&#32;);
00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;ix=0;&#32;ix&#32;&lt;&#32;arg.size()&#32;;&#32;++ix&#32;)
00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=arg[ix];
00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a486388fb8875a29054c71c3dd5f1ca06_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1afab6608baa9f5d4cd58703aaf9a7ee32"/><section>
    <title>num_int()<computeroutput>[6/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (const string &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(a.size());
00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;l=0;
00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((a[k]&lt;<emphasis role="charliteral">&apos;0&apos;</emphasis>)||(a[k]&#32;&gt;&#32;(<emphasis role="keywordtype">char</emphasis>(B-1)+<emphasis role="charliteral">&apos;0&apos;</emphasis>)))&#32;++k;
00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(k&#32;&gt;=&#32;a.size())&#32;{&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(0);
00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Exit=<emphasis role="keyword">true</emphasis>;
00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!Exit)&#32;{
00166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;(k&#32;&lt;&#32;a.size())&amp;&amp;(!Exit)&#32;;&#32;++k)&#32;{
00167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((a[k]&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>)&amp;&amp;(a[k]&#32;&lt;=&#32;(char(B-1)+<emphasis role="charliteral">&apos;0&apos;</emphasis>)))
00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[l]=Char2Dig&lt;B&gt;(a[k]);
00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++l;
00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_afab6608baa9f5d4cd58703aaf9a7ee32_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1adbe31357255b5c039d22ff0dbe48afc2"/><section>
    <title>num_int()<computeroutput>[7/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (dig a0)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a0;
00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_adbe31357255b5c039d22ff0dbe48afc2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1afd31333558c0bb1fac3d7a3333dc5cff"/><section>
    <title>num_int()<computeroutput>[8/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (dig a1, dig a0)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a0;
00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]=a1;
00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_afd31333558c0bb1fac3d7a3333dc5cff_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a8244d16e71dd32fc028ceae5bd163ec1"/><section>
    <title>num_int()<computeroutput>[9/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (dig a2, dig a1, dig a0)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(3);
00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a0;
00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]=a1;
00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[2]=a2;
00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a8244d16e71dd32fc028ceae5bd163ec1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aa828975d8442bd5ec18f43f4f42e2b83"/><section>
    <title>num_int()<computeroutput>[10/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><computeroutput>template&lt;typename Int_T &gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (Int_T a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;longitud&#32;=&#32;num_digs_max_base_B_en_Int_T&lt;Int_T,B&gt;();
00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(longitud);
00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;indice&#32;=&#32;0;
00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&gt;=0)&#32;{
00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;longitud;i++)&#32;cthis[i]=dig(0);
00341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>=0,coc=a;
00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(coc&#32;&gt;=&#32;B)&#32;{
00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;coc%B;
00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;UInt2Dig&lt;B&gt;(rem);
00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice++;
00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;=&#32;coc/B;
00348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;coc%B;
00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;UInt2Dig&lt;B&gt;(rem);
00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice++;
00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;longitud;i++)&#32;cthis[i]=dig(B-1);
00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>=0,coc=-a;
00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(coc&#32;&gt;=&#32;B)&#32;{
00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;coc%B;
00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;!(Int2Dig&lt;B&gt;(rem));
00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice++;
00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;=&#32;coc/B;
00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;!(Int2Dig&lt;B&gt;(coc));
00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++cthis;
00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cthis.signo&#32;=&#32;vplus;</emphasis>
00366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cthis.reduce();</emphasis>
00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aa828975d8442bd5ec18f43f4f42e2b83_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a5227f809c7e7b23f61318a82ece3ee94"/><section>
    <title>num_int()<computeroutput>[11/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (pardigs a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;a.g_first();
00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]&#32;=&#32;a.g_second();
00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a5227f809c7e7b23f61318a82ece3ee94_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a658b09d4b3089d07319e898c91139994"/><section>
    <title>num_int()<computeroutput>[12/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (sign_e s, const std::list&lt; dig &gt; &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=s;
00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(&#32;arg.size()&#32;);
00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::list&lt;dig&gt;::const_iterator&#32;it=arg.begin();
00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::list&lt;dig&gt;::const_iterator&#32;it_end=arg.end();
00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;it_end&#32;;&#32;++it&#32;)
00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.push_front(*it);
00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a658b09d4b3089d07319e898c91139994_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ac181f6b5e9a48b847383bd068994760f"/><section>
    <title>num_int()<computeroutput>[13/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (sign_e s, const std::vector&lt; dig &gt; &amp; arg, <link linkend="_int__num__t_8hpp_1a161d5c264828471eb6953fd0febc0ccf">forma_t</link> argforma = <computeroutput><link linkend="_int__num__t_8hpp_1a161d5c264828471eb6953fd0febc0ccfa4f005c0b220d0d145556380873d149cc">noraw</link></computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=s;
00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(&#32;arg.size()&#32;);
00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;ix=0;&#32;ix&#32;&lt;&#32;arg.size()&#32;;&#32;++ix&#32;){
00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=arg[ix];
00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(argforma==<link linkend="_int__num__t_8hpp_1a161d5c264828471eb6953fd0febc0ccfa4f005c0b220d0d145556380873d149cc">noraw</link>)&#32;cthis.reduce();
00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00010">noraw</link> y <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ac181f6b5e9a48b847383bd068994760f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a670bc907a69ae9886a4a157616eb59ca"/><section>
    <title>num_int()<computeroutput>[14/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (sign_e s, dig a0)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=s;
00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(vplus,0,a0);
00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=aux.g_uds();
00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(vplus,0,0);
00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a670bc907a69ae9886a4a157616eb59ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aaf3ce8859b4934b0f2ff857045947aa5"/><section>
    <title>num_int()<computeroutput>[15/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (sign_e s, dig a1, dig a0)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=s;
00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(vplus,0,0);
00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a0;
00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]=a1;
00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aaf3ce8859b4934b0f2ff857045947aa5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a10e5e0316befc37645141fc22b769528"/><section>
    <title>num_int()<computeroutput>[16/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (sign_e s, dig a2, dig a1, dig a0)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=s;
00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(vplus,0,0);
00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(3);
00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a0;
00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]=a1;
00259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[2]=a2;
00260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a10e5e0316befc37645141fc22b769528_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a48068ebe04d7903949d4e0072ee498c5"/><section>
    <title>num_int()<computeroutput>[17/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (sign_e s, pardigs a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.signo=s;
00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;a.g_first();
00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]&#32;=&#32;a.g_second();
00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a48068ebe04d7903949d4e0072ee498c5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ae067d8dffb3fb8963894dfca8173b4c4"/><section>
    <title>num_int()<computeroutput>[18/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (spardigs a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=a.g_sign();
00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;a.g_first();
00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]&#32;=&#32;a.g_second();
00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae067d8dffb3fb8963894dfca8173b4c4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aa4b349b6871e2d8e2b3b4bd004bc31d7"/><section>
    <title>num_int()<computeroutput>[19/19]</computeroutput></title>
<indexterm><primary>num_int</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>num_int</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::num_int (<link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link> a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;UInt2Dig&lt;B&gt;(a);
00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aa4b349b6871e2d8e2b3b4bd004bc31d7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a2f3c3db7d5472decaeb8ef735f01541e"/><section>
    <title>operator!()</title>
<indexterm><primary>operator!</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator!</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator! ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy(*<emphasis role="keyword">this</emphasis>);
01537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;striterator&#32;fin&#32;=&#32;cpy.end();
01538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;striterator&#32;&#32;it&#32;=&#32;cpy.begin();
01539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;fin&#32;;&#32;++it&#32;)
01540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*it)&#32;=&#32;(!(*it));
01541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.signo&#32;=&#32;((cpy.signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>)?vplus:vminus);
01542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux&#32;=&#32;spardigs();
01543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy;
01545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a2f3c3db7d5472decaeb8ef735f01541e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a0fa45dac193d9e3ccf9dcbd3a0f0a6bd"/><section>
    <title>operator!=()</title>
<indexterm><primary>operator!=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator!=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;<link linkend="_structint__num__t_1a2f3c3db7d5472decaeb8ef735f01541e">::operator!</link>= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00664 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00665 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisnsz&#32;=&#32;<link linkend="_structint__num__t_1a55203f0d36573721c63de3837f8d416e">digs_no_significativos</link>();
00666 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisvsz&#32;=&#32;(cthis.size())-thisnsz;
00667 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argnsz&#32;=&#32;arg.digs_no_significativos();
00668 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argvsz&#32;=&#32;arg.size()-argnsz;
00669 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((thisvsz&#32;&gt;&#32;argvsz)||(thisvsz&#32;&lt;&#32;argvsz)||(signo!=arg.signo))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00670 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00671 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;k=(thisvsz-1);k&gt;0;--k)
00672 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg[k]!=cthis[k])
00673 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00674 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg[0]!=&#32;cthis[0])
00675 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00676 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00677 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00678 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00592">int_num_t&lt; UINT_T, B &gt;::digs_no_significativos()</link> y <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a0fa45dac193d9e3ccf9dcbd3a0f0a6bd_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a958e81879bcf27742be664eaf019a125"/><section>
    <title>operator%()</title>
<indexterm><primary>operator%</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator%</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator% (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00978 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_int(this-&gt;<link linkend="_structint__num__t_1a94f6a0a608614642522b2d8fff91aff0">abs</link>());
00981 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
00982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
00983 
00984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int(arg.abs());
00985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
00986 
00987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;dvsor_int.ceros_a_la_drcha();&#32;<emphasis role="comment">//¿?</emphasis>
00988 
00989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
00990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.lst_digs.erase(0,cssor);<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
00991 
00992 
00993 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
00994 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
00995 
00996 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
00997 
00998 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
00999 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
01000 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;dvsor_int.size();
01001 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;longtsor;
01002 
01003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
01004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
01005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
01006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
01007 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
01008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
01009 
01010 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
01011 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
01012 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
01013 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>.lst_digs.insert(0,cssor,0);
01014 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;+=&#32;dvndo_fra;
01015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
01016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>;
01019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l01601">int_num_t&lt; UINT_T, B &gt;::abs()</link> y <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a958e81879bcf27742be664eaf019a125_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aff9076398c6852dc5249e2ab6dfa5500"/><section>
    <title>operator%=()</title>
<indexterm><primary>operator%=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator%=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator%= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*this).absp();
01346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>.reduce();
01348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_int(rem);
01349 
01350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int(arg.abs());
01351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
01352 
01353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;dvsor_int.ceros_a_la_drcha();&#32;<emphasis role="comment">//¿?</emphasis>
01354 
01355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
01356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.lst_digs.erase(0,cssor);<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
01357 
01358 
01359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
01360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
01361 
01362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
01363 
01364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
01365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
01366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;dvsor_int.size();
01367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;longtsor;
01368 
01369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
01370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
01371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
01372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
01373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
01374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
01375 
01376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
01377 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
01378 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
01379 
01380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>.lst_digs.insert(0,cssor,0);
01381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;+=&#32;dvndo_fra;
01382 
01383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>;
01384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aff9076398c6852dc5249e2ab6dfa5500_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a7f3774184a787970729029ccdbac6031"/><section>
    <title>operator&amp;=()</title>
<indexterm><primary>operator&amp;=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&amp;=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator&amp;= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_basic&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis+=arg;
00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_structint__num__t_1ae1144a6001a66b5fecad8debf5454bc2"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator* (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00913 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00914 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;sumatemp;
00915 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;multtemp;
00916 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;m1(cthis.abs());
00917 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m1.reduce();
00918 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;m2(arg.abs());
00919 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m2.reduce();
00920 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multtemp&#32;=&#32;cthis*m2[0];
00921 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sumatemp&#32;=&#32;multtemp;
00922 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;j&#32;=&#32;1&#32;;&#32;j&#32;&lt;&#32;m2.size()&#32;;&#32;++j)&#32;{
00923 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multtemp&#32;=&#32;cthis*m2[j];&#32;<emphasis role="comment">//&#32;num_int&#32;*&#32;dig_t</emphasis>
00924 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multtemp.insert(0,j,0);
00925 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sumatemp&#32;+=&#32;multtemp;
00926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00927 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo!=arg.signo)&#32;sumatemp.mC_B();
00928 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sumatemp;
00929 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae1144a6001a66b5fecad8debf5454bc2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ac16f8bd1c9be289861368780674163d0"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator* (dig a) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pardigs&#32;temp;
01164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=0;
01165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
01166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ret.signo==vminus)&#32;ret.mC_B();
01167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;(cthis.size())&#32;;&#32;++k&#32;)&#32;{
01168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;cthis[k]*a;
01169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;+=&#32;carry;
01170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=&#32;temp.g_first();
01171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=temp.g_second();
01172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry&#32;!=&#32;0)
01174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.insert((cthis.size())-1,1,carry);
01175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ret.signo==vminus)&#32;ret.mC_B();
01176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
01177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ac16f8bd1c9be289861368780674163d0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a4041caab018eb58e56fb521bf68df70f"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator* (pardigs a) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pardigs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp;
01038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=0;
01039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret(*<emphasis role="keyword">this</emphasis>);
01040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;(cthis.size()-1)&#32;;&#32;++k&#32;)&#32;{
01041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;cthis[k]*(a.g_first());
01042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;+=&#32;carry;
01043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=&#32;temp.g_first();
01044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=temp.g_second();
01045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry&#32;!=&#32;0)
01047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.insert((cthis.size())-1,1,carry);
01048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
01049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry&#32;=&#32;0;
01050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;((cthis.size())-1)&#32;;&#32;++k&#32;)&#32;{
01051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;cthis[k]*(a.g_second());
01052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;+=&#32;carry;
01053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.substr(k+1,ret.size()-1)+=&#32;temp.g_first();<emphasis role="comment">//¿?</emphasis>
01054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=temp.g_second();
01055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry&#32;!=&#32;0)
01057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.insert((cthis.size())-1,1,carry);
01058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
01059 
01060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vminus)&#32;ret.mC_B();
01061 
01062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
01063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a4041caab018eb58e56fb521bf68df70f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ab4f61bc56098580779f5fb4f8d52cf44"/><section>
    <title>operator*=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator*= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;multtemp;
01278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_ndo&#32;=&#32;signo;
01279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1acf8be3251610cf7365b5a7ae48dfa001">absp</link>();
01280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;m1&#32;=&#32;(*this);
01282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;m2(arg.abs());
01283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m2.reduce();
01284 
01285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;*=&#32;m2[0];
01286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;j&#32;=&#32;1&#32;;&#32;j&#32;&lt;&#32;m2.size()&#32;;&#32;++j)&#32;{
01287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multtemp&#32;=&#32;m1*m2[j];
01288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;multtemp.insert(0,j,0);
01289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis&#32;+=&#32;multtemp;
01290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn_ndo!=arg.signo)&#32;m1.mC_B();
01292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
01293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l01610">int_num_t&lt; UINT_T, B &gt;::absp()</link>, <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ab4f61bc56098580779f5fb4f8d52cf44_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a15fd56ca4bfffa62e6896bb3e0c8720c"/><section>
    <title>operator*=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator*= (dig arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pardigs&#32;temp;
01478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=0;
01479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;&#32;sgn&#32;=&#32;this-&gt;signo;
01480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1acf8be3251610cf7365b5a7ae48dfa001">absp</link>();
01481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;(cthis.size())&#32;;&#32;++k&#32;)&#32;{
01483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;cthis[k]*arg;
01484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;+=&#32;carry;
01485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=&#32;temp.g_first();
01486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=temp.g_second();
01487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry&#32;!=&#32;0)
01489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;insert((cthis.size())-1,1,carry);
01490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn==vminus)
01491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a3a812ddf5e23511d20f4b40f0a1d119e">mC_B</link>();
01492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
01493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l01610">int_num_t&lt; UINT_T, B &gt;::absp()</link>, <link linkend="_l01555">int_num_t&lt; UINT_T, B &gt;::mC_B()</link>, <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a15fd56ca4bfffa62e6896bb3e0c8720c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aaf1452877f71e57336b8faa91dd1e776"/><section>
    <title>operator*=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator*= (pardigs a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pardigs&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp;
01397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry&#32;=&#32;0;
01398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret&#32;=&#32;(*this);
01399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;cthis.size()&#32;;&#32;++k&#32;)&#32;{
01400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;cthis[k]*(a.g_first());
01401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;+=&#32;carry;
01402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=&#32;temp.g_first();
01403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=temp.g_second();
01404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry&#32;!=&#32;0)
01406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.insert((cthis.size())-1,1,carry);
01407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
01408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry&#32;=&#32;0;
01409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;((cthis.size())-1)&#32;;&#32;++k&#32;)&#32;{
01410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;cthis[k]*(a.g_second());
01411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;+=&#32;carry;
01412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.substr(k+1,ret.size()-1)+=&#32;temp.g_first();<emphasis role="comment">//¿?</emphasis>
01413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;carry=temp.g_second();
01414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(carry&#32;!=&#32;0)
01416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.insert((cthis.size())-1,1,carry);
01417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
01418 
01419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vminus)&#32;ret.mC_B();
01420 
01421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
01422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aaf1452877f71e57336b8faa91dd1e776_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a1fa5a610a675322a17233b696994276a"/><section>
    <title>operator+()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator+ (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00799 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00800 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00801 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;ret(cthis);
00802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
00803 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy(arg);
00804 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
00805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs_t&lt;B&gt;&#32;tempt();
00806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs_t&lt;B&gt;&#32;tempa();
00807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>*&#32;po&#32;=0;
00808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sza&#32;=&#32;arg.size();
00809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;szt&#32;=&#32;ret.size();
00810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;&#32;pszmin=0;
00811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;&#32;pszmax=0;
00812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sza&lt;=szt)&#32;{
00813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;sza;
00814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;szt;
00815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;ret;
00816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;szt;
00818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;sza;
00819 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;cpy;
00820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00821 
00822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmin&#32;=&#32;*pszmin;
00823 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmax&#32;=&#32;*pszmax;
00824 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;obj&#32;=&#32;*po;
00825 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
00826 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;spardigs();
00827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmin&#32;;&#32;++k)&#32;{
00828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_uds(ret[k]);
00829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_uds(arg[k]);
00830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
00831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
00832 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_uds();
00833 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
00834 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
00835 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_decs()
00836 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00837 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00838 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmax&#32;;&#32;++k)&#32;{
00839 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(obj[k]);
00840 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
00841 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_first();
00842 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
00843 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
00844 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_decs()
00845 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00846 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00847 
00848 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(ret.aux.g_uds());
00849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.push_back(ret.aux.g_decs());
00850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.signo=ret.aux.g_sign();
00851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;&#32;spardigs();
00852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
00853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a1fa5a610a675322a17233b696994276a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a9d17a82f0441ed16b2c59ec506d66a04"/><section>
    <title>operator+()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator+ (dig arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
01071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
01072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt();
01073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempa();
01074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>*&#32;po&#32;=0;
01075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sza&#32;=&#32;1;
01076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;szt&#32;=&#32;ret.lst_arg.size();
01077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;&#32;pszmin=0;
01078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;&#32;pszmax=0;
01079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sza&lt;=szt)&#32;{
01080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;sza;
01081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;szt;
01082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;ret;
01083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;szt;
01085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;sza;
01086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;arg;
01087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01088 
01089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmin&#32;=&#32;*pszmin;
01090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmax&#32;=&#32;*pszmax;
01091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;obj&#32;=&#32;*po;
01092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
01093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;spardigs();
01094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(ret[0]);
01095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_first(arg);
01096 
01097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;k=1&#32;;&#32;k&lt;szmin&#32;;&#32;++k)&#32;{
01098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(ret[k]);
01099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
01100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
01101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_first();
01102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
01103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
01104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_second()
01105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
01106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmax&#32;;&#32;++k)&#32;{
01108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;D&#32;=&#32;ret[k];
01109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(D);
01110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
01111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_first();
01112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
01113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
01114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_second()
01115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
01116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01117 
01118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.cthis.push_back(ret.aux.g_first());
01119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.cthis.push_back(ret.aux.g_second());
01120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.signo=ret.aux.g_sign();
01121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;&#32;spardigs();
01122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
01123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a9d17a82f0441ed16b2c59ec506d66a04_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1affa4d6ff03dfb310a7b6bda3ecc1eb7a"/><section>
    <title>operator++()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator++ ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;long_inic&#32;=&#32;cthis.size();
02199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(long_inic&gt;1){
02200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();}
02201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis==<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>(vminus,dig(B-1),dig(B-1))){
02202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
02203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
02204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=dig(0);
02205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;}
02208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;es_negativo&#32;=&#32;(signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>);
02209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=spardigs(vplus,0,1);
02211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(vplus,0,cthis[0]);
02212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;aux.g_uds();
02213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
02215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;i=1;
02217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;seguir&#32;and&#32;(i&lt;long_inic))&#32;{
02218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(vplus,0,cthis[i]);
02219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=(aux.g_uds());
02220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
02223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
02224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;seguir&#32;and&#32;(i&#32;&gt;=&#32;long_inic)&#32;)&#32;{
02226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(long_inic+1);
02227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=aux.g_uds();
02228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((seguir)and(es_negativo)?(signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>):(signo=vminus));<emphasis role="comment">//</emphasis>
02230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=(es_negativo?<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>:<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>);
02231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
02233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_affa4d6ff03dfb310a7b6bda3ecc1eb7a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a1edf8c750b0cc6f7494ac5ce0a88f720"/><section>
    <title>operator++()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator++ (int )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpThis(*<emphasis role="keyword">this</emphasis>);
02237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
02238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;long_inic&#32;=&#32;cthis.size();
02239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis==<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>(vminus,dig(B-1),dig(B-1))){
02240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
02241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
02242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=dig(0);
02243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpThis;
02246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;es_negativo&#32;=&#32;(signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>);
02248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=spardigs(vplus,0,1);
02250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(vplus,0,cthis[0]);
02251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;aux.g_uds();
02252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
02254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;i=1;
02256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;seguir&#32;and&#32;(i&lt;long_inic))&#32;{
02257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(vplus,0,cthis[i]);
02258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=(aux.g_uds());
02259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
02262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
02263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;seguir&#32;and&#32;(i&#32;&gt;=&#32;long_inic)&#32;)&#32;{
02265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(long_inic+1);
02266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=aux.g_uds();
02267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((seguir)and(es_negativo)?(signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>):(signo=vminus));<emphasis role="comment">//</emphasis>
02269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=(es_negativo?<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>:<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>);
02270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpThis;
02272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a1edf8c750b0cc6f7494ac5ce0a88f720_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1adac8cb6ab4d43634b44059a0d7a21dc4"/><section>
    <title>operator+=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator+= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;carg(arg.reduce());
01193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt;
01194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempa;
01195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;=0;
01196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sza&#32;=&#32;carg.size();
01197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;szt&#32;=&#32;cthis.size();
01198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;pszmin=0;
01199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;pszmax=0;
01200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sza&lt;=szt)&#32;{
01201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;sza;
01202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;szt;
01203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">this</emphasis>;
01204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;szt;
01206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;sza;
01207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;carg;
01208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;obj&#32;=&#32;(*po);
01210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_decs(<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t&lt;B&gt;</link>(0));
01211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_decs(0);
01212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmin&#32;=&#32;*pszmin;
01213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmax&#32;=&#32;*pszmax;
01214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
01215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmin&#32;;&#32;++k&#32;)&#32;{
01216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_uds(cthis[k]);
01217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_uds(carg[k]);
01218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
01219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=tempt.g_uds();
01220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&lt;szmax&#32;;&#32;++k)&#32;{
01222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(obj[k]);
01223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;(obj.aux);
01224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=tempt.g_first();
01225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_first(tempt.g_second());
01227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_second(0);
01228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
01230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_adac8cb6ab4d43634b44059a0d7a21dc4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a82d829e8d83d2300d289a51744b256ca"/><section>
    <title>operator+=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator+= (dig arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt();
01431 
01432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_second(0);
01433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;1;
01434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(cthis[0]);
01435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;spardigs(arg);
01436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=tempt.g_first();
01437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(tempt.g_second());
01438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&#32;&lt;&#32;cthis.size()&#32;;&#32;++k)&#32;{
01439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(0);
01440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
01441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=tempt.g_first();
01442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(tempt.g_second());
01443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_first(tempt.g_second());
01445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_second(0);
01446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
01448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a82d829e8d83d2300d289a51744b256ca_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a8baef8b2dde5755813320416f58699df"/><section>
    <title>operator-()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator- ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy(*<emphasis role="keyword">this</emphasis>);
01508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;striterator&#32;fin&#32;=&#32;cpy.end();
01510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;striterator&#32;&#32;it&#32;=&#32;cpy.begin();
01511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;fin&#32;;&#32;++it&#32;)
01512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;(*it)&#32;=&#32;(!(*it));
01513 
01514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;it&#32;=&#32;cpy.begin();
01515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux&#32;=&#32;(*it)+1;
01516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy[0]=cpy.aux.g_first();
01517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++it;
01518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cpy.aux.g_second())!=&#32;spardigs())&#32;{
01519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;fin&#32;;&#32;++it&#32;)&#32;{
01520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux.p_first(cpy.aux.g_second());
01521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux.p_second(0);
01522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cpy.aux&#32;==&#32;spardigs())&#32;<emphasis role="keywordflow">break</emphasis>;
01523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux&#32;+=&#32;spardigs(*it);
01524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.push_back(cpy.aux.g_first());
01526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.push_back(cpy.aux.g_second());
01527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.signo&#32;=&#32;((cpy.signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>)?vplus:vminus);
01529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.aux&#32;=&#32;spardigs();
01530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy;
01532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a8baef8b2dde5755813320416f58699df_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1abf1ec8aeeadefe6195d33e62435eca37"/><section>
    <title>operator-()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator- (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00855 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00856 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00857 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;ret;
00858 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy(-arg);
00859 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt();
00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempa();
00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>*&#32;po&#32;=0;
00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sza&#32;=&#32;arg.lst_arg.size();
00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;szt&#32;=&#32;ret.lst_arg.size();
00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;&#32;pszmin=0;
00867 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;&#32;pszmax=0;
00868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sza&lt;=szt)&#32;{
00869 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;sza;
00870 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;szt;
00871 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;ret;
00872 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00873 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;szt;
00874 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;sza;
00875 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;cpy;
00876 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00877 
00878 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmin&#32;=&#32;*pszmin;
00879 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmax&#32;=&#32;*pszmax;
00880 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;obj&#32;=&#32;*po;
00881 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
00882 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;spardigs();
00883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmin&#32;;&#32;++k)&#32;{
00884 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(ret[k]);
00885 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_first(arg[k]);
00886 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
00887 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
00888 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_first();
00889 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
00890 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
00891 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_second()
00892 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00893 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00894 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmax&#32;;&#32;++k)&#32;{
00895 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(obj[k]);
00896 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
00897 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_first();
00898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
00899 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
00900 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_second()
00901 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
00902 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00903 
00904 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.lst_digs.push_back(ret.aux.g_first());
00905 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.lst_digs.push_back(ret.aux.g_second());
00906 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.signo=ret.aux.g_sign();
00907 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;&#32;spardigs();
00908 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
00909 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_abf1ec8aeeadefe6195d33e62435eca37_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a8530f1cbf642af939f70b37e142e5f55"/><section>
    <title>operator-()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator- (dig arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;ret(*<emphasis role="keyword">this</emphasis>);
01128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.reduce();
01129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;cpy(-arg);
01130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt();
01131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempa();
01132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;szt&#32;=&#32;ret.lst_arg.size();
01133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
01134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;spardigs();
01135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(ret[0]);
01136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_first(arg.g_first());
01137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
01138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[0]&#32;=tempt.g_first();
01139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa&#32;=&#32;spardigs(vplus,0,tempt.g_second());
01140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;=&#32;spardigs(vplus,0,ret[1]);
01141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
01142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[1]&#32;=&#32;tempt.g_first();
01143 
01144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;k=2&#32;;&#32;k&#32;&lt;&#32;ret.lst_digs.size()&#32;;&#32;++k)&#32;{
01145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(ret[k]);
01146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
01147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret[k]=tempt.g_first();
01148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux=spardigs(tempt.g_sign(),
01149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;((tempt.g_sign()==vplus)?(0):(B-1)),
01150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.g_second()
01151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
01152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01153 
01154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.lst_digs.push_back(ret.aux.g_first());
01155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.lst_digs.push_back(ret.aux.g_second());
01156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.signo=ret.aux.g_sign();
01157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ret.aux&#32;=&#32;&#32;spardigs();
01158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;ret;
01159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a8530f1cbf642af939f70b37e142e5f55_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a0f0b3db6587b441868f2cccb2f4b014c"/><section>
    <title>operator--()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator-- ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;long_inic&#32;=&#32;cthis.size();
02277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BEGIN&#32;TRATAMIENTO&#32;DEL&#32;0</emphasis>
02278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis==<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>(vplus,dig(0),dig(0))){
02279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
02280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
02281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=dig(B-1);
02282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
02283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
02284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;es_negativo&#32;=&#32;(signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>);
02286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;END&#32;TRATAMIENTO&#32;DEL&#32;0</emphasis>
02287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BEGIN&#32;TRATAMIENTO&#32;DE&#32;POTENCIA&#32;DE&#32;B&#32;NEGATIVAS</emphasis>
02288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;es_pot_de_B_neg&#32;=&#32;<emphasis role="keyword">false</emphasis>;
02289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(es_negativo)&#32;{
02290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es_pot_de_B_neg&#32;=&#32;<emphasis role="keyword">true</emphasis>;
02291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;i=0&#32;;&#32;(i&#32;&lt;&#32;long_inic)&#32;and&#32;es_pot_de_B_neg&#32;;&#32;++i)
02292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es_pot_de_B_neg&#32;=&#32;es_pot_de_B_neg&#32;and&#32;(cthis[i]==dig(0));
02294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;Hemos&#32;calculado&#32;si&#32;es&#32;potencia&#32;de&#32;10&#32;negativa</emphasis>
02296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(es_pot_de_B_neg)&#32;{
02297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(long_inic+1);
02298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;i=0;&#32;i&#32;&lt;&#32;long_inic;&#32;++i)
02299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=dig(B-1);
02300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[long_inic]&#32;=&#32;dig(B-2);
02301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
02302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
02303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;Vemos&#32;que&#32;-000&#32;pasa&#32;a&#32;-8999</emphasis>
02304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;END&#32;TRATAMIENTO&#32;DE&#32;POTENCIA&#32;DE&#32;B&#32;NEGATIVAS</emphasis>
02305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=spardigs(vminus,dig(B-1),dig(B-1));
02307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux+=&#32;spardigs(vplus,0,cthis[0]);
02308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;aux.g_uds();
02309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(B-1);
02311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;i=1;
02313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;seguir&#32;and&#32;(i&lt;long_inic))&#32;{
02314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(vplus,0,cthis[i]);
02315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=(aux.g_uds());
02316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(B-1);
02319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
02320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;seguir&#32;and&#32;(i&#32;&gt;=&#32;long_inic)&#32;)&#32;{
02322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(long_inic+1);
02323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=aux.g_uds();
02324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=(es_negativo?<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>:<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>);
02326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
02328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a0f0b3db6587b441868f2cccb2f4b014c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aaaae8b092ad0edcf7bb36b11c22f81f7"/><section>
    <title>operator--()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator-- (int )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
02332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpThis(*<emphasis role="keyword">this</emphasis>);
02333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;long_inic&#32;=&#32;cthis.size();
02334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BEGIN&#32;TRATAMIENTO&#32;DEL&#32;0</emphasis>
02335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cthis==<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>(vplus,dig(0),dig(0))){
02336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
02337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
02338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=dig(B-1);
02339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
02340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpThis;
02341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;es_negativo&#32;=&#32;(signo==<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>);
02343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;END&#32;TRATAMIENTO&#32;DEL&#32;0</emphasis>
02344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;BEGIN&#32;TRATAMIENTO&#32;DE&#32;POTENCIA&#32;DE&#32;B&#32;NEGATIVAS</emphasis>
02345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;es_pot_de_B_neg&#32;=&#32;<emphasis role="keyword">false</emphasis>;
02346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(es_negativo)&#32;{
02347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es_pot_de_B_neg&#32;=&#32;<emphasis role="keyword">true</emphasis>;
02348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;i=0&#32;;&#32;(i&#32;&lt;&#32;long_inic)&#32;and&#32;es_pot_de_B_neg&#32;;&#32;++i)
02349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;es_pot_de_B_neg&#32;=&#32;es_pot_de_B_neg&#32;and&#32;(cthis[i]==dig(0));
02351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;Hemos&#32;calculado&#32;si&#32;es&#32;potencia&#32;de&#32;10&#32;negativa</emphasis>
02353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(es_pot_de_B_neg)&#32;{
02354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(long_inic+1);
02355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;i=0;&#32;i&#32;&lt;&#32;long_inic;&#32;++i)
02356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=dig(B-1);
02357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[long_inic]&#32;=&#32;dig(B-2);
02358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
02359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpThis;
02360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="comment">//&#32;Vemos&#32;que&#32;-000&#32;pasa&#32;a&#32;-8999</emphasis>
02361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;END&#32;TRATAMIENTO&#32;DE&#32;POTENCIA&#32;DE&#32;B&#32;NEGATIVAS</emphasis>
02362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=spardigs(vminus,dig(B-1),dig(B-1));
02364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux+=&#32;spardigs(vplus,0,cthis[0]);
02365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]&#32;=&#32;aux.g_uds();
02366 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(B-1);
02368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02369 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;i=1;
02370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(&#32;seguir&#32;and&#32;(i&lt;long_inic))&#32;{
02371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;+=&#32;spardigs(vplus,0,cthis[i]);
02372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=(aux.g_uds());
02373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(aux.g_decs());
02374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;seguir&#32;=&#32;(aux.g_uds()!=dig(0));
02375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(B-1);
02376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
02377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;seguir&#32;and&#32;(i&#32;&gt;=&#32;long_inic)&#32;)&#32;{
02379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(long_inic+1);
02380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[i]=aux.g_uds();
02381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=(es_negativo?<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>:<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>);
02383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
02384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpThis;
02385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aaaae8b092ad0edcf7bb36b11c22f81f7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1adcde21a88cbb4b810259e675944e1ec8"/><section>
    <title>operator-=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator-= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;carg((-arg).<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>());
01236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt();
01237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempa();
01238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>*&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;=0;
01239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;sza&#32;=&#32;carg.size();
01240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;szt&#32;=&#32;(cthis.size());
01241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;pszmin=0;
01242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;p_usint&#32;pszmax=0;
01243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sza&lt;=szt)&#32;{
01244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;sza;
01245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;szt;
01246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">this</emphasis>;
01247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmin&#32;=&#32;&amp;szt;
01249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pszmax&#32;=&#32;&amp;sza;
01250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;po&#32;&#32;&#32;&#32;&#32;=&#32;&amp;carg;
01251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;obj&#32;=&#32;(*po);
01253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_second(0);
01254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_second(0);
01255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmin&#32;=&#32;*pszmin;
01256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;&amp;&#32;szmax&#32;=&#32;*pszmax;
01257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;0;
01258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;k&lt;szmin&#32;;&#32;++k)&#32;{
01259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(cthis[k]);
01260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempa.p_first(carg[k]);
01261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;tempa;
01262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=tempt.g_first();
01263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&lt;szmax&#32;;&#32;++k)&#32;{
01265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(obj.lst_digs[k]);
01266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;(obj.aux);
01267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=tempt.g_first();
01268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_first(tempt.g_second());
01270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_second(0);
01271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
01273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_adcde21a88cbb4b810259e675944e1ec8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a7f13a2a6f67cf120d694d6c390d07572"/><section>
    <title>operator-=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator-= (dig arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dig&#32;arg_CB&#32;=&#32;(dig(B-1)-arg)+dig(1);
01454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;spardigs&#32;tempt();
01455 
01456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_second(0);
01457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k&#32;=&#32;1;
01458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(cthis[0]);
01459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;arg_CB;
01460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=tempt.g_first();
01461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(tempt.g_second());
01462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg==0)&#32;aux&#32;+=&#32;dig(B-1);
01463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(;&#32;k&#32;&lt;&#32;cthis.size()&#32;;&#32;++k)&#32;{
01464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt.p_first(0);
01465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tempt&#32;+=&#32;aux;
01466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=tempt.g_first();
01467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux&#32;=&#32;spardigs(tempt.g_second());
01468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_first(tempt.g_second());
01470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_second(0);
01471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465">reduce</link>();
01472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>);
01473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link> y <link linkend="_l02393">int_num_t&lt; UINT_T, B &gt;::reduce()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a7f13a2a6f67cf120d694d6c390d07572_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acc818e68d0ebebc9ee1a14c0a9506328"/><section>
    <title>operator/()</title>
<indexterm><primary>operator/</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator/ (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00931 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00932 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00933 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_ndo&#32;=&#32;signo;
00934 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_sor&#32;=&#32;arg.signo;
00935 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_int(this-&gt;<link linkend="_structint__num__t_1a94f6a0a608614642522b2d8fff91aff0">abs</link>());
00936 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
00937 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
00938 
00939 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int(arg.abs());
00940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
00941 
00942 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;dvsor_int.ceros_a_la_drcha();&#32;<emphasis role="comment">//¿?</emphasis>
00943 
00944 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
00945 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.lst_digs.erase(0,cssor);<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
00946 
00947 
00948 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
00949 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
00950 
00951 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
00952 
00953 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
00954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
00955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;dvsor_int.size();
00956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;longtsor;
00957 
00958 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
00959 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
00960 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
00961 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
00962 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
00963 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
00964 
00965 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
00966 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
00967 <emphasis role="comment"></emphasis>
00968 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;=&#32;rem.lst_digs.insert(0,cssor,0);</emphasis>
00969 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;+=&#32;dvndo_fra;</emphasis>
00970 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
00971 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn_ndo!=sgn_sor)&#32;dvndo_int.mC_B();
00972 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
00973 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
00974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
00975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dvndo_int;
00976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l01601">int_num_t&lt; UINT_T, B &gt;::abs()</link> y <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acc818e68d0ebebc9ee1a14c0a9506328_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a6087d5c5da71405c13e8e818a8cac6b0"/><section>
    <title>operator/=()</title>
<indexterm><primary>operator/=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator/=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator/= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_ndo&#32;=&#32;signo;
01298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn_sor&#32;=&#32;arg.signo;
01299 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;<link linkend="_structint__num__t_1acf8be3251610cf7365b5a7ae48dfa001">absp</link>();
01300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;dvndo_int&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
01302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>(dvndo_int);
01303 
01304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvsor_int(arg.abs());
01305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
01306 
01307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;cssor&#32;=&#32;dvsor_int.ceros_a_la_drcha();&#32;<emphasis role="comment">//¿?</emphasis>
01308 
01309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;dvndo_fra(dvndo_int.substr(0,cssor));
01310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.lst_digs.erase(0,cssor);<emphasis role="comment">//&#32;division&#32;por&#32;una&#32;potencia&#32;de&#32;B</emphasis>
01311 
01312 
01313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvsor_int.reduce();
01314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_int.reduce();
01315 
01316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;dvndo_fra.reduce();
01317 
01318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo&#32;&#32;=&#32;dvndo_int.size();
01319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtndo2&#32;=&#32;dvndo_fra.size();
01320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longtsor&#32;&#32;=&#32;dvsor_int.size();
01321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longsor&#32;&#32;&#32;=&#32;longtsor;
01322 
01323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;hemos&#32;dividido&#32;por&#32;los&#32;ceros&#32;del&#32;divisor&#32;(por&#32;una&#32;potencia&#32;de&#32;B)</emphasis>
01324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;tanto&#32;divisor&#32;como&#32;dividendo,&#32;obteniendo&#32;dvndo_int&#32;y&#32;dvsor_int&#32;como</emphasis>
01325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;cocientes&#32;enteros.</emphasis>
01326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;div_uno(rem,dvndo_int,dvsor_int,longtndo,longsor);
01327 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;ahora&#32;hacemos&#32;lo&#32;mismo&#32;con&#32;el&#32;cociente&#32;de&#32;las&#32;potencias&#32;de&#32;B&#32;del</emphasis>
01328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;dividendo&#32;obteniendo&#32;dvndo_fra</emphasis>
01329 
01330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;*</emphasis>
01331 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RemReal&#32;=&#32;RemObtenido*B^cssor&#32;+&#32;Dvndo_fra</emphasis>
01332 <emphasis role="comment"></emphasis>
01333 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;=&#32;rem.lst_digs.insert(0,cssor,0);</emphasis>
01334 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;rem&#32;+=&#32;dvndo_fra;</emphasis>
01335 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*&#32;*/</emphasis>
01336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(sgn_ndo!=sgn_sor)&#32;dvndo_int.mC_B();
01337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rehacer&#32;el&#32;resto&#32;tomando&#32;en&#32;cuenta&#32;los&#32;ceros&#32;quitados</emphasis>
01338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;acomodar&#32;el&#32;formato&#32;al&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;determinar&#32;el&#32;signo&#32;de&#32;la&#32;operacion</emphasis>
01340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dvndo_int;
01341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l01610">int_num_t&lt; UINT_T, B &gt;::absp()</link> y <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a6087d5c5da71405c13e8e818a8cac6b0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a6212907f79ef713205e6d09e5e340f2c"/><section>
    <title>operator&lt;()</title>
<indexterm><primary>operator&lt;</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&lt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator&lt; (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00766 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00767 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thissz&#32;&#32;=&#32;cthis.size();
00768 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisnsz&#32;=&#32;((thissz==1)?0:(cthis.digs_no_significativos()));
00769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;J&#32;vale&#32;&#32;&#32;&quot;&#32;&lt;&lt;&#32;cthis&#32;&lt;&lt;&#32;endl;</emphasis>
00770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisvsz&#32;=&#32;thissz-thisnsz;
00771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argsz&#32;&#32;=&#32;arg.size();
00772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argnsz&#32;=&#32;((argsz==1)?0:(arg.digs_no_significativos()));
00773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;I&#32;vale&#32;&#32;&#32;&quot;&#32;&lt;&lt;&#32;arg&#32;&lt;&lt;&#32;endl;</emphasis>
00774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argvsz&#32;=&#32;argsz-argnsz;
00775 
00776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vminus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vplus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vminus)){
00779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vplus)){
00783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;k=(thisvsz-1);k&gt;-1;--k)&#32;{
00787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&gt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&lt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00791 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a6212907f79ef713205e6d09e5e340f2c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a8a80c22f65c390355de7421e1ddd7d54"/><section>
    <title>operator&lt;=()</title>
<indexterm><primary>operator&lt;=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&lt;=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator&lt;= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thissz&#32;&#32;=&#32;cthis.size();
00711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisnsz&#32;=&#32;((thissz==1)?0:(cthis.digs_no_significativos()));
00712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;J&#32;vale&#32;&#32;&#32;&quot;&#32;&lt;&lt;&#32;cthis&#32;&lt;&lt;&#32;endl;</emphasis>
00713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisvsz&#32;=&#32;thissz-thisnsz;
00714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argsz&#32;&#32;=&#32;arg.size();
00715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argnsz&#32;=&#32;((argsz==1)?0:(arg.digs_no_significativos()));
00716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;I&#32;vale&#32;&#32;&#32;&quot;&#32;&lt;&lt;&#32;arg&#32;&lt;&lt;&#32;endl;</emphasis>
00717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argvsz&#32;=&#32;argsz-argnsz;
00718 
00719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vminus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vplus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vminus)){
00722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00724 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00725 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vplus)){
00726 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00727 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00728 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;k=(thisvsz-1);k&gt;-1;--k)&#32;{
00730 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&gt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00731 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&lt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00732 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00733 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00734 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a8a80c22f65c390355de7421e1ddd7d54_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a8cdc61cc457f067863755a8627f7b19b"/><section>
    <title>operator=()<computeroutput>[1/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const <link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t</link>&lt; B &gt; &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_sign(vplus);
00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(0);
00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(1);
00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a;
00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a8cdc61cc457f067863755a8627f7b19b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aeeedd95e69e5f62662b060823b3bded7"/><section>
    <title>operator=()<computeroutput>[2/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=a.signo;
00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=a.aux;
00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(a.size());
00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0;&#32;k&#32;&lt;&#32;a.size()&#32;;&#32;++k)
00379 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=a[k];
00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aeeedd95e69e5f62662b060823b3bded7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a9acb58f0efc3566801617544f7cf0f34"/><section>
    <title>operator=()<computeroutput>[3/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const num_uint&lt; B &gt; &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00386 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00389 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(a.size());
00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0;&#32;k&#32;&lt;&#32;a.size()&#32;;&#32;++k)
00391 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[k]=a[k];
00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a9acb58f0efc3566801617544f7cf0f34_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a88f785ba180ab05fc888f0e239edd220"/><section>
    <title>operator=()<computeroutput>[4/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const pardigs_t&lt; B &gt; &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_sign(vplus);
00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(0);
00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]=a.g_decs();
00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a.g_uds();
00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a88f785ba180ab05fc888f0e239edd220_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a27c84cf65ec38b837a61ba034fe4904e"/><section>
    <title>operator=()<computeroutput>[5/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const spardigs_t&lt; B &gt; &amp; a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=a.signo;
00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_sign(vplus);
00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_decs(0);
00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;aux.p_uds(0);
00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(2);
00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[1]=a.g_decs();
00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[0]=a.g_uds();
00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a27c84cf65ec38b837a61ba034fe4904e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acbcdc8b8891a1038bd87be6cb7a4078e"/><section>
    <title>operator=()<computeroutput>[6/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const std::list&lt; dig &gt; &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(&#32;arg.size()&#32;);
00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::list&lt;dig&gt;::const_iterator&#32;it=arg.begin();
00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">typename</emphasis>&#32;std::list&lt;dig&gt;::const_iterator&#32;it_end=arg.end();
00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;;&#32;it&#32;!=&#32;it_end&#32;;&#32;++it&#32;)
00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.push_front(*it);
00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acbcdc8b8891a1038bd87be6cb7a4078e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1adc2df3abaaff6ae0a4bc37ff90a0ad10"/><section>
    <title>operator=()<computeroutput>[7/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (const std::vector&lt; dig &gt; &amp; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(&#32;arg.size()&#32;);
00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;ix=0;&#32;ix&#32;&lt;&#32;arg.size()&#32;;&#32;++ix&#32;){
00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[ix]=arg[ix];
00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_adc2df3abaaff6ae0a4bc37ff90a0ad10_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a8d92e34d54ec97b31d037d46ee06a780"/><section>
    <title>operator=()<computeroutput>[8/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><computeroutput>template&lt;typename Int_T &gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator= (Int_T a)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.clear();
00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;longitud&#32;=&#32;num_digs_max_base_B_en_Int_T&lt;Int_T,B&gt;();
00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.resize(longitud);
00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;indice&#32;=&#32;0;
00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(a&gt;=0)&#32;{
00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;longitud;i++)&#32;cthis[i]=dig(0);
00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a8f78164b7293cf042eec95957a96a542">ullint</link>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>=0,coc=a;
00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(coc&#32;&gt;=&#32;B)&#32;{
00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;coc%B;
00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;UInt2Dig&lt;B&gt;(rem);
00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice++;
00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;=&#32;coc/B;
00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;coc%B;
00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;UInt2Dig&lt;B&gt;(rem);
00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice++;
00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i=0;i&lt;longitud;i++)&#32;cthis[i]=dig(B-1);
00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;signo=<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>=0,coc=-a;
00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(coc&#32;&gt;=&#32;B)&#32;{
00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a5cadb523cb6909f92350f70f124adfb8">rem</link>&#32;=&#32;coc%B;
00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;Int2Dig&lt;B&gt;(rem);
00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;indice++;
00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;coc&#32;=&#32;coc/B;
00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis[indice]&#32;=&#32;Int2Dig&lt;B&gt;(coc);
00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.mC_B_incondicionado();
00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.signo&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a8d92e34d54ec97b31d037d46ee06a780_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a3f6da26847b75caa02c9969f51702de8"/><section>
    <title>operator==()</title>
<indexterm><primary>operator==</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator==</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator== (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00647 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00648 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00649 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisnsz&#32;=&#32;cthis.digs_no_significativos();
00650 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisvsz&#32;=&#32;cthis.size()-thisnsz;
00651 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argnsz&#32;=&#32;arg.digs_no_significativos();
00652 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argvsz&#32;=&#32;arg.size()-argnsz;
00653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((thisvsz&#32;&gt;&#32;argvsz)||(thisvsz&#32;&lt;&#32;argvsz)||(signo!=arg.signo))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
00655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;k=(thisvsz-1);k&gt;0;--k)&#32;{
00656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg[k]!=cthis[k])&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((arg[0])!=(cthis[0]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00659 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00660 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00661 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a3f6da26847b75caa02c9969f51702de8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acb4f8554bc619a61d768b8b7467ddf46"/><section>
    <title>operator&gt;()</title>
<indexterm><primary>operator&gt;</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&gt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator&gt; (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00736 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00737 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00738 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thissz&#32;&#32;=&#32;cthis.size();
00739 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisnsz&#32;=&#32;((thissz==1)?0:(cthis.digs_no_significativos()));
00740 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisvsz&#32;=&#32;thissz-thisnsz;
00741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argsz&#32;&#32;=&#32;arg.size();
00742 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argnsz&#32;=&#32;((argsz==1)?0:(arg.digs_no_significativos()));
00743 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argvsz&#32;=&#32;argsz-argnsz;
00744 
00745 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vminus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00746 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vplus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vminus))
00748 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00749 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00750 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00751 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00752 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vplus))
00753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00754 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00755 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00756 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00757 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;k=(thisvsz-1);k&gt;-1;--k)
00758 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&gt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00760 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&lt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00761 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00762 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00763 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acb4f8554bc619a61d768b8b7467ddf46_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acec6fb387e79e65f37e779ffb18d8730"/><section>
    <title>operator&gt;=()</title>
<indexterm><primary>operator&gt;=</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&gt;=</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>bool <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::operator&gt;= (const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; arg) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00681 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
00682 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thissz&#32;&#32;=&#32;cthis.size();
00683 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisnsz&#32;=&#32;((thissz==1)?0:(cthis.digs_no_significativos()));
00684 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;J&#32;vale&#32;&#32;&#32;&quot;&#32;&lt;&lt;&#32;cthis&#32;&lt;&lt;&#32;endl;</emphasis>
00685 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;thisvsz&#32;=&#32;thissz-thisnsz;
00686 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argsz&#32;&#32;=&#32;arg.size();
00687 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argnsz&#32;=&#32;((argsz==1)?0:(arg.digs_no_significativos()));
00688 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//cout&#32;&lt;&lt;&#32;&quot;I&#32;vale&#32;&#32;&#32;&quot;&#32;&lt;&lt;&#32;arg&#32;&lt;&lt;&#32;endl;</emphasis>
00689 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;argvsz&#32;=&#32;argsz-argnsz;
00690 
00691 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vminus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00692 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vplus))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00693 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vminus)and(arg.signo&#32;==&#32;vminus)){
00694 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00695 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00696 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00697 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((signo&#32;==&#32;vplus)and(arg.signo&#32;==&#32;vplus)){
00698 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&gt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00699 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(thisvsz&#32;&lt;&#32;argvsz)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00700 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a4dd12bd8c212fa515a1c3ee359386acc">slint</link>&#32;k=(thisvsz-1);k&gt;-1;--k)&#32;{
00702 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&gt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;((cthis[k]&#32;&lt;&#32;arg[k]))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
00704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
00706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_acec6fb387e79e65f37e779ffb18d8730_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a6575701ad34d79f67738bdef51c92a2d"/><section>
    <title>push_back()</title>
<indexterm><primary>push_back</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>push_back</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>void <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::push_back (<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t</link>&lt; B &gt; arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;this-&gt;num_basic_t&lt;B&gt;::push_back(arg);
00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Referenciado por <link linkend="_l01555">int_num_t&lt; UINT_T, B &gt;::mC_B()</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a6575701ad34d79f67738bdef51c92a2d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1acafc6ec0215c9f6f09a33d9ee36734c5"/><section>
    <title>push_front()</title>
<indexterm><primary>push_front</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>push_front</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>void <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::push_front (<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t</link>&lt; B &gt; parg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_basic&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.num_basic::push_front(parg);
00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_structint__num__t_1a399984c0c867c6e3a5b15aaed4e1d465"/><section>
    <title>reduce()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>reduce</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>reduce</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::reduce ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;nsz&#32;=&#32;cthis.digs_no_significativos();
02396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longitud&#32;=&#32;cthis.size();
02397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((longitud==1)or(longitud==0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
02398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;pos_p1&#32;=&#32;longitud-nsz;
02399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis.erase(pos_p1,nsz);
02400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
<para>
Referenciado por <link linkend="_l01275">int_num_t&lt; UINT_T, B &gt;::operator*=()</link>, <link linkend="_l01189">int_num_t&lt; UINT_T, B &gt;::operator+=()</link> y <link linkend="_l01232">int_num_t&lt; UINT_T, B &gt;::operator-=()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a399984c0c867c6e3a5b15aaed4e1d465_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a399984c0c867c6e3a5b15aaed4e1d465_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a6798bee749c9972bd4440497ff48d9d1"/><section>
    <title>reduce()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>reduce</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>reduce</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::reduce ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpyreducida(cthis);
02405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;nsz&#32;=&#32;cpyreducida.digs_no_significativos();
02406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;longitud&#32;=&#32;cpyreducida.size();
02407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;pos&#32;=&#32;longitud-nsz;
02408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpyreducida.erase(pos,nsz);
02409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a6798bee749c9972bd4440497ff48d9d1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a80b19146b3ea979dd1f6a431b7a061fe"/><section>
    <title>reduce_fracc()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>reduce_fracc</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>reduce_fracc</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>const <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> &amp; <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::reduce_fracc ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02412 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;nsz&#32;=&#32;cthis.digs_fracc_no_significativos()-1;
02414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;pos&#32;=&#32;0;
02415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.erase(pos,nsz);
02416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis;
02417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a80b19146b3ea979dd1f6a431b7a061fe_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a77eb337c0667017330ac2c49c694fef8"/><section>
    <title>reduce_fracc()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>reduce_fracc</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>reduce_fracc</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::reduce_fracc ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
02421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpyreducida(cthis);
02422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;nsz&#32;=&#32;cpyreducida.digs_no_significativos()-1;
02423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;pos&#32;=&#32;0;
02424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpyreducida.erase(pos,nsz);
02425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpyreducida;
02426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a77eb337c0667017330ac2c49c694fef8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1aeb24d35b97a122413d6ae886f55d59e7"/><section>
    <title>rem2()</title>
<indexterm><primary>rem2</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>rem2</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>dig <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::rem2 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01703 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01704 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01705 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;signo;
01706 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy&#32;=&#32;cthis.reduce();
01707 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.absp();
01708 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01709 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(B%2==1)&#32;{
01710 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cpy.lst_digs.size()==1)
01711 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig::Rem2(cpy.lst_digs[0]);
01712 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01713 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;paridad&#32;=&#32;0;
01714 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;cpy.lst_digs.size()&#32;;&#32;++k&#32;)
01715 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paridad&#32;+=&#32;dig::Dig2UInt(dig::Rem2(cpy.lst_digs[k]));
01716 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paridad&#32;%=&#32;2;
01717 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig(paridad);
01718 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01719 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01720 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01721 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig::Rem2(cpy.lst_digs[0]);
01722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01723 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_aeb24d35b97a122413d6ae886f55d59e7_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ad5ba09cfe05ae18fbcb505b0e92b1745"/><section>
    <title>rem2p()</title>
<indexterm><primary>rem2p</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>rem2p</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>dig <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::rem2p ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01769 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01770 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;*<emphasis role="keyword">this</emphasis>;
01771 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;signo;
01772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.absp();
01773 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01774 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cpy&#32;=&#32;(*this);
01775 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(B%2==1)&#32;{
01776 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(cpy.size()==1)
01777 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig::Rem2(cpy.lst_digs[0]);
01778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01779 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;paridad&#32;=&#32;0;
01780 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;k=0&#32;;&#32;k&#32;&lt;&#32;cpy.size()&#32;;&#32;++k&#32;)
01781 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paridad&#32;+=&#32;dig::Dig2UInt(dig::Rem2(cpy[k]));
01782 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;paridad&#32;%=&#32;2;
01783 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig(paridad);
01784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01785 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01786 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
01787 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;dig::Rem2(cpy[0]);
01788 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01789 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ad5ba09cfe05ae18fbcb505b0e92b1745_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a4d4b2c2c862d358a897074e2afe9c298"/><section>
    <title>remB()</title>
<indexterm><primary>remB</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>remB</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>dig <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::remB ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01635 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01636 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cpy(*<emphasis role="keyword">this</emphasis>);
01637 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01638 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vminus)&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy.absp();
01639 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy.lst_digs[0];
01640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a4d4b2c2c862d358a897074e2afe9c298_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a7536efd30cc24248602b3083295a782c"/><section>
    <title>remBm1()</title>
<indexterm><primary>remBm1</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>remBm1</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>dig <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::remBm1 ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01805 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01806 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;cthis(*<emphasis role="keyword">this</emphasis>),suma;
01807 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn&#32;=&#32;signo;
01808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.abs();
01809 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.reduce();
01810 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suma.reduce();
01811 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suma.lst_digs.insert(0,1,0);
01812 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suma.lst_digs.erase(0,(cthis.size())-1);
01813 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
01814 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link>&#32;i&#32;=&#32;0&#32;;&#32;i&#32;&lt;&#32;cthis.size()&#32;;&#32;++i&#32;)&#32;{
01815 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suma&#32;+=&#32;cthis[i];
01816 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;suma.reduce();
01817 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
01818 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;(suma.size()&gt;1);
01819 
01820 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((suma[0]==0)||(suma[0]==(B-1)))&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
01821 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;suma[0];
01822 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a7536efd30cc24248602b3083295a782c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ae37121ea60fbd75600561e3bbef77194"/><section>
    <title>remBp()</title>
<indexterm><primary>remBp</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>remBp</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>dig <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::remBp ( )<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">01653 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
01654 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cpy&#32;=&#32;(*this);
01655 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cpy.reduce();
01656 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(signo==vminus)&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy.absp();
01657 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cpy.lst_digs[0];
01658 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_ae37121ea60fbd75600561e3bbef77194_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1ab4d080e8e63685dda079d97feadfcdd6"/><section>
    <title>resize()</title>
<indexterm><primary>resize</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>resize</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput>void <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::resize (<link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> arg)<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_basic&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;cthis.num_basic::resize(arg);
00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_structint__num__t_1a489e24fd874f049d247539eb02416338"/><section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>size</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;num_basic&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;cthis.num_basic::size();
00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting><para>
Referenciado por <link linkend="_l00545">int_num_t&lt; UINT_T, B &gt;::ceros_a_la_drcha()</link>, <link linkend="_l00511">int_num_t&lt; UINT_T, B &gt;::ceros_a_la_izqda()</link> y <link linkend="_l00561">int_num_t&lt; UINT_T, B &gt;::unos_a_la_drcha()</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a489e24fd874f049d247539eb02416338_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a9ffbfe2524e6104557827b766b800890"/><section>
    <title>unos_a_la_drcha()</title>
<indexterm><primary>unos_a_la_drcha</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>unos_a_la_drcha</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638">size_t</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::unos_a_la_drcha ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;num_uint&#32;&amp;&#32;cthis&#32;=&#32;(*this);</emphasis>
00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;sz=0;
00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;fin=this-&gt;<link linkend="_structint__num__t_1a489e24fd874f049d247539eb02416338">size</link>();
00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;finl&#32;=&#32;fin-1;
00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<emphasis role="keyword">operator</emphasis>[](finl)==0)&#32;{
00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=finl&#32;;&#32;(i&#32;&gt;=0)&#32;and&#32;(!Exit)&#32;;&#32;--i)&#32;{
00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(this-&gt;<emphasis role="keyword">operator</emphasis>[](i)==<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t&lt;B&gt;::max</link>)&#32;++sz;
00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sz;
00574 }
</programlisting><para>
Hace referencia a <link linkend="_l00046">int_num_t&lt; UINT_T, B &gt;::size()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a9ffbfe2524e6104557827b766b800890_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_structint__num__t_1a0f7c7d803d12ead8126beb05485022c3"/><section>
    <title>unos_a_la_izqda()</title>
<indexterm><primary>unos_a_la_izqda</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>unos_a_la_izqda</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><para><computeroutput><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link> <link linkend="_structint__num__t">int_num_t</link>&lt; UINT_T, B &gt;::unos_a_la_izqda ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">00528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&#32;&amp;&#32;cthis&#32;=&#32;(*this);
00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//digitos&#32;no&#32;significativos&#32;para&#32;números&#32;negativos</emphasis>
00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;Exit&#32;=&#32;<emphasis role="keyword">false</emphasis>;
00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;sz=0;
00533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;fin&#32;=&#32;cthis.size();
00534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=fin-1&#32;;&#32;(i&#32;&gt;=&#32;0)&#32;and&#32;(!Exit)&#32;;&#32;--i)&#32;{
00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;char_es_max&#32;=&#32;(cthis[i]==(<link linkend="_nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18">dig_t&lt;B&gt;::max_dig</link>()));
00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(char_es_max){
00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++sz;
00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;Exit=<emphasis role="keyword">true</emphasis>;
00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;sz;
00542 }
</programlisting><para>
Hace referencia a <link linkend="_l00133">int_num_t&lt; UINT_T, B &gt;::num_int()</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structint__num__t_a0f7c7d803d12ead8126beb05485022c3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentación de las funciones relacionadas y clases amigas</title>
<anchor xml:id="_structint__num__t_1a86f81a5b1d351d2424e16c2a6c522728"/><section>
    <title>operator&lt;&lt;</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><computeroutput>template&lt;const <link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link> Base&gt; </computeroutput><para><computeroutput>ostream &amp; operator&lt;&lt; (ostream &amp; os, <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&lt; Base &gt; arg)<computeroutput>[friend]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link>&#32;sz&#32;=&#32;arg.size();
02546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;int#&quot;</emphasis>
02547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;((arg.signo&#32;==&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>)?(<emphasis role="charliteral">&apos;+&apos;</emphasis>):(<emphasis role="stringliteral">&apos;-&apos;</emphasis>));
02548 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;k=sz-1&#32;;&#32;k&gt;-1&#32;;&#32;--k)&#32;{
02549 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;::&quot;</emphasis>
02550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link><emphasis role="keyword">&gt;</emphasis>(arg[k]());
02551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;os&#32;&lt;&lt;<emphasis role="stringliteral">&quot;#B&quot;</emphasis>
02553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><link linkend="_basic__types_8hpp_1aea9446a386112c2a90c00874130877df">usint</link><emphasis role="keyword">&gt;</emphasis>(Base)&#32;;
02554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;os;
02555 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_structint__num__t_1a4f6ccae9e31bfa06fed310d86da2e416"/><section>
    <title>operator&gt;&gt;</title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>int_num_t&lt; UINT_T, B &gt;</secondary></indexterm>
<indexterm><primary>int_num_t&lt; UINT_T, B &gt;</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;type_traits::unsigned_integral_c UINT_T, UINT_T B&gt; </computeroutput><computeroutput>template&lt;const <link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link> Base&gt; </computeroutput><para><computeroutput>istream &amp; operator&gt;&gt; (istream &amp; is, <link linkend="_structint__num__t_1ae209e7a115353db1633459a602d24e0b">num_int</link>&lt; Base &gt; &amp; arg)<computeroutput>[friend]</computeroutput></computeroutput></para><programlisting linenumbering="unnumbered">02437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
02438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">enum</emphasis>&#32;estado_e&#32;{e0,e1,e2,e3,e4,e5,e6,e7,e8,e9,e10,e11};
02439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vector&lt;string&gt;&#32;num(255);
02440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;num_sgn;
02441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">string</emphasis>&#32;num_base;
02442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;estado_e&#32;est_act&#32;=&#32;e0;
02443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link>&#32;i=0;
02444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;c;
02445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{
02446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;is&#32;&gt;&gt;&#32;c;
02447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">switch</emphasis>&#32;(est_act)&#32;{
02448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e0&#32;:
02449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;i&apos;</emphasis>)&#32;est_act&#32;=&#32;e1;
02450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e1&#32;:
02452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;n&apos;</emphasis>)&#32;est_act&#32;=&#32;e2;
02453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e2&#32;:
02456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;t&apos;</emphasis>)&#32;est_act&#32;=&#32;e3;
02457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e3&#32;:
02460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;#&apos;</emphasis>)&#32;est_act&#32;=&#32;e4;
02461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e4&#32;:
02464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c==<emphasis role="charliteral">&apos;1&apos;</emphasis>)||(c==<emphasis role="charliteral">&apos;0&apos;</emphasis>)||(c==<emphasis role="charliteral">&apos;-&apos;</emphasis>)||(c==<emphasis role="charliteral">&apos;+&apos;</emphasis>))&#32;{
02465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e5;
02466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_sgn.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
02467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e5&#32;:
02471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;:&apos;</emphasis>)&#32;est_act&#32;=&#32;e6;
02472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e6&#32;:
02475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;:&apos;</emphasis>)&#32;est_act&#32;=&#32;e7;
02476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e7&#32;:
02479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;{
02480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num[i].push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
02481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;:&apos;</emphasis>)&#32;{
02483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++i;
02484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e6;
02485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c==<emphasis role="charliteral">&apos;#&apos;</emphasis>)&#32;est_act&#32;=&#32;e8;
02487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act=e0;
02488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e8&#32;:
02490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(c&#32;==&#32;<emphasis role="charliteral">&apos;B&apos;</emphasis>)&#32;est_act&#32;=&#32;e9;
02491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e9&#32;:
02494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;{
02495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e10;
02496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_base.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
02497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e0;
02499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e10&#32;:
02501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((c&lt;=<emphasis role="charliteral">&apos;9&apos;</emphasis>)and(c&gt;=<emphasis role="charliteral">&apos;0&apos;</emphasis>))&#32;{
02502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;num_base.push_back(c-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
02503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;est_act&#32;=&#32;e11;
02505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">case</emphasis>&#32;e11&#32;:
02507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
02508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;default&#32;:
02509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;est_act&#32;=&#32;e0;
02510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;numero_base_recogido=0;
02512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(est_act==e11)&#32;{
02513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;k=num_base.size()&#32;;&#32;k&#32;&gt;&#32;0&#32;;&#32;--k&#32;)&#32;{
02514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;*=&#32;10;
02515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;+=&#32;num_base[k];
02516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;*=&#32;10;
02518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;numero_base_recogido&#32;+=&#32;num_base[0];
02519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(numero_base_recogido!=Base)&#32;est_act&#32;=&#32;e0;
02520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>&#32;((est_act!=e11)and(c!=<emphasis role="charliteral">&apos;\n&apos;</emphasis>));
02522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;basic_string&lt;&#32;dig_t&lt;Base&gt;&#32;&gt;&#32;digito;
02523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito.resize(i+1);
02524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a5cf78cc304f4de6824a26eb05aa832f2">uchint</link>&#32;j=0&#32;;&#32;j&#32;&lt;&#32;256&#32;;&#32;++j)&#32;{
02525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito[j]=0;
02526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<link linkend="_basic__types_8hpp_1a69aa29b598b851b0640aa225a9e5d61d">uint</link>&#32;k=num[j].<link linkend="_structint__num__t_1a489e24fd874f049d247539eb02416338">size</link>()&#32;;&#32;k&#32;&gt;&#32;0&#32;;&#32;--k&#32;)&#32;{
02527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito[j]&#32;*=&#32;10;
02528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito[j]&#32;+=&#32;(num[j][k]-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
02529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito[j]&#32;*=&#32;10;
02531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;digito[j]&#32;+=&#32;(num[j][0]-<emphasis role="charliteral">&apos;0&apos;</emphasis>);
02532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
02533 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8">sign_e</link>&#32;sgn;
02534 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((num_sgn[0]==<emphasis role="charliteral">&apos;1&apos;</emphasis>)&#32;||&#32;(num_sgn[0]==<emphasis role="charliteral">&apos;-&apos;</emphasis>))&#32;sgn&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8a664d33ce0500d45dc2e44770723ba7d1">vminus</link>;
02535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;sgn&#32;=&#32;<link linkend="_namespace_num_repr_1a192603e40b54371f4bebf61a4afa17e8aedd99b9b4a181ec16ae4194c9b065e8b">vplus</link>;
02536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg.signo&#32;=&#32;sgn;
02537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg.lst_digs&#32;=&#32;digito;
02538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;arg.aux&#32;=&#32;spardigs_t&lt;Base&gt;();
02539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;is;
02540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
</programlisting></section>
<para>
La documentación para esta estructura fue generada a partir del siguiente fichero:</para>
<link linkend="_int__num__t_8hpp">int_num_t.hpp</link></section>
</section>
