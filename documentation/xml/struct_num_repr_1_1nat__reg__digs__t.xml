<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="es">
  <compounddef id="struct_num_repr_1_1nat__reg__digs__t" kind="struct" language="C++" prot="public">
    <compoundname>NumRepr::nat_reg_digs_t</compoundname>
    <includes refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" local="no">nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp</includes>
    <templateparamlist>
      <param>
        <type>allowable_base_type_c</type>
        <declname>UINT_T</declname>
        <defname>UINT_T</defname>
      </param>
      <param>
        <type>UINT_T</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
      <param>
        <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
        <declname>L</declname>
        <defname>L</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1aceacfae33a2bdedd9b890f2766f9b5a9" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::SIG_UINT_T =  typename type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_UINT_T</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::SIG_UINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="16" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a9b443da6cd532ae6d0d5482d8f610737" kindref="member">type_traits::sig_SInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::SIG_SINT_T =  typename type_traits::sig_SInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_SINT_T</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::SIG_SINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="17" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_t =  dig_t&lt;UINT_T,B&gt;</definition>
        <argsstring></argsstring>
        <name>dig_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref>, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_N_t =  std::array&lt;dig_t,N&gt;</definition>
        <argsstring></argsstring>
        <name>base_N_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_N_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="23" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_t =  base_N_t&lt;L&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="24" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_base_N_op_t =  typename auxiliary_types::result_operation_t&lt;base_N_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_N_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_base_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="27" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_base_op_t =  typename auxiliary_types::result_operation_t&lt;base_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_base_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="30" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_N_digs_t =  nat_reg_digs_t&lt;UINT_T,B,N&gt;</definition>
        <argsstring></argsstring>
        <name>nat_reg_N_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_N_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="35" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_N_op_t =  typename auxiliary_types::result_operation_t&lt;nat_reg_N_digs_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_N_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="38" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_op_t =  typename auxiliary_types::result_operation_t&lt;nat_reg_digs_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="41" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; UINT_T, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::reg_ints_t =  typename std::array&lt;UINT_T,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_ints_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::reg_ints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="46" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a43e75c68765d5590c7f1427001c14352" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref>, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::reg_suints_t =  typename std::array&lt;SIG_UINT_T,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_suints_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::reg_suints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="49" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a28a9c34d899f9b23d36b531ebe88b683" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" kindref="member">SIG_SINT_T</ref>, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::reg_ssints_t =  typename std::array&lt;SIG_SINT_T,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_ssints_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::reg_ssints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="52" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1aceacfae33a2bdedd9b890f2766f9b5a9" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::SIG_UINT_T =  typename type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_UINT_T</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::SIG_UINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="16" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a9b443da6cd532ae6d0d5482d8f610737" kindref="member">type_traits::sig_SInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::SIG_SINT_T =  typename type_traits::sig_SInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_SINT_T</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::SIG_SINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="17" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_t =  dig_t&lt;UINT_T,B&gt;</definition>
        <argsstring></argsstring>
        <name>dig_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref>, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_N_t =  std::array&lt;dig_t,N&gt;</definition>
        <argsstring></argsstring>
        <name>base_N_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_N_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="23" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::base_t =  base_N_t&lt;L&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="24" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_base_N_op_t =  typename auxiliary_types::result_operation_t&lt;base_N_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_N_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_base_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="27" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_base_op_t =  typename auxiliary_types::result_operation_t&lt;base_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_base_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_base_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="30" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>&lt; UINT_T, B, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_N_digs_t =  nat_reg_digs_t&lt;UINT_T,B,N&gt;</definition>
        <argsstring></argsstring>
        <name>nat_reg_N_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_N_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="35" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt;, op, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_N_op_t =  typename auxiliary_types::result_operation_t&lt;nat_reg_N_digs_t&lt;N&gt;,op,N&gt;</definition>
        <argsstring></argsstring>
        <name>res_N_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_N_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="38" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8" kindref="member">binop_e</ref></type>
            <declname>op</declname>
            <defname>op</defname>
          </param>
        </templateparamlist>
        <type>typename <ref refid="struct_num_repr_1_1auxiliary__types_1_1result__operation__t" kindref="compound">auxiliary_types::result_operation_t</ref>&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref>, op, L &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::res_op_t =  typename auxiliary_types::result_operation_t&lt;nat_reg_digs_t,op,L&gt;</definition>
        <argsstring></argsstring>
        <name>res_op_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::res_op_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="41" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; UINT_T, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::reg_ints_t =  typename std::array&lt;UINT_T,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_ints_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::reg_ints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="46" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a43e75c68765d5590c7f1427001c14352" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref>, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::reg_suints_t =  typename std::array&lt;SIG_UINT_T,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_suints_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::reg_suints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="49" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__reg__digs__t_1a28a9c34d899f9b23d36b531ebe88b683" prot="public" static="no">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" kindref="member">SIG_SINT_T</ref>, N &gt;</type>
        <definition>using NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::reg_ssints_t =  typename std::array&lt;SIG_SINT_T,N&gt;</definition>
        <argsstring></argsstring>
        <name>reg_ssints_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::reg_ssints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="52" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_num_repr_1_1nat__reg__digs__t_1ac64515fd8233a9f394a3db92a91954e9" prot="private" static="no" mutable="no">
        <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_dc</definition>
        <argsstring></argsstring>
        <name>m_dc</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_dc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="55" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="59" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="59" bodyend="60"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2170" endline="2247">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2251" endline="2284">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="273" endline="274">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a0e0ce3574da31820f62617ff44a48ba7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="99" endline="105">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aced30ba689f6251588687cbc4891b055" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="141" endline="150">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B_m1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="61" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="61" bodyend="62"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2170" endline="2247">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2251" endline="2284">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4" compoundref="nat__reg__digs__t_8hpp" startline="2877" endline="2911">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b" compoundref="nat__reg__digs__t_8hpp" startline="2925" endline="2945">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a4348d3c7e66b4316c9336de940900b4f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="109" endline="113">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac1b7ea3317908fc13e2372226218f30c" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="125" endline="129">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1afa3463868582493cbae113570c005ff5" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="133" endline="137">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a11a8669870d26e8e0e4d0d2af3c814d8" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="220" endline="224">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a197912d151a7d43a251ec8c019701678" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="234" endline="238">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a72cde29ddb63c9bc1d77bd7ba9954e78" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="243" endline="247">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_pow_n_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="63" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="63" bodyend="64"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2170" endline="2247">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2251" endline="2284">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a207bbdbb5f8b3ba6fef2cbd0fb3b2fd4" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="117" endline="121">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aced30ba689f6251588687cbc4891b055" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="141" endline="150">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B_m1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a9fb67b33d8f8d153fce5b8bcc575f283" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="227" endline="231">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7b6093b0510c4fdf207e0db13556b410" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_max</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="65" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="65" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac474f6ef06fa9b772eb916dba6785145" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm2</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm2</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_Bm2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="67" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="67" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af7f4ff31f9ebe9f4ea61a2c1d3e33f31" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_submax</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_submax</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_submax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="69" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a70edaef36a22608963953cfb870c9381" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="71" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a10b62bcda139808daaba4d8d295027d0" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="73" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aaec621293aafe2333a44aae75d26f409" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="75" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abbe17a523c4b9a2244096891dd3ee307" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="77" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="77" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6e799b6bf51d69e92e9f267836022cf3" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_submax</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_submax</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_submax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="79" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="79" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab5277ff888e0a6c4ccc39cbe8f25c7cd" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_max</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="81" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="81" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3c96c91771da24227a62d426728c8f21" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="83" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="83" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a35bd4491adbd998178de7b0577317374" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="85" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="85" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab83b9db44f407ad0516572fa747b20f4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="87" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae60164c51b204fca341766c6bb762a48" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="89" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="89" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa0312de3e99cb31b17e36295710baa72" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_Bp1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bp1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="91" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="91" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0e0ce3574da31820f62617ff44a48ba7" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_0</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PARA EL TIPO-TEMPLATE BASE_N_T OBTENEMOS CONSTANTES INMEDIATAS TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="99" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="99" bodyend="105"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4348d3c7e66b4316c9336de940900b4f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_1</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="109" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="109" bodyend="113"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a207bbdbb5f8b3ba6fef2cbd0fb3b2fd4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_Bm1</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="117" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="117" bodyend="121"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac1b7ea3317908fc13e2372226218f30c" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_B</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="125" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="125" bodyend="129"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afa3463868582493cbae113570c005ff5" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; N))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="133" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="133" bodyend="137"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aced30ba689f6251588687cbc4891b055" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; N))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="141" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="141" bodyend="150"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9e76fca3636eb9c56b09cda38d61e2bc" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IDEM QUE ANTES PERO CON EL TIPO BASE_T ESPECIALIZANDO AL TIPO BASE_N_T&lt;L&gt; DONDE BASE_T == BASE_N_T&lt;L&gt; TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="155" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="155" bodyend="157"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="182" endline="184">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a94a069651e6f07f0b117db42d77d6895" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="159" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="159" bodyend="161"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="186" endline="188">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a62701d8d011fd069348c7ebeb888318a" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="163" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="163" bodyend="165"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="190" endline="192">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a78688c0779605ff2e70400c2cf83cf9f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="167" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="167" bodyend="169"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="194" endline="196">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0436673bf267b740051916a794c0b335" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_pow_n_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="171" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="171" bodyend="173"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="200" endline="202">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a830f3c3de58bb73633c9cff13b217ae3" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_pow_n_B_m1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="175" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="175" bodyend="177"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="206" endline="208">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCIONES INMEDIATAS QUE NOS DAN CONSTANTES DEL TIPO DE LA ACTUAL CLASE SE HACE CREANDO UNA VARIABLE RVALUE TEMPORAL CON LA FUNCION HOMOLOGA PARA BASE_T </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="182" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="182" bodyend="184"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a9e76fca3636eb9c56b09cda38d61e2bc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="155" endline="157">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_0</references>
        <referencedby refid="namespace_num_repr_1abc220e2b8550522f9cb96ecd95d172bb" compoundref="nat__reg__digs__t_8hpp" startline="3090" endline="3338">NumRepr::operator&gt;&gt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="186" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="186" bodyend="188"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a94a069651e6f07f0b117db42d77d6895" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="159" endline="161">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="190" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="190" bodyend="192"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a62701d8d011fd069348c7ebeb888318a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="163" endline="165">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="194" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="194" bodyend="196"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a78688c0779605ff2e70400c2cf83cf9f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="167" endline="169">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="200" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="200" bodyend="202"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a0436673bf267b740051916a794c0b335" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="171" endline="173">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="206" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="206" bodyend="208"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a830f3c3de58bb73633c9cff13b217ae3" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="175" endline="177">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B_m1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_0</qualifiedname>
        <briefdescription>
<para>ARRAYS DE ENTEROS (CONSTANTES EN TIEMPO DE COMPILACION INMEDIATAS) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="211" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="211" bodyend="217"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a11a8669870d26e8e0e4d0d2af3c814d8" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="220" endline="224">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a197912d151a7d43a251ec8c019701678" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="234" endline="238">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a9fb67b33d8f8d153fce5b8bcc575f283" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="227" endline="231">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a72cde29ddb63c9bc1d77bd7ba9954e78" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="243" endline="247">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_pow_n_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a11a8669870d26e8e0e4d0d2af3c814d8" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="220" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="220" bodyend="224"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9fb67b33d8f8d153fce5b8bcc575f283" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="227" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="227" bodyend="231"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a197912d151a7d43a251ec8c019701678" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="234" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="234" bodyend="238"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a72cde29ddb63c9bc1d77bd7ba9954e78" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="243" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="243" bodyend="247"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6173c51991a13f10e5608e51a8f06d8a" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="252" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="252" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::assign</definition>
        <argsstring>(base_t &amp;larg, Int_Type arg) noexcept</argsstring>
        <name>assign</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::assign</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) A UN BASE_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="707" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="707" bodyend="731"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="378" endline="380">NumRepr::type_traits::maxbase</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="735" endline="738">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a27d98c64f9ebb5af914f72b4cb46f457" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMPARACIONES ENTRE BASE_N_T Y DIG_T EN FORMA BASE_N_T&lt;N&gt; @ DIG_T STATIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1202" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1202" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae36250d4dfb237c42163dcfb75a85edc" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1214" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1214" bodyend="1222"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a871142259e72da7bdb23be2d1bb631e4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1227" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1227" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a695a0c3fc7ca2e33e09b7e307d35e59a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1239" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1239" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abba03f817df42b3ae6bef35737f4a348" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1251" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1251" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a76b7bc4da5a7fe5de1a5d71cae196912" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1263" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1263" bodyend="1271"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a15b6a642118ce4c9465ca861a0c7c610" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMPARACIONES ENTRE BASE_N_T Y BASE_N_T HETEROGENEOS EN GENERAL EN FORMA BASE_N_T&lt;N&gt; @ BASE_N_T&lt;M&gt; STATIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1279" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1279" bodyend="1301"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae03840c70392af70f692a7f447c93c18" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg)</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1306" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1306" bodyend="1308"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aea5400ccaefeacf64023a1a606af31f6" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1313" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1313" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa3d767ff05a632abc41c920fe558aa26" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1341" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1341" bodyend="1364"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a06c5c4901df7213d6b816d36f0295007" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1369" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1369" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aed85b3cc96fcfc122851baf8ee9ec0f8" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1377" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1377" bodyend="1380"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</definition>
        <argsstring>(base_t &amp;larg, const dig_t &amp;rarg) -&gt; typename std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, base_t const &amp; &gt; noexcept</argsstring>
        <name>m_add</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_add</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS | &amp; |= &amp;=. </para>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES BINARIAS CON/SIN TIPO RESULTADO OPERACIONES BINARIAS BASE_T @ DIG_T OPERATOR BASE_T += DIG_T CON NOMBRE M_ADDITION </para>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL POR DEFECTO</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>INICIALIZACION</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.CARRY</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2170" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2170" bodyend="2247"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1145" endline="1147">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</definition>
        <argsstring>(base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>m_sub</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_sub</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>OPERATOR BASE_T -= DIG_T CON NOMBRE M_SUB. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>COPIA DE RARG</para>
<para>CARRY INICIAL POR DEFECTO: NULO</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE RESTA RARG A LARG DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2251" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2251" bodyend="2284"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1135" endline="1137">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::add</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>add</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::add</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2287" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2287" bodyend="2290"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sub</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>sub</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sub</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2293" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2293" bodyend="2296"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="59" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="61" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="61" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="63" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7b6093b0510c4fdf207e0db13556b410" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_max</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="65" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="65" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac474f6ef06fa9b772eb916dba6785145" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm2</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm2</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_Bm2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="67" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="67" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af7f4ff31f9ebe9f4ea61a2c1d3e33f31" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>static consteval dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_submax</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_submax</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::dig_submax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="69" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a70edaef36a22608963953cfb870c9381" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="71" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a10b62bcda139808daaba4d8d295027d0" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="73" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aaec621293aafe2333a44aae75d26f409" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="75" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abbe17a523c4b9a2244096891dd3ee307" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="77" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="77" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6e799b6bf51d69e92e9f267836022cf3" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_submax</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_submax</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_submax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="79" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="79" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab5277ff888e0a6c4ccc39cbe8f25c7cd" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval UINT_T</type>
        <definition>static consteval UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ui_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_max</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ui_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="81" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="81" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3c96c91771da24227a62d426728c8f21" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="83" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="83" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a35bd4491adbd998178de7b0577317374" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="85" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="85" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab83b9db44f407ad0516572fa747b20f4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="87" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="87" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae60164c51b204fca341766c6bb762a48" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="89" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="89" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa0312de3e99cb31b17e36295710baa72" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
        <definition>static consteval SIG_UINT_T NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sui_Bp1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bp1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sui_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="91" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="91" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0e0ce3574da31820f62617ff44a48ba7" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_0</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PARA EL TIPO-TEMPLATE BASE_N_T OBTENEMOS CONSTANTES INMEDIATAS TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="99" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="99" bodyend="105"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4348d3c7e66b4316c9336de940900b4f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_1</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="109" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="109" bodyend="113"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a207bbdbb5f8b3ba6fef2cbd0fb3b2fd4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_Bm1</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="117" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="117" bodyend="121"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac1b7ea3317908fc13e2372226218f30c" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_B</qualifiedname>
    <requiresclause>(N&gt;=0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="125" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="125" bodyend="129"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afa3463868582493cbae113570c005ff5" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; N))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="133" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="133" bodyend="137"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aced30ba689f6251588687cbc4891b055" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static consteval base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_N_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_N_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_N_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; N))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="141" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="141" bodyend="150"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9e76fca3636eb9c56b09cda38d61e2bc" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IDEM QUE ANTES PERO CON EL TIPO BASE_T ESPECIALIZANDO AL TIPO BASE_N_T&lt;L&gt; DONDE BASE_T == BASE_N_T&lt;L&gt; TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="155" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a94a069651e6f07f0b117db42d77d6895" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="159" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a62701d8d011fd069348c7ebeb888318a" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="163" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a78688c0779605ff2e70400c2cf83cf9f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="167" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0436673bf267b740051916a794c0b335" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_pow_n_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="171" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a830f3c3de58bb73633c9cff13b217ae3" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static consteval base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_base_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_base_pow_n_B_m1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="175" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCIONES INMEDIATAS QUE NOS DAN CONSTANTES DEL TIPO DE LA ACTUAL CLASE SE HACE CREANDO UNA VARIABLE RVALUE TEMPORAL CON LA FUNCION HOMOLOGA PARA BASE_T </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="182" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="182" bodyend="184"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a9e76fca3636eb9c56b09cda38d61e2bc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="155" endline="157">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="186" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="186" bodyend="188"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a94a069651e6f07f0b117db42d77d6895" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="159" endline="161">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="190" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="190" bodyend="192"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a62701d8d011fd069348c7ebeb888318a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="163" endline="165">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="194" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="194" bodyend="196"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a78688c0779605ff2e70400c2cf83cf9f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="167" endline="169">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="200" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="200" bodyend="202"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a0436673bf267b740051916a794c0b335" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="171" endline="173">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>static consteval nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regd_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="206" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="206" bodyend="208"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a830f3c3de58bb73633c9cff13b217ae3" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="175" endline="177">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regd_base_pow_n_B_m1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_0</qualifiedname>
        <briefdescription>
<para>ARRAYS DE ENTEROS (CONSTANTES EN TIEMPO DE COMPILACION INMEDIATAS) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="211" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="211" bodyend="217"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a11a8669870d26e8e0e4d0d2af3c814d8" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="220" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="220" bodyend="224"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9fb67b33d8f8d153fce5b8bcc575f283" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="227" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="227" bodyend="231"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a197912d151a7d43a251ec8c019701678" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="234" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="234" bodyend="238"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a72cde29ddb63c9bc1d77bd7ba9954e78" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_pow_n_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_pow_n_B</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="243" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="243" bodyend="247"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="211" endline="217">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6173c51991a13f10e5608e51a8f06d8a" prot="public" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>consteval <ref refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" kindref="member">reg_ints_t</ref>&lt; L &gt;</type>
        <definition>static consteval reg_ints_t&lt; L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::regi_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::regi_pow_n_B_m1</qualifiedname>
    <requiresclause>((n&gt;=0)&amp;&amp;(n &lt; L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="252" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="252" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::assign</definition>
        <argsstring>(base_t &amp;larg, Int_Type arg) noexcept</argsstring>
        <name>assign</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::assign</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) A UN BASE_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="707" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="707" bodyend="731"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="378" endline="380">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a27d98c64f9ebb5af914f72b4cb46f457" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMPARACIONES ENTRE BASE_N_T Y DIG_T EN FORMA BASE_N_T&lt;N&gt; @ DIG_T STATIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1230" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1230" bodyend="1237"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae36250d4dfb237c42163dcfb75a85edc" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1242" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1242" bodyend="1250"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a871142259e72da7bdb23be2d1bb631e4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1255" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1255" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a695a0c3fc7ca2e33e09b7e307d35e59a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1267" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1267" bodyend="1274"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abba03f817df42b3ae6bef35737f4a348" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1279" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1279" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a76b7bc4da5a7fe5de1a5d71cae196912" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const dig_t &amp;rarg)</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1291" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1291" bodyend="1299"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a15b6a642118ce4c9465ca861a0c7c610" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>COMPARACIONES ENTRE BASE_N_T Y BASE_N_T HETEROGENEOS EN GENERAL EN FORMA BASE_N_T&lt;N&gt; @ BASE_N_T&lt;M&gt; STATIC </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1307" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1307" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae03840c70392af70f692a7f447c93c18" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg)</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1334" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1334" bodyend="1336"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aea5400ccaefeacf64023a1a606af31f6" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1341" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1341" bodyend="1364"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa3d767ff05a632abc41c920fe558aa26" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1369" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1369" bodyend="1392"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a06c5c4901df7213d6b816d36f0295007" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1397" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1397" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aed85b3cc96fcfc122851baf8ee9ec0f8" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1405" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1405" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</definition>
        <argsstring>(base_t &amp;larg, const dig_t &amp;rarg) -&gt; typename std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, base_t const &amp; &gt; noexcept</argsstring>
        <name>m_add</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_add</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS | &amp; |= &amp;=. </para>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES BINARIAS CON/SIN TIPO RESULTADO OPERACIONES BINARIAS BASE_T @ DIG_T OPERATOR BASE_T += DIG_T CON NOMBRE M_ADDITION </para>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL POR DEFECTO</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>INICIALIZACION</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.CARRY</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2198" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2198" bodyend="2275"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1145" endline="1147">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</definition>
        <argsstring>(base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>m_sub</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_sub</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>OPERATOR BASE_T -= DIG_T CON NOMBRE M_SUB. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>COPIA DE RARG</para>
<para>CARRY INICIAL POR DEFECTO: NULO</para>
<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>
<para>BUCLE FOR QUE RESTA RARG A LARG DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2279" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2279" bodyend="2312"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="63" endline="64">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1135" endline="1137">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::add</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>add</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::add</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2315" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2315" bodyend="2318"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::sub</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) noexcept</argsstring>
        <name>sub</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::sub</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2321" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2321" bodyend="2324"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab6a4b438c955cdff6d124d39aaec788c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::fediv</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; 1 &gt; &amp;rarg) -&gt; res_base_N_op_t&lt; binop_e::fediv &gt; noexcept</argsstring>
        <name>fediv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::fediv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1 &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2846" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2846" bodyend="2851"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval</type>
        <definition>consteval NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <briefdescription>
<para>CONSTRUCTOR POR DEFECTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="273" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="273" bodyend="274"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const std::initializer_list&lt; dig_t &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR POR LISTA DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="277" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="277" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const Ts &amp;... args) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;&amp;&amp;...)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR POR ARGUMENTOS DIGITOS SIN LIMITE: DEDUCE EL TIPO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="283" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="283" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR COPIA DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="361" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="361" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="368" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="368" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(Ints_type ... dig_pow_i) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>dig_pow_i</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR COPIA DESDE ARGUMENTOS ENTEROS SIN LIMITE : DEDUCE EL TIPO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="433" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="433" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR COPIA POR REFERENCIA CONSTANTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="439" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="439" bodyend="440"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR POR MOVIMIENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="445" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="445" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA CONST <emphasis>NO</emphasis> COPIABLE DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="452" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="452" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="463" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="463" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA MOVIMIENTO DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="474" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="474" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA EN LA QUE SE PUEDE COPIAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="485" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="485" bodyend="490"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR MOVIMIENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="496" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="496" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA EN LA QUE <emphasis>NO</emphasis> SE PUEDE COPIAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="507" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="507" bodyend="512"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_0</qualifiedname>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A CERO DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="652" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="652" bodyend="654"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="652" endline="654">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="695" endline="702">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="652" endline="654">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_Bm1</qualifiedname>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A B-1 DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="658" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="658" bodyend="660"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="658" endline="660">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="658" endline="660">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A VALOR DIG_T DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="664" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="664" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG_0 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="673" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="673" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="681" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="681" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="689" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="689" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const dig_t &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="695" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="695" bodyend="702"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="652" endline="654">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(Int_Type arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="735" column="34" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="735" bodyend="738"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="707" endline="731">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::assign</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N+L &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; N+L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>SUBREPR =&gt; SUB REPRESENTACION. </para>
        </briefdescription>
        <detaileddescription>
<para>FORMACION DE UN REG_M_DIGS_T&lt;M&gt; DESDE EL THIS REG_DIGS_T (L) Y REG_N_DIGS_T&lt;N&gt; EN SUS DOS FORMAS: (*THIS)SEGUIDO(ARG) Y (ARG)SEGUIDO(*THIS) : OPERACIONES DE CONCATENACION FORMACION DE UN REG_M_DIGS_T&lt;M&gt; DESDE EL THIS REG_DIGS_T (L) Y REG_N_DIGS_T&lt;N&gt; EN SUS DOS FORMAS: (*THIS)SEGUIDO(ARG) Y (ARG)SEGUIDO(*THIS) : OPERACIONES DE CONCATENACION NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT_INV(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT(DIG_T) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT_INV(DIG_T) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="891" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="891" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; L+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="897" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="897" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N+L &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; N+L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>cat_inv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat_inv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="905" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="905" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; L+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>cat_inv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat_inv</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="911" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="911" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; iend-ibegin &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::subrepr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subrepr</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::subrepr</qualifiedname>
    <requiresclause>((iend &lt;= L)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="919" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="919" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator Int_Type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Int_Type</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator Int_Type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="931" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="931" bodyend="944"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="378" endline="380">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</definition>
        <argsstring>() const</argsstring>
        <name>is_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1135" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1135" bodyend="1137"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1135" endline="1137">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1135" endline="1137">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2251" endline="2284">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_sub</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</definition>
        <argsstring>() const</argsstring>
        <name>is_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1140" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1140" bodyend="1142"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1140" endline="1142">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1140" endline="1142">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</definition>
        <argsstring>() const</argsstring>
        <name>is_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1145" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1145" bodyend="1147"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1145" endline="1147">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1145" endline="1147">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="2170" endline="2247">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_add</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</definition>
        <argsstring>() const</argsstring>
        <name>is_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1150" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1150" bodyend="1152"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1150" endline="1152">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1150" endline="1152">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</definition>
        <argsstring>() const</argsstring>
        <name>is_Bp1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1155" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1155" bodyend="1157"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1155" endline="1157">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1155" endline="1157">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2454172f796622228d0238a14bfba7cc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow_m1</definition>
        <argsstring>() const</argsstring>
        <name>is_B_pow_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow_m1</qualifiedname>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1162" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1162" bodyend="1164"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2b7eb96b8286969f0c1cb8a31f9e9ec8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow</definition>
        <argsstring>() const</argsstring>
        <name>is_B_pow</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow</qualifiedname>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1169" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1169" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9affc4906635a0803bf77af16c65dfaf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_1</definition>
        <argsstring>() const</argsstring>
        <name>is_filled_of_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1174" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1174" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac33e1f6d87472a368b38851aac245d33" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_Bm1</definition>
        <argsstring>() const</argsstring>
        <name>is_filled_of_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1179" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1179" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a45127fc7411537147f1bf4fc66e90710" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
            <declname>d</declname>
            <defname>d</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of</definition>
        <argsstring>() const</argsstring>
        <name>is_filled_of</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of</qualifiedname>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1186" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1186" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a164f15e36c8a63b4379bafda3b14c989" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1385" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1385" bodyend="1388"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aea0d7502c64527b4b97ef9fe0e99e404" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1393" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1393" bodyend="1396"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2cadc24c85fcfad11ff98735e03e7570" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1401" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1401" bodyend="1404"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa1b50464c47ec2306e132409e5c0d39b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1409" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1409" bodyend="1412"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a77baf6645dae586ff93ee57f9eb1abb8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1417" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1417" bodyend="1420"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8eced305bac59431a2c2c0bb10feb7be" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1425" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1425" bodyend="1428"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a154c67536bfad0e2ecdfea8d40521833" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1433" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1433" bodyend="1436"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a11543159dbaddde4dcb666056e758070" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1441" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1441" bodyend="1444"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4279a9edb1c26bf0bc08f853ededd183" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1449" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1449" bodyend="1452"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a75a06e97717d145137e875999180048e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1457" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1457" bodyend="1460"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae31ac5280cc4e0a252ad62a65f5b15c4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1465" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1465" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0c0115fb7a0bc33e71bc0b6848d97c5d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1473" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1473" bodyend="1476"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::strong_ordering</type>
        <definition>constexpr std::strong_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1482" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1482" bodyend="1490"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1496" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1496" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const dig_t &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1508" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1508" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ada5a7a435ca701c309e80ee6700264f1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::get</qualifiedname>
    <requiresclause>((I&lt;L)&amp;&amp;(I&gt;=0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1528" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1528" bodyend="1531"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a98300c5254e99ef248757aee3fa2966d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::put</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>put</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::put</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
    <requiresclause>((I&lt;L)&amp;&amp;(I&gt;=0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1536" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1536" bodyend="1540"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1543" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1543" bodyend="1546"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr dig_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t idx) noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1549" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1549" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
            <defval>UINT_T</defval>
          </param>
        </templateparamlist>
        <type>constexpr Int_Type</type>
        <definition>constexpr Int_Type NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator()</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator()</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1555" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1555" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</definition>
        <argsstring>() const</argsstring>
        <name>const_ref_data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::const_ref_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1571" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1571" bodyend="1573"/>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="439" endline="440">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aa1b50464c47ec2306e132409e5c0d39b" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1409" endline="1412">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a75a06e97717d145137e875999180048e" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1457" endline="1460">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a8eced305bac59431a2c2c0bb10feb7be" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1425" endline="1428">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1482" endline="1490">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="485" endline="490">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aea0d7502c64527b4b97ef9fe0e99e404" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1393" endline="1396">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a0c0115fb7a0bc33e71bc0b6848d97c5d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1473" endline="1476">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a11543159dbaddde4dcb666056e758070" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1441" endline="1444">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a52a4fc749cfd9844a635a0e7154b86d4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cpy_data</definition>
        <argsstring>() const</argsstring>
        <name>cpy_data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cpy_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1575" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1575" bodyend="1577"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1690" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1690" bodyend="1694"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1722" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1722" bodyend="1726"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1813" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1813" bodyend="1817"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1845" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1845" bodyend="1849"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1894" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1894" bodyend="1898"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1894" endline="1898">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1894" endline="1898">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1901" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1901" bodyend="1905"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1901" endline="1905">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1901" endline="1905">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1908" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1908" bodyend="1911"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1908" endline="1911">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1908" endline="1911">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1aeeaec5efd2f7238613f826e21de5edbf" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1920" endline="1923">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1914" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1914" bodyend="1917"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1914" endline="1917">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</references>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1914" endline="1917">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__reg__digs__t_1a3c3887dbbf256226834180e0e692d230" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1926" endline="1929">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aeeaec5efd2f7238613f826e21de5edbf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator!</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1920" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1920" bodyend="1923"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1908" endline="1911">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3c3887dbbf256226834180e0e692d230" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1926" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1926" bodyend="1929"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1914" endline="1917">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2019" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2019" bodyend="2024"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2027" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2027" bodyend="2031"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2034" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2034" bodyend="2037"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2040" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2040" bodyend="2044"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::rem_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2047" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2047" bodyend="2051"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2054" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2054" bodyend="2058"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mer_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2061" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2061" bodyend="2065"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2068" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2068" bodyend="2072"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2117" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2117" bodyend="2121"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2124" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2124" bodyend="2129"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2132" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2132" bodyend="2136"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2139" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2139" bodyend="2144"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2301" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2301" bodyend="2305"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2308" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2308" bodyend="2312"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2315" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2315" bodyend="2318"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">NumRepr::add</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2321" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2321" bodyend="2324"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">NumRepr::sub</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>consteval</type>
        <definition>consteval NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <briefdescription>
<para>CONSTRUCTOR POR DEFECTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="273" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="273" bodyend="274"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="59" endline="60">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const std::initializer_list&lt; dig_t &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR POR LISTA DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="277" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="277" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const Ts &amp;... args) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;&amp;&amp;...)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR POR ARGUMENTOS DIGITOS SIN LIMITE: DEDUCE EL TIPO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="283" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="283" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR COPIA DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="361" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="361" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="368" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="368" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(Ints_type ... dig_pow_i) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>dig_pow_i</declname>
        </param>
        <briefdescription>
<para>CONSTRUCTOR COPIA DESDE ARGUMENTOS ENTEROS SIN LIMITE : DEDUCE EL TIPO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="433" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="433" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR COPIA POR REFERENCIA CONSTANTE. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="439" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="439" bodyend="440"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::nat_reg_digs_t</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::nat_reg_digs_t</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>CONSTRUCTOR POR MOVIMIENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="445" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="445" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA CONST <emphasis>NO</emphasis> COPIABLE DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="452" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="452" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="463" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="463" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA MOVIMIENTO DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="474" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="474" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA REFERENCIA EN LA QUE SE PUEDE COPIAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="485" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="485" bodyend="490"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(nat_reg_N_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR MOVIMIENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="496" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="496" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA EN LA QUE <emphasis>NO</emphasis> SE PUEDE COPIAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="507" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="507" bodyend="512"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_0</qualifiedname>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A CERO DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="652" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="652" bodyend="654"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="652" endline="654">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_Bm1</qualifiedname>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A B-1 DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="658" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="658" bodyend="660"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="658" endline="660">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION DE LIMPIEZA A VALOR DIG_T DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="664" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="664" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG_0 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="673" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="673" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="681" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="681" bodyend="683"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
<para>OPERACION DE PONER A VALOR DIG EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="689" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="689" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(const dig_t &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="695" column="17" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="695" bodyend="702"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="652" endline="654">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator=</definition>
        <argsstring>(Int_Type arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator=</qualifiedname>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="735" column="34" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="735" bodyend="738"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="707" endline="731">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::assign</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N+L &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; N+L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>SUBREPR =&gt; SUB REPRESENTACION. </para>
        </briefdescription>
        <detaileddescription>
<para>FORMACION DE UN REG_M_DIGS_T&lt;M&gt; DESDE EL THIS REG_DIGS_T (L) Y REG_N_DIGS_T&lt;N&gt; EN SUS DOS FORMAS: (*THIS)SEGUIDO(ARG) Y (ARG)SEGUIDO(*THIS) : OPERACIONES DE CONCATENACION FORMACION DE UN REG_M_DIGS_T&lt;M&gt; DESDE EL THIS REG_DIGS_T (L) Y REG_N_DIGS_T&lt;N&gt; EN SUS DOS FORMAS: (*THIS)SEGUIDO(ARG) Y (ARG)SEGUIDO(*THIS) : OPERACIONES DE CONCATENACION NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT_INV(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT(DIG_T) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT_INV(DIG_T) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="891" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="891" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; L+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>cat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="897" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="897" bodyend="900"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N+L &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; N+L &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>cat_inv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat_inv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="905" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="905" bodyend="908"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; L+1 &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; L+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cat_inv</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>cat_inv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cat_inv</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="911" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="911" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; iend-ibegin &gt;</type>
        <definition>constexpr nat_reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::subrepr</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subrepr</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::subrepr</qualifiedname>
    <requiresclause>((iend &lt;= L)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="919" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="919" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator Int_Type</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator Int_Type</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator Int_Type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="931" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="931" bodyend="944"/>
        <references refid="namespace_num_repr_1_1type__traits_1a4f0f4b9cd9964b406c8299bcbd74f506" compoundref="basic__types_8hpp" startline="378" endline="380">NumRepr::type_traits::maxbase</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</definition>
        <argsstring>() const</argsstring>
        <name>is_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1163" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1163" bodyend="1165"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1135" endline="1137">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</definition>
        <argsstring>() const</argsstring>
        <name>is_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1168" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1168" bodyend="1170"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1140" endline="1142">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</definition>
        <argsstring>() const</argsstring>
        <name>is_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1173" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1173" bodyend="1175"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1145" endline="1147">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</definition>
        <argsstring>() const</argsstring>
        <name>is_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1178" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1178" bodyend="1180"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1150" endline="1152">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</definition>
        <argsstring>() const</argsstring>
        <name>is_Bp1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1183" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1183" bodyend="1185"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1155" endline="1157">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2454172f796622228d0238a14bfba7cc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow_m1</definition>
        <argsstring>() const</argsstring>
        <name>is_B_pow_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow_m1</qualifiedname>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1190" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1190" bodyend="1192"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2b7eb96b8286969f0c1cb8a31f9e9ec8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow</definition>
        <argsstring>() const</argsstring>
        <name>is_B_pow</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow</qualifiedname>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1197" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1197" bodyend="1199"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9affc4906635a0803bf77af16c65dfaf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_1</definition>
        <argsstring>() const</argsstring>
        <name>is_filled_of_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1202" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1202" bodyend="1204"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac33e1f6d87472a368b38851aac245d33" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_Bm1</definition>
        <argsstring>() const</argsstring>
        <name>is_filled_of_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1207" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1207" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a45127fc7411537147f1bf4fc66e90710" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
            <declname>d</declname>
            <defname>d</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of</definition>
        <argsstring>() const</argsstring>
        <name>is_filled_of</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of</qualifiedname>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1214" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1214" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a164f15e36c8a63b4379bafda3b14c989" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1413" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1413" bodyend="1416"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aea0d7502c64527b4b97ef9fe0e99e404" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator==</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1421" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1421" bodyend="1424"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2cadc24c85fcfad11ff98735e03e7570" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1429" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1429" bodyend="1432"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa1b50464c47ec2306e132409e5c0d39b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1437" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1437" bodyend="1440"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a77baf6645dae586ff93ee57f9eb1abb8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1445" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1445" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8eced305bac59431a2c2c0bb10feb7be" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1453" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1453" bodyend="1456"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a154c67536bfad0e2ecdfea8d40521833" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1461" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1461" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a11543159dbaddde4dcb666056e758070" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1469" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1469" bodyend="1472"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4279a9edb1c26bf0bc08f853ededd183" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1477" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1477" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a75a06e97717d145137e875999180048e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1485" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1485" bodyend="1488"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae31ac5280cc4e0a252ad62a65f5b15c4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1493" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1493" bodyend="1496"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0c0115fb7a0bc33e71bc0b6848d97c5d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1501" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1501" bodyend="1504"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::strong_ordering</type>
        <definition>constexpr std::strong_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1510" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1510" bodyend="1518"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1571" endline="1573">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1524" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1524" bodyend="1532"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const dig_t &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1536" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1536" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ada5a7a435ca701c309e80ee6700264f1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::get</qualifiedname>
    <requiresclause>((I&lt;L)&amp;&amp;(I&gt;=0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1556" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1556" bodyend="1559"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a98300c5254e99ef248757aee3fa2966d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::put</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>put</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::put</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
    <requiresclause>((I&lt;L)&amp;&amp;(I&gt;=0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1564" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1564" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
        <definition>constexpr dig_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1571" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1571" bodyend="1574"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr dig_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator[]</definition>
        <argsstring>(size_t idx) noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator[]</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1577" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1577" bodyend="1580"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
            <defval>UINT_T</defval>
          </param>
        </templateparamlist>
        <type>constexpr Int_Type</type>
        <definition>constexpr Int_Type NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator()</definition>
        <argsstring>(size_t idx) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator()</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1583" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1583" bodyend="1586"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::const_ref_data</definition>
        <argsstring>() const</argsstring>
        <name>const_ref_data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::const_ref_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1599" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1599" bodyend="1601"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a52a4fc749cfd9844a635a0e7154b86d4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::cpy_data</definition>
        <argsstring>() const</argsstring>
        <name>cpy_data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::cpy_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1603" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1603" bodyend="1605"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1718" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1718" bodyend="1722"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1750" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1750" bodyend="1754"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1841" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1841" bodyend="1845"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1873" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1873" bodyend="1877"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1922" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1922" bodyend="1926"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1894" endline="1898">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1929" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1929" bodyend="1933"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1901" endline="1905">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1936" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1936" bodyend="1939"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1908" endline="1911">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1942" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1942" bodyend="1945"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1914" endline="1917">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aeeaec5efd2f7238613f826e21de5edbf" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator!</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator!</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator!</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1948" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1948" bodyend="1951"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1908" endline="1911">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3c3887dbbf256226834180e0e692d230" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1954" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1954" bodyend="1957"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="1914" endline="1917">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2047" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2047" bodyend="2052"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2055" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2055" bodyend="2059"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2062" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2062" bodyend="2065"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2068" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2068" bodyend="2072"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::rem_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2075" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2075" bodyend="2079"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2082" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2082" bodyend="2086"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(size_t n) const noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mer_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2089" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2089" bodyend="2093"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2096" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2096" bodyend="2100"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2145" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2145" bodyend="2149"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2152" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2152" bodyend="2157"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2160" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2160" bodyend="2164"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2167" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2167" bodyend="2172"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2329" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2329" bodyend="2333"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2336" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2336" bodyend="2340"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2343" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2343" bodyend="2346"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">NumRepr::add</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const dig_t &amp;rarg) noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2349" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2349" bodyend="2352"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">NumRepr::sub</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad75f5d976f829391ff1a2dd444ada770" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2821" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2821" bodyend="2826"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a22fe395b3bc039501e85f32739585378" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2829" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2829" bodyend="2834"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a66df3998850226ded5adad90ba303519" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2837" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2837" bodyend="2842"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad662b6de3a00cd05bd8360af261578af" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator/</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator/</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator/</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>DIVISION BY A DIGIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2855" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2855" bodyend="2858"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">NumRepr::fediv</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a19230c6b73d80f18d23b299450d2a6d0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator%</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator%</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator%</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>REMAINDER BY A DIGIT. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2862" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2862" bodyend="2865"/>
        <references refid="namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a72d39095b29792b4a7229408d6edb5c9">NumRepr::fediv</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2877" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2877" bodyend="2911"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2f2b61989451de1806071e761547e75e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2916" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2916" bodyend="2920"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; cparg pasa a ser el complemento a la base menos 1 de cparg</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2925" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2925" bodyend="2945"/>
        <references refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="61" endline="62">NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::dig_1</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a88e0cbd81bf9591a474869c5abd7579b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2950" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2950" bodyend="2954"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1abb76020807fd7517e6c238c41291d830" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*=</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2959" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2959" bodyend="2968"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0e87dc1755fe87fbbb6a6ce6a32b5d51" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const nat_reg_digs_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2973" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2973" bodyend="2977"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2e993a7ba4bced5c0294564e2ba67999" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>TO DO. </para>
        </briefdescription>
        <detaileddescription>
<para>TO DO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2998" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2998" bodyend="3003"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a962ba532424e77c124ebc9fbde8d75cc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3007" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3007" bodyend="3012"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2244f1f8ec6816d363690387c8e24e5e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3016" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3016" bodyend="3021"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afcfbc7a19a2913245aeca67444ecbdc7" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator+</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3025" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3025" bodyend="3030"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4c2bf9b5eb73071ee089b28f26de7ace" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator-</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3034" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3034" bodyend="3039"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab80945af6751b25477521685c680b0a0" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator*</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; N &gt; &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator*</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" kindref="member">nat_reg_N_digs_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3043" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3043" bodyend="3048"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac9064422cde6b378fe3c6242e41c0e9c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref></type>
        <definition>constexpr nat_reg_digs_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator%</definition>
        <argsstring>(const nat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator%</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator%</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t" kindref="compound">nat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="3051" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="3051" bodyend="3068"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS FUNCION DELEGADA PARA COPIA DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="294" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="294" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="318" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="318" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2b4150202b36f2f18d4dc799dbef7cb0" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const nat_reg_n_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const nat_reg_n_digs_t&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA COPIA DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="342" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa75969f7c19583ed5ef8b5efad2a73d6" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(nat_reg_n_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type>nat_reg_n_digs_t&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="351" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a14c0cc6849d454e1bb6ca66ae4a636d9" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ref_data</definition>
        <argsstring>() const</argsstring>
        <name>ref_data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ref_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1562" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1562" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac70486564928dd63a6a34f23c905020e" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> *</type>
        <definition>constexpr base_t * NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1566" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1566" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aad1d8c1e13e2d1eee6a76d483d2a99c5" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::predecrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::sub &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>predecrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::predecrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>BORROW INICIAL POR DEFECTO</para>
<para>RESTA 1 A ARG EN IDX == 0</para>
<para>BUCLE FOR QUE RESTA A ARG UN 1 DESDE IDX=1 A IDX=L-1</para>
<para>CREAMOS EL RETORNO RET</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.BORROW</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>RESTA 1 A ARG EN IDX == 0</para>
<para>BUCLE FOR QUE RESTA BORROW A ARG [DESDE 1 EN IDX=0] DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1732" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1732" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aab7c3322a8fa6bb7306e44889721a895" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::postdecrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::sub &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>postdecrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::postdecrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1823" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1823" bodyend="1840"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aaa978be1e9e2a501f1ccb332acb5c4b4" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</definition>
        <argsstring>(dig_t arg) const -&gt; std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::mult &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>mult</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mult</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES &apos;@&apos;(REG_DIGS_T,DIG_T)-&gt;RESULT_TYPE&lt;&apos;@&apos;&gt; &apos;@&apos; = MULT </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2332" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2332" bodyend="2442"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS FUNCION DELEGADA PARA COPIA DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="294" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="294" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Z &lt; W or Z == W</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="318" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="318" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2b4150202b36f2f18d4dc799dbef7cb0" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::copy_arg_N</definition>
        <argsstring>(const nat_reg_n_digs_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::copy_arg_N</qualifiedname>
        <param>
          <type>const nat_reg_n_digs_t&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA COPIA DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="342" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="342" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa75969f7c19583ed5ef8b5efad2a73d6" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::move_arg_N</definition>
        <argsstring>(nat_reg_n_digs_t&lt; N &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::move_arg_N</qualifiedname>
        <param>
          <type>nat_reg_n_digs_t&lt; N &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="351" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="351" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a14c0cc6849d454e1bb6ca66ae4a636d9" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>constexpr base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::ref_data</definition>
        <argsstring>() const</argsstring>
        <name>ref_data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::ref_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1590" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1590" bodyend="1592"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac70486564928dd63a6a34f23c905020e" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> *</type>
        <definition>constexpr base_t * NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1594" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1594" bodyend="1596"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aad1d8c1e13e2d1eee6a76d483d2a99c5" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::predecrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::sub &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>predecrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::predecrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>BORROW INICIAL POR DEFECTO</para>
<para>RESTA 1 A ARG EN IDX == 0</para>
<para>BUCLE FOR QUE RESTA A ARG UN 1 DESDE IDX=1 A IDX=L-1</para>
<para>CREAMOS EL RETORNO RET</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.BORROW</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>RESTA 1 A ARG EN IDX == 0</para>
<para>BUCLE FOR QUE RESTA BORROW A ARG [DESDE 1 EN IDX=0] DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1760" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1760" bodyend="1836"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aab7c3322a8fa6bb7306e44889721a895" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::postdecrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::sub &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>postdecrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::postdecrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1851" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1851" bodyend="1868"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aaa978be1e9e2a501f1ccb332acb5c4b4" prot="private" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mult</definition>
        <argsstring>(dig_t arg) const -&gt; std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::mult &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>mult</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mult</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES &apos;@&apos;(REG_DIGS_T,DIG_T)-&gt;RESULT_TYPE&lt;&apos;@&apos;&gt; &apos;@&apos; = MULT </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2360" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2360" bodyend="2470"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a793f871f2efb81319e1130c5bd1e4a1d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::normalize</definition>
        <argsstring>(Ints_type ... digits_pow_i) noexcept</argsstring>
        <name>normalize</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::normalize</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>digits_pow_i</declname>
        </param>
    <requiresclause>((sizeof...(Ints_type)) &lt;= L)    </requiresclause>
        <briefdescription>
<para>END : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DE NORMALIZACION A LA BASE B DE UN ARGUMENTOS EN UN PACK DE ENTEROS CUALQUIERA </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CREA UN STD_ARRAY DEL TIPO INT PASADO POR ARGUMENTOS DE TAMANO EL PACK DE ARGUMENTOS PASADO (MENOR O IGUAL QUE L)</para>
<para>&lt; DEVUELVE EL TIPO INTERNO DE ELEMENTO DEL ARRAY ANTERIOR [UN TIPO ENTERO]</para>
<para>&lt; DEVUELVE EL TAMANO DEL ARRAY ANTERIOR (TAMAÑO &lt;= L)</para>
<para>&lt; ELIGE ENTRE CUATRO TIPOS DE ENTEROS SEGUN TENGAN SIGNO O NO Y SU TAMANO SEA MAYOR O MENOR QUE EL PROPIO DE LA BASE UINT_T TIPO PROPIO ES : UINT_T TIPO PASADO COMO ARGUMENTO ES : UNIQUE_TYPE LOS TIPOS PASADOS EN LOS ARGUMENTOS HAN DE SER IGUALES ENTRE SI PARA EL INTERROGANTE CONDICIONAL UTILIZAMOS UNSIGNED_INTEGRAL_C<s> PRIMERA PREGUNTA O MAS EXTERIOR IS_UNISGNED_SZ_GT_V&lt;T,S&gt; PREGUNTAS SEGUNDAS O MAS INTERIORES PARA ELEGIR EL TIPO APROPIADO EN CADA CASO USAMOS SIG_UINT_FOR_UINT_T&lt;UINT_T&gt; SIG_UINT_FOR_UINT_T&lt;UNIQUE_TYPE&gt; SIG_UINT_FOR_UINT_T&lt;UINT_T&gt; SIG_UINT_FOR_SINT_T&lt;UNIQUE_TYPE&gt;</s></para>
<para><s></s></para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="379" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="379" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a35b5c07f89517305958d66a6bb6f234f" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>(base_N_t &amp;arg) noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="517" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="517" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a886f12e184c7c06dd7a73ba808638dd5" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_1</definition>
        <argsstring>(base_N_t &amp;arg) noexcept</argsstring>
        <name>set_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="526" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="526" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab462f84d871cfc9d9dbb3613d6aaa4bc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>(base_N_t &amp;arg) noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="536" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="536" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a80b0e6bed2767f040e053396afe98d5e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(base_N_t &amp;larg, dig_t d) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="546" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="546" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a248d0998f30f0302a1f3bd04a3824c02" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_dig</definition>
        <argsstring>(base_N_t &amp;larg, dig_t d) noexcept</argsstring>
        <name>set_fill_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="556" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="556" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9880471fba35029e523a04cd7f4e70aa" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_1</definition>
        <argsstring>(base_N_t &amp;larg) noexcept</argsstring>
        <name>set_fill_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="565" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="565" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a16518c3d31e8528b3c7f81b0d1587c6e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_Bm1</definition>
        <argsstring>(base_N_t &amp;larg) noexcept</argsstring>
        <name>set_fill_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="574" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="574" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="586" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="586" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="597" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="597" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg, dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="608" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>(base_t &amp;larg) noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="620" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>(base_t &amp;larg) noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="632" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="632" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(base_t &amp;larg, dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="644" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="644" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a94d40182cd57bb7a966e177af09e1edc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static constexpr base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) </para>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T ... DIG_PACK) VARIADIC PACK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="753" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="753" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9f1138e2250b0a466bd7f44296d03daf" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+M &gt;</type>
        <definition>static constexpr base_N_t&lt; N+M &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="762" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="762" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1c077c8090f76315cbdaca6c4f824700" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+1 &gt;</type>
        <definition>static constexpr base_N_t&lt; N+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, dig_t rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="776" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="776" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af6f61e228c2e0586d015d41dbf3996a0" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1+M &gt;</type>
        <definition>static constexpr base_N_t&lt; 1+M &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(dig_t larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(M&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="789" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="789" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1c1b5abb048865fd8263d6378cc9d5dc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1 &gt;</type>
        <definition>static constexpr base_N_t&lt; 1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(dig_t larg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="800" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="800" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8714305f0c1213552b1b9e28101f285b" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 2 &gt;</type>
        <definition>static constexpr base_N_t&lt; 2 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(dig_t larg, dig_t rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="807" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="807" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf2297e84ba293a2cb74df86067f815a" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr base_N_t&lt; 1+(sizeof ...(Ts))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(T0 dig0, Ts ... dig_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>T0</type>
          <declname>dig0</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="819" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="819" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a623b5e72aa5b3c3c7e7878c3408c32c2" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr base_N_t&lt; N+1+(sizeof ...(Ts))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(base_N_t&lt; N &gt; larg, T dig, Ts ... dig_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T,DIG_T ... DIG_PACK) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="827" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="827" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa99e2ce3d208d2d82dcbc591e424e14e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M+1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr base_N_t&lt; M+1+(sizeof ...(Ts))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(T dig, Ts ... dig_pack, base_N_t&lt; M &gt; rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;M+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK,BASE_N_T&lt;M&gt;) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="835" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="835" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a115e059b35d6861c6b833e84714eae54" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> ...</type>
            <declname>N_pack</declname>
            <defname>N_pack</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+(...+(N_pack))&gt;</type>
        <definition>static constexpr base_N_t&lt; N+(...+(N_pack))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(base_N_t&lt; N &gt; larg, base_N_t&lt; N_pack... &gt; ... rarg_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N_pack... &gt; ...</type>
          <declname>rarg_pack</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;SIZE_T N,SIZE_T ... N_PACK&gt; CONCAT(BASE_N_T&lt;N&gt; LARG,BASE_N_T&lt;N_PACK&gt; ... RARG_PACK) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="843" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="843" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a31f4bef96d79d6284f92ff62102a60b8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; std::abs&lt; <ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> &gt;(iend-ibegin)&gt;</type>
        <definition>static constexpr base_N_t&lt; std::abs&lt; size_t &gt;(iend-ibegin)&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::subregister</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>subregister</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::subregister</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(iend &lt;= N)&amp;&amp;(ibegin &lt; N)&amp;&amp;(ibegin != iend))    </requiresclause>
        <briefdescription>
<para>TAKE A SUBREGISTER OF A REGISTER OF DIGITS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="852" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="852" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a574ff8cfb82356a31490fa7edbd97274" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_0</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="957" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="957" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afb2c84fce0a4612e03242c1262483632" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="969" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="969" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a90f4fac63f793e943ff0b5134d1bc3ab" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bm1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="983" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="983" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad75a68ecdd79cc2fefecaa7d90f8fa62" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="997" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="997" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad31af2d21df0eda00248ffc9e1188439" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_Bp1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bp1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1013" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1013" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ace0b779ad61d6f3ec05f97e75820225f" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow_m1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_B_pow_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow_m1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n&lt;N) &amp;&amp; (N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1029" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1029" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00ad895b4349a451ec44f5de6afac9bd" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_B_pow</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n&lt;N) &amp;&amp; (N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1059" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1059" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af7d3c6d41df5538ad158f0297259cd60" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg)</argsstring>
        <name>is_filled_of_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1105" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1105" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac38295eee21ad1fba1896205f44b4470" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_Bm1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg)</argsstring>
        <name>is_filled_of_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_Bm1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1115" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1115" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a519bc7bbaa302fe6e3a54bae3d3e61ee" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
            <declname>d</declname>
            <defname>d</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg)</argsstring>
        <name>is_filled_of</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L) &amp;&amp; (N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1125" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1125" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a349c26e9e283a769c05555521dd286d3" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::preincrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>preincrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::preincrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>&lt;! TODO : ME HE QUEDADO REPASANDO POR AQUI 31/23/18/11/2022 </para>
        </briefdescription>
        <detaileddescription>
<para>&lt; PREINCREMENT(OBJ) == ++OBJ SOLO QUE DEVUELVE CARRY TAMBIEN PREINCREMENT(OBJ) -&gt; CONDICIONALMENTE BIEN RES_BASE_OP_T (con CARRY), BIEN BASE_T (sin CARRY) &lt; result_content_low result_content_high carry borrow result_content_quotient result_content_remainder good_result </para>
        </detaileddescription>
        <inbodydescription>
<para>true == tipo resultado</para>
<para>CREAMOS EL RETORNO RET DE TIPO RESULTADO</para>
<para>NOMBRE CORTO PARA RET.CARRY</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>INCREMENTO DEL PRIMER DIGITO</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>CARRY INICIAL POR DEFECTO</para>
<para>INCREMENTO DEL PRIMER DIGITO</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1605" column="5" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1605" bodyend="1685"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab0abbd6b9de1243bb46ac126af37f85c" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::postincrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>postincrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::postincrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1700" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1700" bodyend="1717"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af8e88aee0427d613765e03a7cc4095cc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</definition>
        <argsstring>(base_t &amp;arg) noexcept</argsstring>
        <name>mC_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1863" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1863" bodyend="1869"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afd68165ec5beb04ae22d53a267990959" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</definition>
        <argsstring>(base_t &amp;arg) noexcept</argsstring>
        <name>mC_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1872" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1872" bodyend="1877"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af6a97cc2cceceee640a2296d99d37526" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>C_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_Bm1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1880" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1880" bodyend="1883"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5dd4e4afa43f274ab3df22e4924be932" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>C_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1886" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1886" bodyend="1889"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5e18c0bc1c58ccd019e1bd510aaf9c1e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>BEGIN : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>MULTIPLY BY THE BASE B (10) &lt;&lt; &lt;&lt;= DIVIDE BY THE BASE B (10) &gt;&gt; &gt;&gt;= REMAINDER BY THE BASE B (10) REM_B_N M_REM_B_N MULTIPLICATIVE CARRY BY THE BASE B (10) MER_B_N M_MER_B_N </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1942" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1942" bodyend="1952"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1afbff604c5c8949dd125cba292c7235" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1955" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1955" bodyend="1964"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a967568dc87b9368e2bd5be116d3fddf1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1967" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1967" bodyend="1976"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aebe5a826c01a1a687284576b0ec9747d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1979" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1979" bodyend="1982"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::rem_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1985" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1985" bodyend="1990"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="1993" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="1993" bodyend="1997"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mer_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2001" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2001" bodyend="2006"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2009" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2009" bodyend="2013"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4a907a5cb23e02dc4e8b62f16153bc07" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</definition>
        <argsstring>(base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : OPERATORS | &amp; |= &amp;= </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2081" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2081" bodyend="2087"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a193cf7c885add26077c20c66119c4d27" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|</definition>
        <argsstring>(const base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2090" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2090" bodyend="2095"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7df174f2b6adb227d546b8c3d743f8c7" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</definition>
        <argsstring>(base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2098" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2098" bodyend="2104"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a77cf31351426a96dfb4da0714828bdf2" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;</definition>
        <argsstring>(base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2107" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2107" bodyend="2112"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9b9ecfa8f46b5e4ca536a2d5637c381d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::fediv</definition>
        <argsstring>(const base_t &amp;larg, const dig_t &amp;rarg) -&gt; res_base_op_t&lt; binop_e::fediv &gt; noexcept</argsstring>
        <name>fediv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::fediv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>&apos;@&apos; = FULL_EUCLID_DIV(BASE_T,DIG_T) -&gt; (REM,COC,GOOD) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>7 tipo UINT_T entero [7] tipo <ref refid="struct_num_repr_1_1dig__t" kindref="compound">dig_t</ref> wrapper de un entero [[7]] tipo base_t array [[2][3][4][5][6]] / [7] INICIALIZACION</para>
<para>BUCLE PRINCIPAL DE DIVISION</para>
<para>ULTIMA ITERACION</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="2446" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="2446" bodyend="2513"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a793f871f2efb81319e1130c5bd1e4a1d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::normalize</definition>
        <argsstring>(Ints_type ... digits_pow_i) noexcept</argsstring>
        <name>normalize</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::normalize</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>digits_pow_i</declname>
        </param>
    <requiresclause>((sizeof...(Ints_type)) &lt;= L)    </requiresclause>
        <briefdescription>
<para>END : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DE NORMALIZACION A LA BASE B DE UN ARGUMENTOS EN UN PACK DE ENTEROS CUALQUIERA </para>
        </detaileddescription>
        <inbodydescription>
<para>&lt; CREA UN STD_ARRAY DEL TIPO INT PASADO POR ARGUMENTOS DE TAMANO EL PACK DE ARGUMENTOS PASADO (MENOR O IGUAL QUE L)</para>
<para>&lt; DEVUELVE EL TIPO INTERNO DE ELEMENTO DEL ARRAY ANTERIOR [UN TIPO ENTERO]</para>
<para>&lt; DEVUELVE EL TAMANO DEL ARRAY ANTERIOR (TAMAÑO &lt;= L)</para>
<para>&lt; ELIGE ENTRE CUATRO TIPOS DE ENTEROS SEGUN TENGAN SIGNO O NO Y SU TAMANO SEA MAYOR O MENOR QUE EL PROPIO DE LA BASE UINT_T TIPO PROPIO ES : UINT_T TIPO PASADO COMO ARGUMENTO ES : UNIQUE_TYPE LOS TIPOS PASADOS EN LOS ARGUMENTOS HAN DE SER IGUALES ENTRE SI PARA EL INTERROGANTE CONDICIONAL UTILIZAMOS UNSIGNED_INTEGRAL_C<s> PRIMERA PREGUNTA O MAS EXTERIOR IS_UNISGNED_SZ_GT_V&lt;T,S&gt; PREGUNTAS SEGUNDAS O MAS INTERIORES PARA ELEGIR EL TIPO APROPIADO EN CADA CASO USAMOS SIG_UINT_FOR_UINT_T&lt;UINT_T&gt; SIG_UINT_FOR_UINT_T&lt;UNIQUE_TYPE&gt; SIG_UINT_FOR_UINT_T&lt;UINT_T&gt; SIG_UINT_FOR_SINT_T&lt;UNIQUE_TYPE&gt;</s></para>
<para><s></s></para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="379" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="379" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a35b5c07f89517305958d66a6bb6f234f" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_0</definition>
        <argsstring>(base_N_t &amp;arg) noexcept</argsstring>
        <name>set_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="517" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="517" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a886f12e184c7c06dd7a73ba808638dd5" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_1</definition>
        <argsstring>(base_N_t &amp;arg) noexcept</argsstring>
        <name>set_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="526" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="526" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab462f84d871cfc9d9dbb3613d6aaa4bc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_Bm1</definition>
        <argsstring>(base_N_t &amp;arg) noexcept</argsstring>
        <name>set_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="536" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="536" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a80b0e6bed2767f040e053396afe98d5e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_dig</definition>
        <argsstring>(base_N_t &amp;larg, dig_t d) noexcept</argsstring>
        <name>set_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="546" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="546" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a248d0998f30f0302a1f3bd04a3824c02" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_dig</definition>
        <argsstring>(base_N_t &amp;larg, dig_t d) noexcept</argsstring>
        <name>set_fill_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>d</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="556" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="556" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9880471fba35029e523a04cd7f4e70aa" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_1</definition>
        <argsstring>(base_N_t &amp;larg) noexcept</argsstring>
        <name>set_fill_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="565" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="565" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a16518c3d31e8528b3c7f81b0d1587c6e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_fill_Bm1</definition>
        <argsstring>(base_N_t &amp;larg) noexcept</argsstring>
        <name>set_fill_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_fill_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="574" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="574" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="586" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="586" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="597" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="597" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(base_N_t&lt; N &gt; &amp;larg, dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="608" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="608" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_0</definition>
        <argsstring>(base_t &amp;larg) noexcept</argsstring>
        <name>set_interval_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_0</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="620" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="620" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_Bm1</definition>
        <argsstring>(base_t &amp;larg) noexcept</argsstring>
        <name>set_interval_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="632" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="632" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_i</declname>
            <defname>N_i</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N_pf</declname>
            <defname>N_pf</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::set_interval_dig</definition>
        <argsstring>(base_t &amp;larg, dig_t dig) noexcept</argsstring>
        <name>set_interval_dig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::set_interval_dig</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>dig</declname>
        </param>
    <requiresclause>((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="644" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="644" bodyend="647"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a94d40182cd57bb7a966e177af09e1edc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static constexpr base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) </para>
        </briefdescription>
        <detaileddescription>
<para>STATIC BASE_N_T&lt;N&gt; CONCAT(BASE_N_T&lt;N&gt;) STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T ... DIG_PACK) VARIADIC PACK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="753" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="753" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a9f1138e2250b0a466bd7f44296d03daf" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+M &gt;</type>
        <definition>static constexpr base_N_t&lt; N+M &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+M&gt; CONCAT(BASE_N_T&lt;N&gt;,BASE_N_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="762" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="762" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1c077c8090f76315cbdaca6c4f824700" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+1 &gt;</type>
        <definition>static constexpr base_N_t&lt; N+1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, dig_t rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+1&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="776" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="776" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af6f61e228c2e0586d015d41dbf3996a0" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1+M &gt;</type>
        <definition>static constexpr base_N_t&lt; 1+M &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(dig_t larg, const base_N_t&lt; M &gt; &amp;rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(M&gt;0)    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1+M&gt; CONCAT(DIG_T,BASE_N_T&lt;M&gt;) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="789" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="789" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1c1b5abb048865fd8263d6378cc9d5dc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1 &gt;</type>
        <definition>static constexpr base_N_t&lt; 1 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(dig_t larg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1&gt; CONCAT(DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="800" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="800" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a8714305f0c1213552b1b9e28101f285b" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 2 &gt;</type>
        <definition>static constexpr base_N_t&lt; 2 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(dig_t larg, dig_t rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>STATIC BASE_N_T&lt;1+1&gt; CONCAT(DIG_T,DIG_T) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="807" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="807" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1acf2297e84ba293a2cb74df86067f815a" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T0</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; 1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr base_N_t&lt; 1+(sizeof ...(Ts))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(T0 dig0, Ts ... dig_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>T0</type>
          <declname>dig0</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;SIZEOF...(DIG_PACK)&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="819" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="819" bodyend="821"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a623b5e72aa5b3c3c7e7878c3408c32c2" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr base_N_t&lt; N+1+(sizeof ...(Ts))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(base_N_t&lt; N &gt; larg, T dig, Ts ... dig_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;(N&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;N+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(BASE_N_T&lt;N&gt;,DIG_T,DIG_T ... DIG_PACK) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="827" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="827" bodyend="829"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa99e2ce3d208d2d82dcbc591e424e14e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M+1+(sizeof ...(Ts))&gt;</type>
        <definition>static constexpr base_N_t&lt; M+1+(sizeof ...(Ts))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(T dig, Ts ... dig_pack, base_N_t&lt; M &gt; rarg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type>T</type>
          <declname>dig</declname>
        </param>
        <param>
          <type>Ts ...</type>
          <declname>dig_pack</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; M &gt;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(((std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;...)&amp;&amp;(std::is_same_v&lt;T,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;)&amp;&amp;(M&gt;0))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;M+1+(SIZEOF...(DIG_PACK))&gt; CONCAT(DIG_T,DIG_T ... DIG_PACK,BASE_N_T&lt;M&gt;) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="835" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="835" bodyend="837"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a115e059b35d6861c6b833e84714eae54" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> ...</type>
            <declname>N_pack</declname>
            <defname>N_pack</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N+(...+(N_pack))&gt;</type>
        <definition>static constexpr base_N_t&lt; N+(...+(N_pack))&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::concat</definition>
        <argsstring>(base_N_t&lt; N &gt; larg, base_N_t&lt; N_pack... &gt; ... rarg_pack) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N_pack... &gt; ...</type>
          <declname>rarg_pack</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))    </requiresclause>
        <briefdescription>
<para>STATIC BASE_N_T&lt;SIZE_T N,SIZE_T ... N_PACK&gt; CONCAT(BASE_N_T&lt;N&gt; LARG,BASE_N_T&lt;N_PACK&gt; ... RARG_PACK) VARIADIC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="843" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="843" bodyend="846"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a31f4bef96d79d6284f92ff62102a60b8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; std::abs&lt; <ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref> &gt;(iend-ibegin)&gt;</type>
        <definition>static constexpr base_N_t&lt; std::abs&lt; size_t &gt;(iend-ibegin)&gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::subregister</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>subregister</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::subregister</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((N&gt;0)&amp;&amp;(iend &lt;= N)&amp;&amp;(ibegin &lt; N)&amp;&amp;(ibegin != iend))    </requiresclause>
        <briefdescription>
<para>TAKE A SUBREGISTER OF A REGISTER OF DIGITS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="852" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="852" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a574ff8cfb82356a31490fa7edbd97274" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_0</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_0</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_0</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="957" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="957" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afb2c84fce0a4612e03242c1262483632" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="969" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="969" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a90f4fac63f793e943ff0b5134d1bc3ab" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bm1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bm1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="983" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="983" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad75a68ecdd79cc2fefecaa7d90f8fa62" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="997" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="997" bodyend="1008"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ad31af2d21df0eda00248ffc9e1188439" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_Bp1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_Bp1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_Bp1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1013" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1013" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ace0b779ad61d6f3ec05f97e75820225f" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow_m1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_B_pow_m1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow_m1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n&lt;N) &amp;&amp; (N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1029" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1029" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a00ad895b4349a451ec44f5de6afac9bd" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_B_pow</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_B_pow</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_B_pow</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n&lt;N) &amp;&amp; (N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1059" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1059" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a2c128ab48f1b34342c5708169c85d37c" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_any_B_pow</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>is_any_B_pow</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_any_B_pow</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1105" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1105" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aa66830a60ee1de53827840b9f7d9725d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr int32_t</type>
        <definition>static constexpr int32_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::index_of_MSDig</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>index_of_MSDig</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::index_of_MSDig</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1121" column="9" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1121" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af7d3c6d41df5538ad158f0297259cd60" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg)</argsstring>
        <name>is_filled_of_1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1133" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1133" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac38295eee21ad1fba1896205f44b4470" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of_Bm1</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg)</argsstring>
        <name>is_filled_of_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of_Bm1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1143" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1143" bodyend="1148"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a519bc7bbaa302fe6e3a54bae3d3e61ee" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
          <param>
            <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" kindref="member">dig_t</ref></type>
            <declname>d</declname>
            <defname>d</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>static constexpr bool NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::is_filled_of</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg)</argsstring>
        <name>is_filled_of</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::is_filled_of</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n&gt;0) &amp;&amp; (n&lt;L) &amp;&amp; (N&gt;0))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1153" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1153" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a349c26e9e283a769c05555521dd286d3" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::preincrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional_t&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>preincrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::preincrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>&lt;! TODO : ME HE QUEDADO REPASANDO POR AQUI 31/23/18/11/2022 </para>
        </briefdescription>
        <detaileddescription>
<para>&lt; PREINCREMENT(OBJ) == ++OBJ SOLO QUE DEVUELVE CARRY TAMBIÉN PREINCREMENT(OBJ) -&gt; CONDICIONALMENTE BIEN RES_BASE_OP_T (con CARRY), BIEN BASE_T (sin CARRY) &lt; result_content_low result_content_high carry borrow result_content_quotient result_content_remainder good_result </para>
        </detaileddescription>
        <inbodydescription>
<para>true == tipo resultado</para>
<para>CREAMOS EL RETORNO RET DE TIPO RESULTADO</para>
<para>NOMBRE CORTO PARA RET.CARRY</para>
<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>
<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>
<para>INCREMENTO DEL PRIMER DIGITO</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>CARRY INICIAL POR DEFECTO</para>
<para>INCREMENTO DEL PRIMER DIGITO</para>
<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1633" column="5" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1633" bodyend="1713"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ab0abbd6b9de1243bb46ac126af37f85c" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>with_result_type</declname>
            <defname>with_result_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>static constexpr auto NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::postincrement</definition>
        <argsstring>(base_t &amp;arg) -&gt; std::conditional&lt; with_result_type, res_base_op_t&lt; binop_e::add &gt;, const base_t &amp; &gt; noexcept</argsstring>
        <name>postincrement</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::postincrement</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1728" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1728" bodyend="1745"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af8e88aee0427d613765e03a7cc4095cc" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_Bm1</definition>
        <argsstring>(base_t &amp;arg) noexcept</argsstring>
        <name>mC_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_Bm1</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1891" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1891" bodyend="1897"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1afd68165ec5beb04ae22d53a267990959" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mC_B</definition>
        <argsstring>(base_t &amp;arg) noexcept</argsstring>
        <name>mC_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mC_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1900" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1900" bodyend="1905"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af6a97cc2cceceee640a2296d99d37526" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_Bm1</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>C_Bm1</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_Bm1</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1908" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1908" bodyend="1911"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5dd4e4afa43f274ab3df22e4924be932" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::C_B</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>C_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::C_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1914" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1914" bodyend="1917"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a5e18c0bc1c58ccd019e1bd510aaf9c1e" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>BEGIN : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>MULTIPLY BY THE BASE B (10) &lt;&lt; &lt;&lt;= DIVIDE BY THE BASE B (10) &gt;&gt; &gt;&gt;= REMAINDER BY THE BASE B (10) REM_B_N M_REM_B_N MULTIPLICATIVE CARRY BY THE BASE B (10) MER_B_N M_MER_B_N </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1970" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1970" bodyend="1980"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a1afbff604c5c8949dd125cba292c7235" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&lt;&lt;=</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1983" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1983" bodyend="1992"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a967568dc87b9368e2bd5be116d3fddf1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;=</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="1995" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="1995" bodyend="2004"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1aebe5a826c01a1a687284576b0ec9747d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&gt;&gt;</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2007" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2007" bodyend="2010"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::rem_B</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::rem_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2013" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2013" bodyend="2018"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_rem_B</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_rem_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2021" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2021" bodyend="2025"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::mer_B</definition>
        <argsstring>(const base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::mer_B</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2029" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2029" bodyend="2034"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::m_mer_B</definition>
        <argsstring>(base_t &amp;larg, size_t n) noexcept</argsstring>
        <name>m_mer_B</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::m_mer_B</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2037" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2037" bodyend="2041"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a4a907a5cb23e02dc4e8b62f16153bc07" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|=</definition>
        <argsstring>(base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : OPERATORS | &amp; |= &amp;= </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2109" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2109" bodyend="2115"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a193cf7c885add26077c20c66119c4d27" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator|</definition>
        <argsstring>(const base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2118" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2118" bodyend="2123"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a7df174f2b6adb227d546b8c3d743f8c7" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
        <definition>static constexpr const base_t &amp; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;=</definition>
        <argsstring>(base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2126" column="15" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2126" bodyend="2132"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a77cf31351426a96dfb4da0714828bdf2" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::operator&amp;</definition>
        <argsstring>(base_t &amp;larg, const base_t &amp;rarg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::operator&amp;</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" kindref="member">base_t</ref> &amp;</type>
          <declname>rarg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2135" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2135" bodyend="2140"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a80b8d9909c325e7f8fb02517d0c8bea4" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static constexpr base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::aprox_units_divB</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>aprox_units_divB</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::aprox_units_divB</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;1)    </requiresclause>
        <briefdescription>
<para>&lt; PRECONDITIONS : ARG != 0 AND ARG != 1 &gt;\\ </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCIONES DE IMPLEMENTACION DE LA DIVISION ENTRE DOS REGISTROS DE DIGITOS BEGIN POSTCONDICION RET[N-1] == (DIG_1() | DIG_0()) &gt;\\ POSTCONDICION RET[N-1] == DIG_1() =&gt; RET[N-2,0] == REGD_N_0() &gt;\\ HAY QUE VER SI ES POTENCIA DE B : is_any_B_pow </para>
        </detaileddescription>
        <inbodydescription>
<para>CASO EN QUE LA LONGITUD PERMANECE 999 ; 998 ; 997 ; 996 099,9 ; 099,8 ; 099,7 ; 099,6 100 ; 100 ; 100 ; 100</para>
<para>CPARG == Bm1 Bm1 Bm1 ... Bm1 Bm1 Bm1 d0&lt;B/2</para>
<para>CPARG == Bm1 dnm2 dnm3 ... d3 d2 d1 d0</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2477" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af99b7066f6db6a0c4691432c8af9da90" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;</type>
        <definition>static constexpr base_N_t&lt; N &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::aprox_units_divB_n</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;arg) noexcept</argsstring>
        <name>aprox_units_divB_n</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::aprox_units_divB_n</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((n &gt; 0) &amp;&amp; (n &lt; N) &amp;&amp; (N &gt; 1))    </requiresclause>
        <briefdescription>
<para>FUNCION DE RECURSION PARA LA DIVISION. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2512" column="10" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2512" bodyend="2508"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a955c25cc492f643e0a0c60d87c1c52d9" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref>, 2 &gt;</type>
        <definition>static constexpr std::array&lt; SIG_UINT_T, 2 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::aprox_coc_rem</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;rem, const base_N_t&lt; N &gt; &amp;dsor) noexcept</argsstring>
        <name>aprox_coc_rem</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::aprox_coc_rem</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>dsor</declname>
        </param>
    <requiresclause>(N &gt; 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>std::array&lt;SIG_UINT_T,2&gt;{}[0] == COC std::array&lt;SIG_UINT_T,2&gt;{}[1] == REM PRECONDICION DSOR != 0 Y DSOR != 1 FUNCION DE RECURSION PARA LA DIVISION SOBRECARGA DE LA ANTERIOR PARA LA RECURSION QUE NO SEA EL PRIMER CASO </para>
        </detaileddescription>
        <inbodydescription>
<para>SIZE(DIVISOR) == 1 DIGITO !=0 !=1</para>
<para>SIZE(DIVISOR) &gt;= 2 2545/278 o mayores</para>
<para>CORRECTO EN COC</para>
<para>NOS HEMOS PASADO EN EL COC</para>
<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2533" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2533" bodyend="2526"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1af720594954dba32860706f66a938d7fb" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref>, 2 &gt;</type>
        <definition>static constexpr std::array&lt; SIG_UINT_T, 2 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::aprox_coc_rem</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;rem, const base_N_t&lt; N &gt; &amp;dsor, SIG_UINT_T coc_calculado, SIG_UINT_T rem_calculado) noexcept</argsstring>
        <name>aprox_coc_rem</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::aprox_coc_rem</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>rem</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>dsor</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
          <declname>coc_calculado</declname>
        </param>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" kindref="member">SIG_UINT_T</ref></type>
          <declname>rem_calculado</declname>
        </param>
    <requiresclause>(N &gt; 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>std::array&lt;SIG_UINT_T,2&gt;{}[0] == COC std::array&lt;SIG_UINT_T,2&gt;{}[1] == REM PRECONDICION DSOR != 0 Y DSOR != 1 </para>
        </detaileddescription>
        <inbodydescription>
<para>SUPONEMOS QUE REM TIENE TAMANO 1 o 2</para>
<para>DSOR YA REDUCIDO TIENE TAMANO 1</para>
<para>SIZE(DIVISOR) == 1 DIGITO !=0 !=1</para>
<para>CORRECTO EN COC</para>
<para>NOS HEMOS PASADO EN EL COC</para>
<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
<para>24/7</para>
<para>SIZE(DIVISOR) &gt;= 2 2545/278 o mayores</para>
<para>CORRECTO EN COC</para>
<para>NOS HEMOS PASADO EN EL COC</para>
<para>NOS HEMOS QUEDADO CORTOS EN EL COC rem_aprox + dsor_uint &lt;= rem</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2598" column="16" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2598" bodyend="2669"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__reg__digs__t_1a259f6f4f24ea549202d05e3f0fe2bab9" prot="private" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="basic__types_8hpp_1a801d6a451a01953ef8cbae6feb6a3638" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt;, 2 &gt;</type>
        <definition>static constexpr std::array&lt; base_N_t&lt; N &gt;, 2 &gt; NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;::fediv</definition>
        <argsstring>(const base_N_t&lt; N &gt; &amp;larg, const base_N_t&lt; N &gt; &amp;rarg) noexcept</argsstring>
        <name>fediv</name>
        <qualifiedname>NumRepr::nat_reg_digs_t::fediv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>larg</declname>
        </param>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" kindref="member">base_N_t</ref>&lt; N &gt; &amp;</type>
          <declname>rarg</declname>
        </param>
    <requiresclause>(N &gt; 0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>END FUNCIONES DE IMPLEMENTACION DE LA DIVISION ENTRE DOS REGISTROS DE DIGITOS TODO TO DO 36 : 20 : 25 : 11 : 2022 TODO TO DO repasar que el tipo de vuelta cambie y sea : std::array&lt;base_N_t&lt;N&gt;,2&gt; -&gt; <ref refid="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" kindref="member">res_base_N_op_t&lt;N,binop_e::fediv&gt;</ref> &apos;@&apos; = FULL_EUCLID_DIV(BASE_T,DIG_T) -&gt; (REM,COC,GOOD) </para>
        </detaileddescription>
        <inbodydescription>
<para>MOST SIGNIFICANT DIGIT DEL DIVISOR [DEL NUMERO NO DEL TIPO]</para>
<para>MOST SIGNIFICANT DIGIT DEL DIVIDENDO [DEL NUMERO NO DEL TIPO]</para>
<para>else if (rem &gt;= dsor*dig_B()) { este caso no se deberia de dar nunca }</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" line="2680" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t.hpp" bodystart="2680" bodyend="2763"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(suitable_base&lt;UINT_T,B&gt;() &amp;&amp; (L&gt;0))    </requiresclause>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</label>
        <link refid="struct_num_repr_1_1nat__reg__digs__t"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" line="14" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_reg_digs_t (Copia en conflicto de MSI 2022-11-24).hpp" bodystart="14" bodyend="2514"/>
    <listofallmembers>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>add</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>add</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a955c25cc492f643e0a0c60d87c1c52d9" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>aprox_coc_rem</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af720594954dba32860706f66a938d7fb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>aprox_coc_rem</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a80b8d9909c325e7f8fb02517d0c8bea4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>aprox_units_divB</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af99b7066f6db6a0c4691432c8af9da90" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>aprox_units_divB_n</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>assign</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>assign</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_N_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4be6820bce9cbdab9fce0897b48d2521" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_N_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>base_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5dd4e4afa43f274ab3df22e4924be932" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5dd4e4afa43f274ab3df22e4924be932" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acb0c6bc9a10107e686ac7f9dbf545b9a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af6a97cc2cceceee640a2296d99d37526" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af6a97cc2cceceee640a2296d99d37526" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac08d43112d9336e1e76fd7e62f3ba8a7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a94d40182cd57bb7a966e177af09e1edc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9f1138e2250b0a466bd7f44296d03daf" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1c077c8090f76315cbdaca6c4f824700" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af6f61e228c2e0586d015d41dbf3996a0" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1c1b5abb048865fd8263d6378cc9d5dc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8714305f0c1213552b1b9e28101f285b" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf2297e84ba293a2cb74df86067f815a" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a623b5e72aa5b3c3c7e7878c3408c32c2" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa99e2ce3d208d2d82dcbc591e424e14e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a115e059b35d6861c6b833e84714eae54" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a94d40182cd57bb7a966e177af09e1edc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9f1138e2250b0a466bd7f44296d03daf" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1c077c8090f76315cbdaca6c4f824700" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af6f61e228c2e0586d015d41dbf3996a0" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1c1b5abb048865fd8263d6378cc9d5dc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8714305f0c1213552b1b9e28101f285b" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf2297e84ba293a2cb74df86067f815a" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a623b5e72aa5b3c3c7e7878c3408c32c2" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa99e2ce3d208d2d82dcbc591e424e14e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a115e059b35d6861c6b833e84714eae54" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>const_ref_data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a84abdae22a3b9638c2a93e5aed0a4f19" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>const_ref_data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2b4150202b36f2f18d4dc799dbef7cb0" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2b4150202b36f2f18d4dc799dbef7cb0" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a52a4fc749cfd9844a635a0e7154b86d4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cpy_data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a52a4fc749cfd9844a635a0e7154b86d4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>cpy_data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac70486564928dd63a6a34f23c905020e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac70486564928dd63a6a34f23c905020e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a85a8b769de34b30bc8f57d8fe7b6eca7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af5f8d64e4139b59eada5483f2e3b4713" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acd8786bcc458752321399dfb474df42a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac474f6ef06fa9b772eb916dba6785145" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_Bm2</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac474f6ef06fa9b772eb916dba6785145" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_Bm2</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7b6093b0510c4fdf207e0db13556b410" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_max</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7b6093b0510c4fdf207e0db13556b410" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_max</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af7f4ff31f9ebe9f4ea61a2c1d3e33f31" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_submax</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af7f4ff31f9ebe9f4ea61a2c1d3e33f31" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_submax</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>dig_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9b9ecfa8f46b5e4ca536a2d5637c381d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>fediv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a259f6f4f24ea549202d05e3f0fe2bab9" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>fediv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab6a4b438c955cdff6d124d39aaec788c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>fediv</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ada5a7a435ca701c309e80ee6700264f1" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>get</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ada5a7a435ca701c309e80ee6700264f1" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>get</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa66830a60ee1de53827840b9f7d9725d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>index_of_MSDig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a574ff8cfb82356a31490fa7edbd97274" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a574ff8cfb82356a31490fa7edbd97274" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6847060c452b924139575fd342cc850f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afb2c84fce0a4612e03242c1262483632" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afb2c84fce0a4612e03242c1262483632" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a728a486aa19bebdb5556480f3ad25917" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2c128ab48f1b34342c5708169c85d37c" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_any_B_pow</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad75a68ecdd79cc2fefecaa7d90f8fa62" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad75a68ecdd79cc2fefecaa7d90f8fa62" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a41bae51f82d9802c60d34a71705372dc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00ad895b4349a451ec44f5de6afac9bd" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2b7eb96b8286969f0c1cb8a31f9e9ec8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00ad895b4349a451ec44f5de6afac9bd" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2b7eb96b8286969f0c1cb8a31f9e9ec8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ace0b779ad61d6f3ec05f97e75820225f" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2454172f796622228d0238a14bfba7cc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ace0b779ad61d6f3ec05f97e75820225f" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2454172f796622228d0238a14bfba7cc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_B_pow_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a90f4fac63f793e943ff0b5134d1bc3ab" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a90f4fac63f793e943ff0b5134d1bc3ab" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1d08d0fd3545ed827f4cf1699b71e197" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad31af2d21df0eda00248ffc9e1188439" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad31af2d21df0eda00248ffc9e1188439" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8169a3ed50e5d45ab556403132ba9138" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a519bc7bbaa302fe6e3a54bae3d3e61ee" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a45127fc7411537147f1bf4fc66e90710" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a519bc7bbaa302fe6e3a54bae3d3e61ee" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a45127fc7411537147f1bf4fc66e90710" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af7d3c6d41df5538ad158f0297259cd60" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9affc4906635a0803bf77af16c65dfaf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af7d3c6d41df5538ad158f0297259cd60" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9affc4906635a0803bf77af16c65dfaf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac38295eee21ad1fba1896205f44b4470" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac33e1f6d87472a368b38851aac245d33" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac38295eee21ad1fba1896205f44b4470" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac33e1f6d87472a368b38851aac245d33" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>is_filled_of_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_add</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af990d1acc2982f27df4ce9d72c3f327d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_add</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac64515fd8233a9f394a3db92a91954e9" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_dc</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_sub</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>m_sub</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afd68165ec5beb04ae22d53a267990959" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afd68165ec5beb04ae22d53a267990959" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6b97104904f8b86ad4b6c07880f7b3b8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af8e88aee0427d613765e03a7cc4095cc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af8e88aee0427d613765e03a7cc4095cc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4d5e6973b1ebcf8efa59719b52516f5d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mer_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa75969f7c19583ed5ef8b5efad2a73d6" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa75969f7c19583ed5ef8b5efad2a73d6" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aaa978be1e9e2a501f1ccb332acb5c4b4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mult</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aaa978be1e9e2a501f1ccb332acb5c4b4" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>mult</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_N_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>nat_reg_N_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a793f871f2efb81319e1130c5bd1e4a1d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>normalize</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a793f871f2efb81319e1130c5bd1e4a1d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>normalize</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator Int_Type</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator Int_Type</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aeeaec5efd2f7238613f826e21de5edbf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aeeaec5efd2f7238613f826e21de5edbf" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae36250d4dfb237c42163dcfb75a85edc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae03840c70392af70f692a7f447c93c18" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2cadc24c85fcfad11ff98735e03e7570" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa1b50464c47ec2306e132409e5c0d39b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae36250d4dfb237c42163dcfb75a85edc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae03840c70392af70f692a7f447c93c18" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2cadc24c85fcfad11ff98735e03e7570" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa1b50464c47ec2306e132409e5c0d39b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a19230c6b73d80f18d23b299450d2a6d0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator%</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac9064422cde6b378fe3c6242e41c0e9c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator%</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a77cf31351426a96dfb4da0714828bdf2" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a77cf31351426a96dfb4da0714828bdf2" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7df174f2b6adb227d546b8c3d743f8c7" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a7df174f2b6adb227d546b8c3d743f8c7" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator()</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator()</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a66df3998850226ded5adad90ba303519" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2244f1f8ec6816d363690387c8e24e5e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab80945af6751b25477521685c680b0a0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abb76020807fd7517e6c238c41291d830" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0e87dc1755fe87fbbb6a6ce6a32b5d51" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator*=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad75f5d976f829391ff1a2dd444ada770" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2e993a7ba4bced5c0294564e2ba67999" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afcfbc7a19a2913245aeca67444ecbdc7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2f2b61989451de1806071e761547e75e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3c3887dbbf256226834180e0e692d230" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3c3887dbbf256226834180e0e692d230" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a22fe395b3bc039501e85f32739585378" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a962ba532424e77c124ebc9fbde8d75cc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4c2bf9b5eb73071ee089b28f26de7ace" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a88e0cbd81bf9591a474869c5abd7579b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad662b6de3a00cd05bd8360af261578af" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator/</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a695a0c3fc7ca2e33e09b7e307d35e59a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa3d767ff05a632abc41c920fe558aa26" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4279a9edb1c26bf0bc08f853ededd183" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a75a06e97717d145137e875999180048e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a695a0c3fc7ca2e33e09b7e307d35e59a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa3d767ff05a632abc41c920fe558aa26" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4279a9edb1c26bf0bc08f853ededd183" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a75a06e97717d145137e875999180048e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5e18c0bc1c58ccd019e1bd510aaf9c1e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5e18c0bc1c58ccd019e1bd510aaf9c1e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1afbff604c5c8949dd125cba292c7235" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1afbff604c5c8949dd125cba292c7235" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a76b7bc4da5a7fe5de1a5d71cae196912" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aed85b3cc96fcfc122851baf8ee9ec0f8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a77baf6645dae586ff93ee57f9eb1abb8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8eced305bac59431a2c2c0bb10feb7be" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a76b7bc4da5a7fe5de1a5d71cae196912" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aed85b3cc96fcfc122851baf8ee9ec0f8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a77baf6645dae586ff93ee57f9eb1abb8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8eced305bac59431a2c2c0bb10feb7be" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a27d98c64f9ebb5af914f72b4cb46f457" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a15b6a642118ce4c9465ca861a0c7c610" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a164f15e36c8a63b4379bafda3b14c989" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aea0d7502c64527b4b97ef9fe0e99e404" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a27d98c64f9ebb5af914f72b4cb46f457" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a15b6a642118ce4c9465ca861a0c7c610" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a164f15e36c8a63b4379bafda3b14c989" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aea0d7502c64527b4b97ef9fe0e99e404" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a871142259e72da7bdb23be2d1bb631e4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aea5400ccaefeacf64023a1a606af31f6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae31ac5280cc4e0a252ad62a65f5b15c4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0c0115fb7a0bc33e71bc0b6848d97c5d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a871142259e72da7bdb23be2d1bb631e4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aea5400ccaefeacf64023a1a606af31f6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae31ac5280cc4e0a252ad62a65f5b15c4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0c0115fb7a0bc33e71bc0b6848d97c5d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abba03f817df42b3ae6bef35737f4a348" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a06c5c4901df7213d6b816d36f0295007" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a154c67536bfad0e2ecdfea8d40521833" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a11543159dbaddde4dcb666056e758070" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abba03f817df42b3ae6bef35737f4a348" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a06c5c4901df7213d6b816d36f0295007" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a154c67536bfad0e2ecdfea8d40521833" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a11543159dbaddde4dcb666056e758070" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aebe5a826c01a1a687284576b0ec9747d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aebe5a826c01a1a687284576b0ec9747d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a967568dc87b9368e2bd5be116d3fddf1" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a967568dc87b9368e2bd5be116d3fddf1" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a193cf7c885add26077c20c66119c4d27" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a193cf7c885add26077c20c66119c4d27" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4a907a5cb23e02dc4e8b62f16153bc07" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4a907a5cb23e02dc4e8b62f16153bc07" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aab7c3322a8fa6bb7306e44889721a895" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>postdecrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aab7c3322a8fa6bb7306e44889721a895" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>postdecrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab0abbd6b9de1243bb46ac126af37f85c" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>postincrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab0abbd6b9de1243bb46ac126af37f85c" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>postincrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aad1d8c1e13e2d1eee6a76d483d2a99c5" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>predecrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aad1d8c1e13e2d1eee6a76d483d2a99c5" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>predecrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a349c26e9e283a769c05555521dd286d3" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>preincrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a349c26e9e283a769c05555521dd286d3" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>preincrement</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a98300c5254e99ef248757aee3fa2966d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>put</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a98300c5254e99ef248757aee3fa2966d" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>put</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a14c0cc6849d454e1bb6ca66ae4a636d9" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ref_data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a14c0cc6849d454e1bb6ca66ae4a636d9" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ref_data</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_ints_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae197f40f9e67e915152a55ff0a9c6bc8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_ints_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a28a9c34d899f9b23d36b531ebe88b683" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_ssints_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a28a9c34d899f9b23d36b531ebe88b683" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_ssints_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a43e75c68765d5590c7f1427001c14352" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_suints_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a43e75c68765d5590c7f1427001c14352" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>reg_suints_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9e76fca3636eb9c56b09cda38d61e2bc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9e76fca3636eb9c56b09cda38d61e2bc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a94a069651e6f07f0b117db42d77d6895" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a94a069651e6f07f0b117db42d77d6895" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a78688c0779605ff2e70400c2cf83cf9f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a78688c0779605ff2e70400c2cf83cf9f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a62701d8d011fd069348c7ebeb888318a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a62701d8d011fd069348c7ebeb888318a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0e0ce3574da31820f62617ff44a48ba7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0e0ce3574da31820f62617ff44a48ba7" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4348d3c7e66b4316c9336de940900b4f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4348d3c7e66b4316c9336de940900b4f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac1b7ea3317908fc13e2372226218f30c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac1b7ea3317908fc13e2372226218f30c" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a207bbdbb5f8b3ba6fef2cbd0fb3b2fd4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a207bbdbb5f8b3ba6fef2cbd0fb3b2fd4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afa3463868582493cbae113570c005ff5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1afa3463868582493cbae113570c005ff5" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aced30ba689f6251588687cbc4891b055" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aced30ba689f6251588687cbc4891b055" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_N_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0436673bf267b740051916a794c0b335" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0436673bf267b740051916a794c0b335" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a830f3c3de58bb73633c9cff13b217ae3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a830f3c3de58bb73633c9cff13b217ae3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_base_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regd_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1acf4ea2de98d127c1bfc0ffef53fc2843" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a11a8669870d26e8e0e4d0d2af3c814d8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a11a8669870d26e8e0e4d0d2af3c814d8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a197912d151a7d43a251ec8c019701678" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a197912d151a7d43a251ec8c019701678" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9fb67b33d8f8d153fce5b8bcc575f283" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9fb67b33d8f8d153fce5b8bcc575f283" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a72cde29ddb63c9bc1d77bd7ba9954e78" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a72cde29ddb63c9bc1d77bd7ba9954e78" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6173c51991a13f10e5608e51a8f06d8a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6173c51991a13f10e5608e51a8f06d8a" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>regi_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_base_N_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_base_N_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_base_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_base_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_N_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_N_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>res_op_t</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a35b5c07f89517305958d66a6bb6f234f" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a35b5c07f89517305958d66a6bb6f234f" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a886f12e184c7c06dd7a73ba808638dd5" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a886f12e184c7c06dd7a73ba808638dd5" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab462f84d871cfc9d9dbb3613d6aaa4bc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab462f84d871cfc9d9dbb3613d6aaa4bc" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a80b0e6bed2767f040e053396afe98d5e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a80b0e6bed2767f040e053396afe98d5e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9880471fba35029e523a04cd7f4e70aa" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9880471fba35029e523a04cd7f4e70aa" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a16518c3d31e8528b3c7f81b0d1587c6e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a16518c3d31e8528b3c7f81b0d1587c6e" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a248d0998f30f0302a1f3bd04a3824c02" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a248d0998f30f0302a1f3bd04a3824c02" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_fill_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>set_interval_dig</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>SIG_SINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>SIG_SINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>SIG_UINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>SIG_UINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sub</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sub</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a31f4bef96d79d6284f92ff62102a60b8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>subregister</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a31f4bef96d79d6284f92ff62102a60b8" prot="private" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>subregister</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>subrepr</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>subrepr</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3c96c91771da24227a62d426728c8f21" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a3c96c91771da24227a62d426728c8f21" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a35bd4491adbd998178de7b0577317374" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a35bd4491adbd998178de7b0577317374" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae60164c51b204fca341766c6bb762a48" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ae60164c51b204fca341766c6bb762a48" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab83b9db44f407ad0516572fa747b20f4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab83b9db44f407ad0516572fa747b20f4" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa0312de3e99cb31b17e36295710baa72" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aa0312de3e99cb31b17e36295710baa72" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>sui_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a70edaef36a22608963953cfb870c9381" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a70edaef36a22608963953cfb870c9381" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_0</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a10b62bcda139808daaba4d8d295027d0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a10b62bcda139808daaba4d8d295027d0" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abbe17a523c4b9a2244096891dd3ee307" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1abbe17a523c4b9a2244096891dd3ee307" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_B</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aaec621293aafe2333a44aae75d26f409" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1aaec621293aafe2333a44aae75d26f409" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab5277ff888e0a6c4ccc39cbe8f25c7cd" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_max</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1ab5277ff888e0a6c4ccc39cbe8f25c7cd" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_max</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6e799b6bf51d69e92e9f267836022cf3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_submax</name></member>
      <member refid="struct_num_repr_1_1nat__reg__digs__t_1a6e799b6bf51d69e92e9f267836022cf3" prot="public" virt="non-virtual"><scope>NumRepr::nat_reg_digs_t</scope><name>ui_submax</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
