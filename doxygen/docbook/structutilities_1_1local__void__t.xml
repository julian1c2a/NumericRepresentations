<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structutilities_1_1local__void__t" xml:lang="es">
<title>Referencia de la Estructura utilities::local_void_t</title>
<indexterm><primary>utilities::local_void_t</primary></indexterm>
<para>
<computeroutput>#include &lt;utilities.hpp&gt;</computeroutput>
</para>
Diagrama de colaboración para utilities::local_void_t:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structutilities_1_1local__void__t__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<section>
<title>Descripción detallada</title>

<para>EXAMPLE pack2tuple&lt;int,std::string,double&gt;; // tipo <link linkend="_structutilities_1_1pack2tuple_1afd663d6d4e140735452241ee6bf13fd9">pack2tuple&lt;int,std::string,double&gt;::tuple_type</link> == std::tuple&lt;int,std::string,double&gt;; // tupla using mi_tupla = <link linkend="_structutilities_1_1pack2tuple_1afd663d6d4e140735452241ee6bf13fd9">pack2tuple&lt;int,std::string,double&gt;::tuple_type</link>; pack_size() devuelve 3 mi_tupla(2,&quot;xyz&quot;,3.14159) devuelve la tupla {2,&quot;xyz&quot;,3.14159} // por copia o por movimiento elem_type&lt;0&gt; es int elem_type&lt;1&gt; es std::string elem_type&lt;2&gt; es double get&lt;0&gt;(2,&quot;xyz&quot;,3.14159) == 2; get&lt;1&gt;(2,&quot;xyz&quot;,3.14159) == &quot;xyz&quot;; get&lt;2&gt;(2,&quot;xyz&quot;,3.14159) == 3.14159; tuple_obj == mi_tupla(2,&quot;xyz&quot;,3.14159) == {2,&quot;xyz&quot;,3.14159} head of tuple_obj is {2} tail of tuple_obj is {&quot;xyz&quot;,3.14159} BEGIN: TEMPLATE GENERICO Y SUS ESPECIALIZACIONES </para>
<para>
La documentación para esta estructura fue generada a partir del siguiente fichero:</para>
<link linkend="_utilities_8hpp">utilities.hpp</link></section>
</section>
