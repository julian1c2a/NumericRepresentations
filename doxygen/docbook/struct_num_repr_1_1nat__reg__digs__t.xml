<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_struct_num_repr_1_1nat__reg__digs__t" xml:lang="es">
<title>Referencia de la plantilla de la Estructura NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</title>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary></indexterm>
<para>
<computeroutput>#include &lt;nat_reg_digs_t.hpp&gt;</computeroutput>
</para>
Diagrama de herencias de NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Diagrama de colaboración para NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Tipos públicos    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa">SIG_UINT_T</link> = typename <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652">SIG_SINT_T</link> = typename <link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">type_traits::sig_SInt_for_UInt_t</link>&lt; UINT_T &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> = <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link>&lt; UINT_T, B &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link> = <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> = <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; L &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f">res_base_N_op_t</link> = typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt;, op, N &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op&gt; </para><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link> = typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link>, op, L &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link> = <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; UINT_T, B, N &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08">res_N_op_t</link> = typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt;, op, N &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op&gt; </para><para>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64">res_op_t</link> = typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>, op, L &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
Tipos públicos heredados desde <link linkend="_struct_num_repr_1_1reg__digs__t">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</link>        <itemizedlist>
            <listitem><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> = <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&lt; UINT_T, B &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link> = std::array&lt; <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>, N &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> = <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; L &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link> = <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt; UINT_T, B, N &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link> = typename <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt; UINT_T &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link> = typename <link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">type_traits::sig_SInt_for_UInt_t</link>&lt; UINT_T &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1ab04d648f3421732b3103e32a28f28d09">res_base_N_op_t</link> = typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt;, op, N &gt;</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op&gt; </para><para>using <link linkend="_struct_num_repr_1_1reg__digs__t_1a410c269c5a379228ee4f9c757cdaace8">res_base_op_t</link> = typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link>, op, L &gt;</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Métodos públicos    </title>
        <itemizedlist>
            <listitem><para>consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453">nat_reg_digs_t</link> () noexcept</para>

<para>CONSTRUCTOR POR DEFECTO. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4">nat_reg_digs_t</link> (const std::initializer_list&lt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &gt; &amp;arg) noexcept</para>

<para>CONSTRUCTOR POR LISTA DE DIGITOS. </para>
</listitem>
            <listitem><para>template&lt;typename ... Ts&gt; <?linebreak?>requires (std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link>&gt;&amp;&amp;...)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf">nat_reg_digs_t</link> (const Ts &amp;... args) noexcept</para>

<para>CONSTRUCTOR POR ARGUMENTOS DIGITOS SIN LIMITE: DEDUCE EL TIPO. </para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> *const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b">const_base_this</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c">base_cpy_cthis</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6">base_const_ref_cthis</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a">const_by_index</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf">cpy_by_index</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4">copy_arg_N</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4">move_arg_N</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a10794eef68bb9e67cc275c843794b89a">copy_arg_N</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a8d4656d2c0937af44d8868383da8c26d">move_arg_N</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992">nat_reg_digs_t</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>CONSTRUCTOR COPIA DESDE UN ARRAY DE DIGITOS. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870">nat_reg_digs_t</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>

<para>CONSTRUCTOR MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c ... Ints_type&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc">nat_reg_digs_t</link> (Ints_type ... dig_pow_i) noexcept</para>

<para>END : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3">nat_reg_digs_t</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>CONSTRUCTOR COPIA POR REFERENCIA CONSTANTE. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db">nat_reg_digs_t</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>

<para>CONSTRUCTOR POR MOVIMIENTO. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4">operator=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>OPERACION ASIGNACION POR COPIA REFERENCIA CONST <emphasis>NO</emphasis> COPIABLE DESDE BASE_N_T. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921">operator=</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>OPERACION ASIGNACION POR COPIA REFERENCIA DESDE BASE_N_T. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a">operator=</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>

<para>OPERACION ASIGNACION POR COPIA MOVIMIENTO DESDE BASE_N_T. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b">operator=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>OPERACION ASIGNACION POR COPIA REFERENCIA EN LA QUE SE PUEDE COPIAR. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a">operator=</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>

<para>OPERACION ASIGNACION POR MOVIMIENTO. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b">operator=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>OPERACION ASIGNACION POR COPIA EN LA QUE <emphasis>NO</emphasis> SE PUEDE COPIAR. </para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc">set_0</link> () noexcept</para>

<para>OPERACION DE LIMPIEZA A CERO DEL NAT_REG_DIGS_T. </para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122">set_Bm1</link> () noexcept</para>

<para>OPERACION DE LIMPIEZA A B-1 DEL NAT_REG_DIGS_T. </para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481">set_dig</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) noexcept</para>

<para>OPERACION DE LIMPIEZA A VALOR DIG_T DEL NAT_REG_DIGS_T. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54">set_interval_0</link> () noexcept</para>

<para>OPERACION DE PONER A VALOR DIG_0 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77">set_interval_Bm1</link> () noexcept</para>

<para>OPERACION DE PONER A VALOR DIG_Bm1 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0">set_interval_dig</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> dig) noexcept</para>

<para>OPERACION DE PONER A VALOR DIG EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5">operator=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;arg) noexcept</para>

<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c Int_Type&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b">operator=</link> (Int_Type arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N+L &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef">cat</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) const noexcept</para>

<para>SUBREPR =&gt; SUB REPRESENTACION. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; L+1 &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a">cat</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N+L &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90">cat_inv</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; L+1 &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3">cat_inv</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ibegin, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> iend&gt; <?linebreak?>requires ((iend &lt;= L)&amp;&amp;(ibegin &lt; iend))</para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; iend-ibegin &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e">subrepr</link> () const noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c Int_Type&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e">operator Int_Type</link> () const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr std::strong_ordering <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032">operator&lt;=&gt;</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) const noexcept</para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr std::weak_ordering <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a">operator&lt;=&gt;</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) const noexcept</para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</listitem>
            <listitem><para>constexpr std::weak_ordering <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484">operator&lt;=&gt;</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;arg) const noexcept</para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae">operator[]</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> idx) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f">operator[]</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> idx) noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c Int_Type = UINT_T&gt; </para><para>constexpr Int_Type <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601">operator()</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> idx) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b">operator++</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c">operator++</link> (int) noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5">operator--</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41">operator--</link> (int) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773">operator&lt;&lt;</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b">operator&lt;&lt;=</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06">operator&gt;&gt;</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d">operator&gt;&gt;=</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370">rem_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4">m_rem_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22">mer_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69">m_mer_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e">operator|=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp;arg) noexcept</para>

<para>END : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a">operator|</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp;arg) noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2">operator&amp;=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp;arg) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5">operator&amp;</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp;arg) noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3">operator+=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d">operator-=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53">operator+</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff">operator-</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad75f5d976f829391ff1a2dd444ada770">operator+</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>
</listitem>
            <listitem><para>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a22fe395b3bc039501e85f32739585378">operator-</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>
</listitem>
            <listitem><para>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a66df3998850226ded5adad90ba303519">operator*</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ad662b6de3a00cd05bd8360af261578af">operator/</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>

<para>DIVISION BY A DIGIT. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a19230c6b73d80f18d23b299450d2a6d0">operator%</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept</para>

<para>REMAINDER BY A DIGIT. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4">operator+=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a2f2b61989451de1806071e761547e75e">operator+=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b">operator-=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a88e0cbd81bf9591a474869c5abd7579b">operator-=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1abb76020807fd7517e6c238c41291d830">operator*=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a0e87dc1755fe87fbbb6a6ce6a32b5d51">operator*=</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a2e993a7ba4bced5c0294564e2ba67999">operator+</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) const noexcept</para>

<para>TO DO. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a962ba532424e77c124ebc9fbde8d75cc">operator-</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a2244f1f8ec6816d363690387c8e24e5e">operator*</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1afcfbc7a19a2913245aeca67444ecbdc7">operator+</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a4c2bf9b5eb73071ee089b28f26de7ace">operator-</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ab80945af6751b25477521685c680b0a0">operator*</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;arg) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac9064422cde6b378fe3c6242e41c0e9c">operator%</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp;arg) const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
Métodos públicos heredados desde <link linkend="_struct_num_repr_1_1reg__digs__t">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</link>        <itemizedlist>
            <listitem><para>const <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> *const <link linkend="_struct_num_repr_1_1reg__digs__t_1a5b679caa4dbb16fb6c5cca1f30ba5f66">const_base_this</link> () const noexcept</para>

<para>devolucion de punteros a la clase base </para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> * <link linkend="_struct_num_repr_1_1reg__digs__t_1a6feafb3a28270bf7a293959e34d168e6">base_this</link> () noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1aabe906a2378892bb152dba2e3f2a7b5c">r_base_cthis</link> () noexcept</para>

<para>devolucion de referencias a la clase base </para>
</listitem>
            <listitem><para>const <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a6adb2fc166cc2a4419f5f86bd282df4f">cr_base_cthis</link> () const noexcept</para>

<para>devolucion de copia de la clase base </para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a813a2fca2665812c80725f66d1e5049f">cp_base_cthis</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a8dd53a3977033363ff15a88026eedf5b">r_cthis</link> () noexcept</para>

<para>devolucion de referencias de la clase actual </para>
</listitem>
            <listitem><para>const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1afc0773b25c6a84010530c389efcc4e5b">cr_cthis</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a6b20297d05753f752cbf21d212c5cd4c">cp_cthis</link> () const noexcept</para>

<para>devolucion de copia de la clase actual </para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1af5c56f665da3c6aa1957ae521e74312d">cp_cthis_at</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> k) const noexcept</para>

<para>devoluciones por referencias y por copia de los elementos </para>
</listitem>
            <listitem><para><link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a926b408a1e43d578157164c351ac60c2">r_cthis_at</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> k) noexcept</para>
</listitem>
            <listitem><para>const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a44c0eab2b1465200a4dc0e349dba0b07">cr_cthis_at</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> k) const noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1a2f8a4ff3bd499089c6440c7992ee13cd">begin</link> () noexcept</para>

<para>En este bloque hacemos esta clase wrapper como si fuese una clase derivada de base_t Para esto replicamos y sobrecargamos cada una de las funciones por defecto de std::array Nota: lo anterior se escribio cuando no era clase derivada sino un wrapper. </para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1aa912c8d96b92e95e0d751f2a4500c436">cbegin</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1aae1bd8ec380671dcd31c9d7dcd03d445">end</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1a2cc438add79ca50b7ec3a0dcb3b4c6df">cend</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1ae0932422c4f294cd994b0f457af37599">rbegin</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1abfbe9a50e4c844fa73ee64e3de27d4c1">crbegin</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1a6a98c20beaf0085e9b75ed6a73b6fac5">rend</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1ab2f586a22c208f2db8981f236be1f8a5">crend</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a7c0ccc82f763ae0b3bf9fd78f218c206">size</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a79ebf142083abdc8dcd44a354f159129">max_size</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a1344b97a93e4af1c28f04d2f8238ee09">empty</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a3746b11d0b23dc5d2bbba1d9cea58a41">front</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> const &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a022dc0ba35bb79d3a00d31f6603bcfbe">front</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a5fd5f903aae0b2017103d59e368c71f7">back</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> const &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1ab3d4db33623c17c1f36712663487df1b">back</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a0456b2f0f8d879695698974f9f2b325d">fill</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;value) noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1aa0d612930f23d7545926c12c6149759b">swap</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a795f3202b17cb6bc3d4b771d8c6c9eaf">other</link>) noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a3acacc33c0ddfe1a24835436f1e9d9f2">reverse</link> () noexcept</para>
</listitem>
            <listitem><para>consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1ab93743da3d764bb199f0d93b13247b73">reg_digs_t</link> () noexcept</para>

<para>Constructores de <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1af158dcd2b4c5d1cd725810f7b32a6377">reg_digs_t</link> (const std::initializer_list&lt; <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &gt; &amp;arg) noexcept</para>

<para>Constructor por lista de digitos utilizando la función make_base_t. </para>
</listitem>
            <listitem><para>template&lt;typename ... Ts&gt; <?linebreak?>requires (std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;&amp;&amp;...)</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6d5930c7c0f8583b4000a60bd32aa00c">reg_digs_t</link> (const Ts &amp;... args) noexcept</para>

<para>Constructor por argumentos tipo <link linkend="_struct_num_repr_1_1dig__t">dig_t</link>: deduce el tipo. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a5f1afe08bc99f4458f4406fbf8bc4388">reg_digs_t</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp;rarg) noexcept</para>

<para>CONSTRUCTOR COPIA DESDE EL TIPO BASE. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a667cc7f5b4658b2195c48e794f5c84a6">reg_digs_t</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp;&amp;rarg) noexcept</para>

<para>CONSTRUCTOR MOVIMIENTO DESDE EL TIPO BASE. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1aaba6b4d99022c55a9b8ca3ce2d62a50c">reg_digs_t</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>Constructor copia desde un array cualquiera de dígitos <link linkend="_struct_num_repr_1_1dig__t">dig_t</link> (usando copy_arg_N&lt;N&gt;) </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1ad86b53a69638c4c1dddbcc396bd8c341">reg_digs_t</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>

<para>Constructor por movimiento desde un array cualquiera de dígitos <link linkend="_struct_num_repr_1_1dig__t">dig_t</link> (usando move_arg_N&lt;N&gt;) </para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c ... Ints_type&gt; <?linebreak?>requires ((sizeof...(Ints_type))==L)</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a64366dbe24ccb2e35ba2c4a9c6f1f1f6">reg_digs_t</link> (Ints_type ... dig_pow_i) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a3556d4ba2e14f426e919f1cfcde675fe">operator=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>

<para>Sobrecarga del operador copia. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1ab18c370a730eae337ebe1e42e554bfb3">operator=</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1add6d93e2ffcc34e57e4698a627d2fd48">operator=</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; N &gt; &amp;&amp;arg) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1aa424868f7b7f2da2b989b2eb96ed1ed1">operator=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;arg) noexcept</para>

<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c Int_Type&gt; </para><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1ada84ccdb7769b08b7b91b1dae6452c09">operator=</link> (Int_Type arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c Int_Type&gt; </para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a3ff2a749d367851189bc05a1687a0b22">operator Int_Type</link> () const noexcept</para>

<para>SE PODRÍA HACER PARA UINT128_T. </para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> *const <link linkend="_struct_num_repr_1_1reg__digs__t_1a29f49611f98ff0f0d0f4bf0c989d26f5">data</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr decltype(auto) <link linkend="_struct_num_repr_1_1reg__digs__t_1a7838aa779ec4ee589ba738f92786f356">cpy_data</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a81530d3849391d6dbc3c3a17fb486607">operator[]</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) const noexcept</para>

<para>&lt;summary=&quot;Sobrecarga del const dig_t &amp; operator[](size_t) const&quot;&gt; </para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1aaa8d34738ae18ebceb3399ca4df463b8">operator[]</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) noexcept</para>

<para>&lt;summary=&quot;Sobrecarga del dig_t &amp; operator[](size_t)&quot;&gt; </para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1abc257d67bb67ef69b1a2491e58a705e1">set_0</link> () noexcept</para>

<para>Funciones que ponen a constantes (constexpr) los objetos base_t. </para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a6808c754c084ff40f4d106cf42c6f350">set_1</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a635891fe476a0d485b6430eb003c66ff">set_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a9736402ea76979c6f3b550b4e7f8a2f0">set_dig</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> d) noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a02db587c3f90aadabbde0f92731f622d">set_fill_dig</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> d) noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a0d7f94d520c14a413858bb3fd2ebae9c">set_fill_1</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a8449e0efdd8a69da67e519ee2716c200">set_fill_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a00ff39c7cca1ca76bfb5c0dd8021841b">set_interval_0</link> () noexcept</para>

<para>&quot;Funciones que ponen a constantes(constexpr) los objetos un subintervalo
o subrango de base_t cualquiera&quot; </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1af61633115c32e8183d2f606ce5d815fd">set_interval_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>constexpr void <link linkend="_struct_num_repr_1_1reg__digs__t_1a538c70fae56df59c2ddbe0868f24cdaf">set_interval_dig</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> dig) noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1aeeeab7c383624a617b1ea9a9b83bf43d">is_0</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a2654ba7f2592f7b91f2dad311f33e683">is_1</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a6142af29fa32e0fa1e0fcccf7f1493e5">is_Bm1</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a4b713404cbac91d3d972d1b8595bdb40">is_B</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a15cc6e417db19bb0483b3d81b31bf20d">is_Bp1</link> () const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires (n&lt;L)</para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a435cc68f0dd8a90375404140fc9c8ff8">is_B_pow_m1</link> () const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires (n&lt;L-1)</para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1aa9715a437357c3a2a1f79fc7477bb57a">is_B_pow</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a2cc4d03f17f00015a43125e0f5018ef2">is_any_B_pow</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a8f7a8ee6879194fd027b67e20f578474">is_filled_of_1</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1ae0ead5a6439ee2a2a9f56dc29353ef60">is_filled_of_Bm1</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a3a7c58a84c5be2458373bc6083a4e3e9">is_filled_of</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> d) const</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ibegin, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> iend&gt; <?linebreak?>requires ((iend &lt;= L)&amp;&amp;(ibegin &lt; L)&amp;&amp;(ibegin != iend))</para><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt;(ibegin&lt; iend)?(iend-ibegin):(ibegin-iend)&gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1aa50d8abff6aa4a71c41fcb31c0441eb2">subregister</link> () const noexcept</para>

<para>TAKE A SUBREGISTER OF A REGISTER OF DIGITS. </para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1aba51984e457f7e0cd28fa38c3454b38a">mC_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a459dcc84f5a2ff05f229a2813eeca4eb">mC_B</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a2fe3516a538c7e83b6827106fd5606c2">C_Bm1</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a61e3773ab1f1b47ae335e5c561ca5c6c">C_B</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a05a97a435bf59c5442be92c071176aac">operator!</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1addfe409a19fc9017ac89b2516f4a6a8a">operator-</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a844edc62cc648266e8e9073666b00a87">operator&lt;&lt;</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>

<para>OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a9847e4f64cf1507ee623d67775eba2df">operator&lt;&lt;=</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>

<para>TODO TO DO VOY POR AQUI CON EL TEMA DE LOS CTHIS. </para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1acda9e6eea4d49b7f6fbbf9c3bec9f7cd">operator&gt;&gt;=</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a91c247827ae9c2c539b5d7089a9fe884">operator&gt;&gt;</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c289fab138512b65681d3c6fa1df2cc">rem_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a5826bd193c62e736efdbe0fdd81cb653">m_rem_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a9f01e4cb3e143f6a26bd251919afe9d8">mer_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a717ff4a829077dbe06174feaa92a22d7">m_mer_B</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1a1b446da3b8751e1c8af8839e1a59b1c5">operator|=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a88399df8a3b2e9f6fa413f5ba8c4147a">operator|</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1reg__digs__t_1aebcb3bf7aaf1baa65bd97aeec1e777df">operator&amp;=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a20034464834ae81a063a9c8fa4224f45">operator&amp;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_namespace_num_repr_1af5b9445db37f31d3d80a43ad37b03afa">int64_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1ae61c65b1123284d829626a91335def03">index_of_MSDig</link> () const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a72a186fd0231cb5140dc75466e628688">operator==</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;rarg) const noexcept</para>

<para>COMPARACIONES ENTRE BASE_T Y DIG_T EN FORMA BASE_T @ DIG_T. </para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1ad76a2aa47907fd2f3ec19035c0a926a6">operator!=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a5ecc41aa76ee4b40c1f7480177d701f4">operator&gt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a84b45a6bb497fbda0a83ac5b58c8a1a6">operator&lt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1ae9a2c8fbb6a3aa1ed25aee8950b0b10f">operator&gt;=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a871e547fbf592d7bf26f82fd019a3e65">operator&lt;=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a2d1a40f341324f56e566b838fe888264">operator==</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a369c8486faffc16e8bc798dbce25b101">operator!=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1af6e5280e0fbfa4b07d1a6651cbafa515">operator&gt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a37b9758878b51f5ed9ebbebc14b41c9c">operator&lt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a869c348238795f848214949bad8445b0">operator&gt;=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr bool <link linkend="_struct_num_repr_1_1reg__digs__t_1aa68aa5a93f69fcb7a191fec77bb27332">operator&lt;=</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) const noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>constexpr std::strong_ordering <link linkend="_struct_num_repr_1_1reg__digs__t_1a0f39118683e41ccec4e43fc0c3a94f7f">operator&lt;=&gt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;arg) const noexcept</para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</listitem>
            <listitem><para>constexpr std::weak_ordering <link linkend="_struct_num_repr_1_1reg__digs__t_1a1598611c9a2c97185a0c0719ed7309de">operator&lt;=&gt;</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> &amp;arg) const noexcept</para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Métodos públicos estáticos    </title>
        <itemizedlist>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2">regd_0</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4">regd_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e">regd_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f">regd_B</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n&gt;=0)&amp;&amp;(n &lt; L))</para><para>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6">regd_pow_n_B</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n&gt;=0)&amp;&amp;(n &lt; L))</para><para>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e">regd_pow_n_B_m1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::integral_c Int_Type&gt; </para><para>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba">assign</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, Int_Type arg) noexcept</para>

<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) A UN BASE_T. </para>
</listitem>
            <listitem><para>template&lt;bool with_result_type&gt; </para><para>static constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a36d07cae3bf81e5a9b43c1cffd201d38">m_add</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept -&gt; typename std::conditional_t&lt; with_result_type, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt; <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">binop_e::add</link> &gt;, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &gt;</para>

<para>END : OPERATORS | &amp; |= &amp;=. </para>
</listitem>
            <listitem><para>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d">m_sub</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>

<para>OPERATOR BASE_T -= DIG_T CON NOMBRE M_SUB. </para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122">add</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe">sub</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp;rarg) noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
Métodos públicos estáticos heredados desde <link linkend="_struct_num_repr_1_1reg__digs__t">NumRepr::reg_digs_t&lt; UINT_T, B, L &gt;</link>        <itemizedlist>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a9d37af8b2ce4db142cb55a932d8fd805">dig_0</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a3c8f7cb71f70468db3ba5ccef33bdd37">dig_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a48a6ce4848e83ccea11c42c2deea38d9">dig_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1aae46074f8eb1e11d4856e2efc720e3b4">dig_Bm2</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval UINT_T <link linkend="_struct_num_repr_1_1reg__digs__t_1aa6b20e53fc72fb5353a27a5db5205ea2">ui_0</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval UINT_T <link linkend="_struct_num_repr_1_1reg__digs__t_1a1ba13ed518c031c71ccd2aa99292c4f5">ui_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval UINT_T <link linkend="_struct_num_repr_1_1reg__digs__t_1aafcea2323aac8fcedfc0f0780e46df5f">ui_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval UINT_T <link linkend="_struct_num_repr_1_1reg__digs__t_1a3d59521dadb20ede37c648c6ec863bda">ui_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a869fb55d18546d9f677b47fd1dd1d8bd">sui_0</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a80e523569503af77fdf36cada4de6700">sui_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a51dd71f63e7ccf1c92adbe3876a5eb19">sui_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1adaa8d7c0417ae7a7e76237ba2d368ede">sui_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1ada9e6c806df8dfa18e7bf154bafb3a21">SIG_UINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1af47bb7bcb365e6060f836ec7d53c8565">sui_Bp1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1ac1cf8584292927fea378bde2e3172fce">ssi_0</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1af598442408cf2ed05923092e2ccb7cd2">ssi_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a5e0248eb0b0cef64dcbf5fb87823714e">ssi_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a80fbaa972abc3ee57f5e8561eb4e944d">ssi_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a85164c4e411cc319dffcc2a9f8d152e3">SIG_SINT_T</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1ae6d6e6d6877d2fe389cdbacbaf7a6f63">ssi_Bp1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1ac49dc9af3af62aea5a7dfde9114e6c18">regd_base_N_0</link> () noexcept</para>

<para>PARA EL TIPO-TEMPLATE BASE_N_T OBTENEMOS CONSTANTES INMEDIATAS TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL. </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1adb436e23c7144ee0da3db08cac34c7ed">regd_base_N_1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1aa001d41637e1a10c1284b5239b37159c">regd_base_N_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </para><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1ad9a96eb8b49ed44884da34180b85fe4f">regd_base_N_B</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n&gt;=0)&amp;&amp;(n &lt; N))</para><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a2ef368bdca679fa51aee6d18644b6a12">regd_base_N_pow_n_B</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n&gt;=0)&amp;&amp;(n &lt; N))</para><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a2dbaa5b4a1bb00dcfbdfa0414ef53cbf">base_N_t</link>&lt; N &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1af10d7f31743e81babe1c9d542f30f013">regd_base_N_pow_n_B_m1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1affe99648c3d9c6e3e4decac8d4e46ee1">regd_base_0</link> () noexcept</para>

<para>IDEM QUE ANTES PERO CON EL TIPO BASE_T ESPECIALIZANDO AL TIPO BASE_N_T&lt;L&gt; DONDE BASE_T == BASE_N_T&lt;L&gt; TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL. </para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a5b1efb8235b79459b15c6f2f84659452">regd_base_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a475a4bf204efd8f87c400575dc49114d">regd_base_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a69d2abd48bd92a58df7f51fc9e7578dd">regd_base_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a55521e5b02fa0a1d56745066e20eab91">regd_base_pow_n_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a16e44b01fdd4e66c3390c34578f32e2c">regd_base_pow_n_B_m1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1ad04bdf9bcccd5c68c414b2cca9e9bc75">regd_0</link> () noexcept</para>

<para>IDEM QUE ANTES PERO CON LA CLASE DERIVADA, LA ACTUAL TENEMOS CUIDADO DE CREAR UN RVALUE TEMPORAL. </para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a9d2524d7b34e2e1b7d98ec3a16ccac67">regd_1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1af02f9cc5afcc26fb14077a939c26ce85">regd_Bm1</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a8f86da208d0c9e947caea1a283711414">regd_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1af4fa7fec5b40b63434a86ee594adaed1">regd_pow_n_B</link> () noexcept</para>
</listitem>
            <listitem><para>static consteval <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a1e76f417daec0f07cb28088baec9fb29">regd_pow_n_B_m1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;typename ... Ints_type&gt; <?linebreak?>requires ((sizeof...(Ints_type)) == L)</para><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a4c1027d34df36c4d275a07ac00c3bf01">base_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1ab3cfc4aade78a43c2ec975477ba85912">normalize</link> (Ints_type ... digits_pow_i) noexcept</para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1acd5dfd683e4fee83f7561568f809a2ba">cat</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;arg) noexcept</para>

<para>STATIC REG_DIGS_T CAT(REG_DIGS_T) </para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> M&gt; </para><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; L+M &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1aeaaa5fc1d830756bffaf882156b86896">cat</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;larg, const <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; M &gt; &amp;rarg) noexcept</para>

<para>STATIC &lt;M&gt; REG_N_DIGS_T&lt;L+M&gt; CAT(REG_DIGS_T,REG_N_DIGS_T&lt;M&gt;) </para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; L+1 &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a8e8c64cba0341a3ad057053b346e42bd">cat</link> (const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;larg, <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> rarg) noexcept</para>

<para>STATIC REG_DIGS_T&lt;L+1&gt; CAT(REG_DIGS_T,DIG_T) </para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; 1+L &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a1cdda4f3f9f0ef5c4668901fb0e40b33">cat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> larg, const <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> &amp;rarg) noexcept</para>

<para>REG_N_DIGS_T&lt;1+L&gt; CAT(DIG_T,REG_DIGS_T) </para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; 1 &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a881a503845af0e9c28e2c019262062c8">cat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> larg) noexcept</para>

<para>STATIC REG_N_DIGS_T&lt;1&gt; CAT(DIG_T) </para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; 2 &gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a41c8a71bdf2a6f9b306df55be5136649">cat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> larg, <link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link> rarg) noexcept</para>

<para>STATIC REG_N_DIGS_T&lt;1+1&gt; CAT(DIG_T,DIG_T) </para>
</listitem>
            <listitem><para>template&lt;typename T0 , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;)&amp;&amp;...)&amp;&amp; (std::is_same_v&lt;T0,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;) )</para><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; 1+(sizeof ...(Ts))&gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1aa542abd7039bf3f0a9c62200a7b944d8">cat</link> (T0 dig0, Ts ... dig_pack) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename T , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;) )</para><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; L+1+(sizeof ...(Ts))&gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1adb0296af7bc31546157ad06a67573a22">cat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> larg, T dig, Ts ... dig_pack) noexcept</para>
</listitem>
            <listitem><para>template&lt;typename T , typename ... Ts&gt; <?linebreak?>requires ( ((std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;)&amp;&amp;...) &amp;&amp; (std::is_same_v&lt;T,<link linkend="_struct_num_repr_1_1reg__digs__t_1aeb4b982cfd4f96af707fc66dfef1653e">dig_t</link>&gt;) )</para><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; L+1+(sizeof ...(Ts))&gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1ae9ba2cc837d955061093bb0da463e2e6">cat</link> (T dig, Ts ... dig_pack, <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> rarg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ... N_pack&gt; <?linebreak?>requires ((N&gt;0)&amp;&amp;((N_pack&gt;0)&amp;&amp;...))</para><para>static constexpr <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; N+(...+(N_pack))&gt; <link linkend="_struct_num_repr_1_1reg__digs__t_1a217ae996ddbff03f35fb3e7c6b24c1dd">cat</link> (<link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; N &gt; larg, <link linkend="_struct_num_repr_1_1reg__digs__t_1a6ffaa21b6eacfbd5316c9921c11d4db0">reg_N_digs_t</link>&lt; N_pack &gt; ... rarg_pack) noexcept</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a9328818c1dfd9433ac98d72cdfa8aba5">is_type_template_string_id</link> (std::string in) noexcept</para>

<para>el parser/lexer del <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link> </para>
</listitem>
            <listitem><para>static std::string <link linkend="_struct_num_repr_1_1reg__digs__t_1a7d907a0fc450d27d7937370a2209aed6">to_type_template_string_id</link> () noexcept</para>
</listitem>
            <listitem><para>static <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> <link linkend="_struct_num_repr_1_1reg__digs__t_1a2ff36f133f6bcf9cd379e54be025a214">size_of_type_template_string_id</link> () noexcept</para>
</listitem>
            <listitem><para>static bool <link linkend="_struct_num_repr_1_1reg__digs__t_1a011d4b57bf296a0e08fff4385eca0e08">get_type_template_string_id_token</link> (std::istream &amp;is)</para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Métodos privados    </title>
        <itemizedlist>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> *const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd">base_this</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b">base_ref_cthis</link> () noexcept</para>
</listitem>
            <listitem><para>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70">by_index</link> (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) noexcept</para>
</listitem>
            <listitem><para>template&lt;bool with_result_type&gt; </para><para>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac67f0700240165427c4bb850d5bb08ba">predecrement</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;arg) noexcept -&gt; std::conditional&lt; with_result_type, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt; <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">binop_e::sub</link> &gt;, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; &gt;</para>
</listitem>
            <listitem><para>template&lt;bool with_result_type&gt; </para><para>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a6f5cbeb4edc7087fda335fd78b82cc04">postdecrement</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;arg) noexcept -&gt; std::conditional&lt; with_result_type, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt; <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">binop_e::sub</link> &gt;, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; &gt;</para>
</listitem>
            <listitem><para>template&lt;bool with_result_type&gt; </para><para>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093">mult</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const noexcept -&gt; std::conditional_t&lt; with_result_type, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt; binop_e::mult &gt;, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Métodos privados estáticos    </title>
        <itemizedlist>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aa340d969b6d01c15b8181e542d3a2fef">set_0</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aa06e3a55433e98a553d0204ce642f6b8">set_1</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ae15231d7a8ac742f64c352de56ad42b5">set_Bm1</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;arg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ab5263cf1eaa919874172ed0628db64f0">set_dig</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> d) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ab34465d0d6e59a525a12c9977e977817">set_fill_dig</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> d) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af13be3b273d68ffebd6958b6337e62e5">set_fill_1</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a75874430d65f1256ed2a78f658a6ae46">set_fill_Bm1</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad">set_interval_0</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8">set_interval_Bm1</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b">set_interval_dig</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> dig) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf">set_interval_0</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb">set_interval_Bm1</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg) noexcept</para>
</listitem>
            <listitem><para>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</para><para>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828">set_interval_dig</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> dig) noexcept</para>
</listitem>
            <listitem><para>template&lt;bool with_result_type&gt; </para><para>static constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a50aeb5c3fe8c0b4c63285056e36b4ae6">preincrement</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;arg) noexcept -&gt; std::conditional_t&lt; with_result_type, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt; <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">binop_e::add</link> &gt;, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; &gt;</para>
</listitem>
            <listitem><para>template&lt;bool with_result_type&gt; </para><para>static constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a38c65d55b25b542097093afe2787eb37">postincrement</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;arg) noexcept -&gt; std::conditional&lt; with_result_type, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt; <link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">binop_e::add</link> &gt;, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; &gt;</para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d">rem_B</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>

<para>BEGIN : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
</listitem>
            <listitem><para>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb">m_rem_B</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1">mer_B</link> (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
            <listitem><para>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8">m_mer_B</link> (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descripción detallada</title>
<simplesect><title>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt;<?linebreak?>requires (suitable_base&lt;UINT_T,B&gt;() &amp;&amp; (L&gt;0))<?linebreak?>struct NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</title></simplesect>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00014">14</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<section>
<title>Documentación de los &apos;Typedef&apos; miembros de la clase</title>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358"/><section>
    <title>base_N_t</title>
<indexterm><primary>base_N_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>base_N_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::base_N_t =  <link linkend="_struct_num_repr_1_1reg__digs__t">reg_digs_t</link>&lt;UINT_T,B,N&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00023">23</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565"/><section>
    <title>base_t</title>
<indexterm><primary>base_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>base_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::base_t =  <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt;L&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00024">24</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40"/><section>
    <title>dig_t</title>
<indexterm><primary>dig_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>dig_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::dig_t =  <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link>&lt;UINT_T,B&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00019">19</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c"/><section>
    <title>nat_reg_N_digs_t</title>
<indexterm><primary>nat_reg_N_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_N_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_N_digs_t =  <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt;UINT_T,B,N&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00035">35</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a5ae37d39e889eda3b56a58af5c242d7f"/><section>
    <title>res_base_N_op_t</title>
<indexterm><primary>res_base_N_op_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>res_base_N_op_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::res_base_N_op_t =  typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt;<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt;N&gt;,op,N&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00027">27</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8"/><section>
    <title>res_base_op_t</title>
<indexterm><primary>res_base_op_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>res_base_op_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::res_base_op_t =  typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt;<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link>,op,L&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00030">30</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ab0830872a3654524eb3117e69646fe08"/><section>
    <title>res_N_op_t</title>
<indexterm><primary>res_N_op_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>res_N_op_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::res_N_op_t =  typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt;<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt;N&gt;,op,N&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00038">38</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad151db2178dbb157db841e5c8021fb64"/><section>
    <title>res_op_t</title>
<indexterm><primary>res_op_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>res_op_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8">binop_e</link> op&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::res_op_t =  typename <link linkend="_struct_num_repr_1_1auxiliary__types_1_1result__operation__t">auxiliary_types::result_operation_t</link>&lt;<link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>,op,L&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00041">41</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a114709921106b32e26ba3e8a1b64a652"/><section>
    <title>SIG_SINT_T</title>
<indexterm><primary>SIG_SINT_T</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>SIG_SINT_T</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::SIG_SINT_T =  typename <link linkend="_namespace_num_repr_1_1type__traits_1a814fee89586c4dec3ac2c985af201649">type_traits::sig_SInt_for_UInt_t</link>&lt;UINT_T&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00017">17</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a0bc66161b8896407c4c036a8ef98f1fa"/><section>
    <title>SIG_UINT_T</title>
<indexterm><primary>SIG_UINT_T</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>SIG_UINT_T</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>using <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::SIG_UINT_T =  typename <link linkend="_namespace_num_repr_1_1type__traits_1a9a526e626a27cfc6e05712d8b138604b">type_traits::sig_UInt_for_UInt_t</link>&lt;UINT_T&gt;</computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00016">16</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
</section>
<section>
<title>Documentación del constructor y destructor</title>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a48e13b837d97d5b20e16d06fdb896453"/><section>
    <title>nat_reg_digs_t()<computeroutput>[1/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR POR DEFECTO. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00094">94</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a48e13b837d97d5b20e16d06fdb896453_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a00c466fc721a8c13b2c2e871cd7820b4"/><section>
    <title>nat_reg_digs_t()<computeroutput>[2/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (const std::initializer_list&lt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR POR LISTA DE DIGITOS. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00098">98</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a79417dac5a4154522330355788d20ecf"/><section>
    <title>nat_reg_digs_t()<computeroutput>[3/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;typename ... Ts&gt; <?linebreak?>requires (std::is_same_v&lt;Ts,<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link>&gt;&amp;&amp;...)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (const Ts &amp;... args)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR POR ARGUMENTOS DIGITOS SIN LIMITE: DEDUCE EL TIPO. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00104">104</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a04918e94f15b63785431c4153b05f992"/><section>
    <title>nat_reg_digs_t()<computeroutput>[4/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR COPIA DESDE UN ARRAY DE DIGITOS. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00202">202</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad367e797ace322813a6fff1bb7306870"/><section>
    <title>nat_reg_digs_t()<computeroutput>[5/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;&amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00209">209</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a56c17d76bfaf24bbe95e8cd0402367fc"/><section>
    <title>nat_reg_digs_t()<computeroutput>[6/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;type_traits::integral_c ... Ints_type&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (Ints_type ... dig_pow_i)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>END : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
</para>

<para>CONSTRUCTOR COPIA DESDE ARGUMENTOS ENTEROS SIN LIMITE : DEDUCE EL TIPO </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00217">217</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a56c17d76bfaf24bbe95e8cd0402367fc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac754667e568ecdda0033e4672fdeefd3"/><section>
    <title>nat_reg_digs_t()<computeroutput>[7/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR COPIA POR REFERENCIA CONSTANTE. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00223">223</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ac754667e568ecdda0033e4672fdeefd3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a9487898486f71a81f5ccc6573f8709db"/><section>
    <title>nat_reg_digs_t()<computeroutput>[8/8]</computeroutput></title>
<indexterm><primary>nat_reg_digs_t</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>nat_reg_digs_t</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::nat_reg_digs_t (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;&amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>CONSTRUCTOR POR MOVIMIENTO. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00229">229</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a9487898486f71a81f5ccc6573f8709db_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Documentación de las funciones miembro</title>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a00fccdbaa0c2380eac5a7ae6f196c122"/><section>
    <title>add()</title>
<indexterm><primary>add</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>add</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::add (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01276">1276</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a02c8ea238d4e8921ae5e92d330f5bfba"/><section>
    <title>assign()</title>
<indexterm><primary>assign</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>assign</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;type_traits::integral_c Int_Type&gt; </computeroutput><para><computeroutput>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::assign (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, Int_Type arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) A UN BASE_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00491">491</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a02c8ea238d4e8921ae5e92d330f5bfba_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a41f2c182cf6b668b25a17364f7a32ba6"/><section>
    <title>base_const_ref_cthis()</title>
<indexterm><primary>base_const_ref_cthis</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>base_const_ref_cthis</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::base_const_ref_cthis ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00112">112</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a41f2c182cf6b668b25a17364f7a32ba6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a41f2c182cf6b668b25a17364f7a32ba6_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aaaef3120f842a51681f90531559efb3c"/><section>
    <title>base_cpy_cthis()</title>
<indexterm><primary>base_cpy_cthis</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>base_cpy_cthis</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::base_cpy_cthis ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00110">110</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aaaef3120f842a51681f90531559efb3c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aaaef3120f842a51681f90531559efb3c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ab28b12d87b4ba5e5f65beb35d278e51b"/><section>
    <title>base_ref_cthis()</title>
<indexterm><primary>base_ref_cthis</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>base_ref_cthis</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::base_ref_cthis ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00121">121</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ab28b12d87b4ba5e5f65beb35d278e51b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ab28b12d87b4ba5e5f65beb35d278e51b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aeec8fdeac36f8e4f67ca475100f83ffd"/><section>
    <title>base_this()</title>
<indexterm><primary>base_this</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>base_this</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> *const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::base_this ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00119">119</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aeec8fdeac36f8e4f67ca475100f83ffd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1abd8cc521e9af8cfb63a845d6295dfc70"/><section>
    <title>by_index()</title>
<indexterm><primary>by_index</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>by_index</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::by_index (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00123">123</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_abd8cc521e9af8cfb63a845d6295dfc70_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_abd8cc521e9af8cfb63a845d6295dfc70_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1acf64ab106dc1e03510434256064d85ef"/><section>
    <title>cat()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>cat</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>cat</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N+L &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::cat (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>SUBREPR =&gt; SUB REPRESENTACION. </para>
</para>

<para>NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+M&gt; NAT_REG_T::CAT_INV(NAT_REG_N_T&lt;M&gt;) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT(DIG_T) NAT_REG_N_T&lt;L+1&gt; NAT_REG_T::CAT_INV(DIG_T) </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00575">575</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_acf64ab106dc1e03510434256064d85ef_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a1e54bb927680f14dbd4d180a1262bc8a"/><section>
    <title>cat()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>cat</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>cat</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; L+1 &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::cat (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00579">579</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a1e54bb927680f14dbd4d180a1262bc8a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a503c26355f8e7d254480e5bc3c0aca90"/><section>
    <title>cat_inv()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>cat_inv</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>cat_inv</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N+L &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::cat_inv (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00585">585</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a503c26355f8e7d254480e5bc3c0aca90_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a4df4d89b90103f73c6bd40a88ca103b3"/><section>
    <title>cat_inv()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>cat_inv</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>cat_inv</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; L+1 &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::cat_inv (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00589">589</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a4df4d89b90103f73c6bd40a88ca103b3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a658eb866c878e5c8fa312d190fca084b"/><section>
    <title>const_base_this()</title>
<indexterm><primary>const_base_this</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>const_base_this</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> *const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::const_base_this ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00108">108</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a658eb866c878e5c8fa312d190fca084b_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aa32760e590ee36be179c1fa86566ae2a"/><section>
    <title>const_by_index()</title>
<indexterm><primary>const_by_index</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>const_by_index</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::const_by_index (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00114">114</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aa32760e590ee36be179c1fa86566ae2a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aa32760e590ee36be179c1fa86566ae2a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a3ab8e26377b4f409fe0ec67972db7de4"/><section>
    <title>copy_arg_N()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>copy_arg_N</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>copy_arg_N</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::copy_arg_N (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>BEGIN : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS FUNCION DELEGADA PARA COPIA DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>

<para>&lt; Z &lt; W or Z == W</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00134">134</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a3ab8e26377b4f409fe0ec67972db7de4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a10794eef68bb9e67cc275c843794b89a"/><section>
    <title>copy_arg_N()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>copy_arg_N</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>copy_arg_N</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::copy_arg_N (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>FUNCION DELEGADA PARA COPIA DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00183">183</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a10794eef68bb9e67cc275c843794b89a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a224c57f7ae2679ea9b76fd50189efdcf"/><section>
    <title>cpy_by_index()</title>
<indexterm><primary>cpy_by_index</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>cpy_by_index</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::cpy_by_index (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ix) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00116">116</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a224c57f7ae2679ea9b76fd50189efdcf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a224c57f7ae2679ea9b76fd50189efdcf_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a36d07cae3bf81e5a9b43c1cffd201d38"/><section>
    <title>m_add()</title>
<indexterm><primary>m_add</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>m_add</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;bool with_result_type&gt; </computeroutput><para><computeroutput>static constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::m_add (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg) -&gt; typename std::conditional_t&lt;
			with_result_type,
				<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">binop_e::add</link>&gt;,
				<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link>
		&gt;
	<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>END : OPERATORS | &amp; |= &amp;=. </para>
</para>

<para>OPERACIONES BINARIAS CON/SIN TIPO RESULTADO OPERACIONES BINARIAS BASE_T @ DIG_T OPERATOR BASE_T += DIG_T CON NOMBRE M_ADDITION </para>

<para>CARRY INICIAL POR DEFECTO</para>

<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>

<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>

<para>INICIALIZACION</para>

<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>

<para>NOMBRE CORTO PARA RET.CARRY</para>

<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>

<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>

<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01157">1157</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a36d07cae3bf81e5a9b43c1cffd201d38_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a3ce938b83498e57988f39a9c6a81b7f8"/><section>
    <title>m_mer_B()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>m_mer_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>m_mer_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::m_mer_B (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01032">1032</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a3ce938b83498e57988f39a9c6a81b7f8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad55f50be24724cc0790b2cafb3733a69"/><section>
    <title>m_mer_B()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>m_mer_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>m_mer_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::m_mer_B (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01091">1091</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ad55f50be24724cc0790b2cafb3733a69_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a90c4189790e4a259cc04874a752a15cb"/><section>
    <title>m_rem_B()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>m_rem_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>m_rem_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::m_rem_B (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01016">1016</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a90c4189790e4a259cc04874a752a15cb_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a7c50665e783bd8dd09b76af26e2d43b4"/><section>
    <title>m_rem_B()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>m_rem_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>m_rem_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::m_rem_B (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01077">1077</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a7c50665e783bd8dd09b76af26e2d43b4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a65523219739c53202de6718061c2867d"/><section>
    <title>m_sub()</title>
<indexterm><primary>m_sub</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>m_sub</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::m_sub (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERATOR BASE_T -= DIG_T CON NOMBRE M_SUB. </para>
</para>

<para>COPIA DE RARG</para>

<para>CARRY INICIAL POR DEFECTO: NULO</para>

<para>SUMA DEL PRIMER DIGITO DE LARG[0] Y RARG</para>

<para>BUCLE FOR QUE RESTA RARG A LARG DESDE IDX=1 A IDX=L-1</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01240">1240</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a65523219739c53202de6718061c2867d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a0fa3baa8ec9c9f70898791bb47ced6b1"/><section>
    <title>mer_B()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>mer_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>mer_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::mer_B (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01024">1024</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a0fa3baa8ec9c9f70898791bb47ced6b1_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a76502863356a962c922528a7e0de7c22"/><section>
    <title>mer_B()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>mer_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>mer_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::mer_B (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01084">1084</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a76502863356a962c922528a7e0de7c22_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ae8944cfac1e1fd4c1e0a6be9bd5bc9f4"/><section>
    <title>move_arg_N()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>move_arg_N</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>move_arg_N</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::move_arg_N (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;&amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>FUNCION DELEGADA PARA MOVER DE UN ARRAY DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>

<para>&lt; Z &lt; W or Z == W</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00159">159</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ae8944cfac1e1fd4c1e0a6be9bd5bc9f4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ae8944cfac1e1fd4c1e0a6be9bd5bc9f4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a8d4656d2c0937af44d8868383da8c26d"/><section>
    <title>move_arg_N()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>move_arg_N</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>move_arg_N</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::move_arg_N (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;&amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>FUNCION DELEGADA PARA MOVER DE UN NAT_REG_N_DIGS_T DEL MISMO TAMANO O UN TAMANO CUALQUIERA &quot;N&quot; </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00192">192</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a8d4656d2c0937af44d8868383da8c26d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a652e69b8eb929e7d43f3e1098ea4a093"/><section>
    <title>mult()</title>
<indexterm><primary>mult</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>mult</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;bool with_result_type&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::mult (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const -&gt; std::conditional_t&lt;
			with_result_type,
				<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt;binop_e::mult&gt;,
				const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;
		&gt;
	<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACIONES &apos;@&apos;(REG_DIGS_T,DIG_T)-&gt;RESULT_TYPE&lt;&apos;@&apos;&gt; &apos;@&apos; = MULT </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01321">1321</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a652e69b8eb929e7d43f3e1098ea4a093_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a314ac41efce60c862c67a3939c8e6c5e"/><section>
    <title>operator Int_Type()</title>
<indexterm><primary>operator Int_Type</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator Int_Type</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;type_traits::integral_c Int_Type&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator Int_Type ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00605">605</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a314ac41efce60c862c67a3939c8e6c5e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac9064422cde6b378fe3c6242e41c0e9c"/><section>
    <title>operator%()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator%</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator%</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator% (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; UINT_T, B, L &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01718">1718</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a19230c6b73d80f18d23b299450d2a6d0"/><section>
    <title>operator%()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator%</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator%</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator% (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>REMAINDER BY A DIGIT. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01529">1529</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a149564766c923ec353f74e647d15a0f5"/><section>
    <title>operator&amp;()</title>
<indexterm><primary>operator&amp;</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&amp;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&amp; (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; UINT_T, B, L &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01126">1126</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a2700fbcaf685ccd1d8e1aebfd71e59b2"/><section>
    <title>operator&amp;=()</title>
<indexterm><primary>operator&amp;=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&amp;=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&amp;= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; UINT_T, B, L &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01119">1119</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a2700fbcaf685ccd1d8e1aebfd71e59b2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a8c41105ef914ccd1caec1a993bd95601"/><section>
    <title>operator()()</title>
<indexterm><primary>operator()</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator()</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;type_traits::integral_c Int_Type = UINT_T&gt; </computeroutput><para><computeroutput>constexpr Int_Type <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator() (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> idx) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00671">671</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a8c41105ef914ccd1caec1a993bd95601_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a2244f1f8ec6816d363690387c8e24e5e"/><section>
    <title>operator*()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator* (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01683">1683</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ab80945af6751b25477521685c680b0a0"/><section>
    <title>operator*()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator* (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01710">1710</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a66df3998850226ded5adad90ba303519"/><section>
    <title>operator*()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator*</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator*</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator* (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01505">1505</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1abb76020807fd7517e6c238c41291d830"/><section>
    <title>operator*=()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator*= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01626">1626</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a0e87dc1755fe87fbbb6a6ce6a32b5d51"/><section>
    <title>operator*=()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator*=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator*=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator*= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01640">1640</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a2e993a7ba4bced5c0294564e2ba67999"/><section>
    <title>operator+()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+ (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>TO DO. </para>
</para>

<para>TO DO </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01665">1665</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1acff45608b5b1956e95e00d668b6f9e53"/><section>
    <title>operator+()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+ (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01304">1304</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_acff45608b5b1956e95e00d668b6f9e53_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1afcfbc7a19a2913245aeca67444ecbdc7"/><section>
    <title>operator+()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+ (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01692">1692</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad75f5d976f829391ff1a2dd444ada770"/><section>
    <title>operator+()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>operator+</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+ (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01489">1489</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a061cc41d3e0bcfca2f86c6f15eeeba7b"/><section>
    <title>operator++()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator++ ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00786">786</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a061cc41d3e0bcfca2f86c6f15eeeba7b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad7a7be3dd91bec57f46819f95a5bbe8c"/><section>
    <title>operator++()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator++</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator++</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator++ (int )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00818">818</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ad7a7be3dd91bec57f46819f95a5bbe8c_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a4f4dcebb7aaf1dacde690b6b847e66d4"/><section>
    <title>operator+=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01544">1544</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a4f4dcebb7aaf1dacde690b6b847e66d4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1af16da7d777f0461043ec0d7daae338b3"/><section>
    <title>operator+=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01290">1290</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_af16da7d777f0461043ec0d7daae338b3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a2f2b61989451de1806071e761547e75e"/><section>
    <title>operator+=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator+=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator+=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator+= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01583">1583</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a962ba532424e77c124ebc9fbde8d75cc"/><section>
    <title>operator-()<computeroutput>[1/4]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator- (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01674">1674</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a2d07be047b2627cdf0b309167372ceff"/><section>
    <title>operator-()<computeroutput>[2/4]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator- (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01310">1310</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a2d07be047b2627cdf0b309167372ceff_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a4c2bf9b5eb73071ee089b28f26de7ace"/><section>
    <title>operator-()<computeroutput>[3/4]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator- (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01701">1701</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a22fe395b3bc039501e85f32739585378"/><section>
    <title>operator-()<computeroutput>[4/4]</computeroutput></title>
<indexterm><primary>operator-</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator- (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01497">1497</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aca9335419e9033518f40cccb436c13f5"/><section>
    <title>operator--()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator-- ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00909">909</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aca9335419e9033518f40cccb436c13f5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aceeb01544e642ed62c0f91026d78fd41"/><section>
    <title>operator--()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator--</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator--</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator-- (int )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00941">941</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aceeb01544e642ed62c0f91026d78fd41_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ae1fb554a49a057b8e372a7c3b661559b"/><section>
    <title>operator-=()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator-= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>&lt; cparg pasa a ser el complemento a la base menos 1 de cparg</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01592">1592</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ae1fb554a49a057b8e372a7c3b661559b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1abcc6c82c4a4563ff93f43cdba0ea5a3d"/><section>
    <title>operator-=()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator-= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01297">1297</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_abcc6c82c4a4563ff93f43cdba0ea5a3d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a88e0cbd81bf9591a474869c5abd7579b"/><section>
    <title>operator-=()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator-=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator-=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator-= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01617">1617</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad662b6de3a00cd05bd8360af261578af"/><section>
    <title>operator/()</title>
<indexterm><primary>operator/</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator/</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator/ (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>DIVISION BY A DIGIT. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01522">1522</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a49556722a8fb2fe40f41d12a23cd7773"/><section>
    <title>operator&lt;&lt;()</title>
<indexterm><primary>operator&lt;&lt;</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&lt;&lt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&lt;&lt; (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01042">1042</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a258de4665d5dad190a1f431949a57e9b"/><section>
    <title>operator&lt;&lt;=()</title>
<indexterm><primary>operator&lt;&lt;=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&lt;&lt;=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&lt;&lt;= (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01050">1050</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a258de4665d5dad190a1f431949a57e9b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad7426f73c780c180a0c684705e3e277a"/><section>
    <title>operator&lt;=&gt;()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>operator&lt;=&gt;</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&lt;=&gt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr std::weak_ordering <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&lt;=&gt; (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00641">641</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ad7426f73c780c180a0c684705e3e277a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a158ee12a14cbc5dc81d1a563915b8484"/><section>
    <title>operator&lt;=&gt;()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>operator&lt;=&gt;</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&lt;=&gt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr std::weak_ordering <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&lt;=&gt; (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00648">648</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a158ee12a14cbc5dc81d1a563915b8484_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a760667e522ab381ea922f79a0fe37032"/><section>
    <title>operator&lt;=&gt;()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>operator&lt;=&gt;</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&lt;=&gt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr std::strong_ordering <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&lt;=&gt; (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERADOR COMPARACION SPACESHIP C++20. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00632">632</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a760667e522ab381ea922f79a0fe37032_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aab48498228625991e1b7a6efc1714d6a"/><section>
    <title>operator=()<computeroutput>[1/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp;&amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION ASIGNACION POR COPIA MOVIMIENTO DESDE BASE_N_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00258">258</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aab48498228625991e1b7a6efc1714d6a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aae26e3fd0c597eb576b8a73c8a6e0921"/><section>
    <title>operator=()<computeroutput>[2/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION ASIGNACION POR COPIA REFERENCIA DESDE BASE_N_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00247">247</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aae26e3fd0c597eb576b8a73c8a6e0921_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aba43c889c90dfbb661c06609e10393e4"/><section>
    <title>operator=()<computeroutput>[3/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION ASIGNACION POR COPIA REFERENCIA CONST <emphasis>NO</emphasis> COPIABLE DESDE BASE_N_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00236">236</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aba43c889c90dfbb661c06609e10393e4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a38fa3f288d43c0fa115e89bf9afd6da5"/><section>
    <title>operator=()<computeroutput>[4/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00479">479</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a38fa3f288d43c0fa115e89bf9afd6da5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a0222f0fe5e680461731101767d0d658b"/><section>
    <title>operator=()<computeroutput>[5/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION ASIGNACION POR COPIA REFERENCIA EN LA QUE SE PUEDE COPIAR. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00269">269</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a0222f0fe5e680461731101767d0d658b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a72f08f8b1a5fa90636429b936399920b"/><section>
    <title>operator=()<computeroutput>[6/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION ASIGNACION POR COPIA EN LA QUE <emphasis>NO</emphasis> SE PUEDE COPIAR. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00291">291</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a72f08f8b1a5fa90636429b936399920b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ab1a63d715621ca9fea2c4d765155a23b"/><section>
    <title>operator=()<computeroutput>[7/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;type_traits::integral_c Int_Type&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (Int_Type arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION COPIA DESDE UN ENTERO CONVERSION A LA BASE B DEL OBJETO ARG DE TIPO INT_TYPE </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00520">520</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ab1a63d715621ca9fea2c4d765155a23b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ae13d640c0fc939f463fe4db5fb58fc0a"/><section>
    <title>operator=()<computeroutput>[8/8]</computeroutput></title>
<indexterm><primary>operator=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator= (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; N &gt; &amp;&amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION ASIGNACION POR MOVIMIENTO. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00280">280</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ae13d640c0fc939f463fe4db5fb58fc0a_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a780df06ed084ec6d67298c50d5bebd06"/><section>
    <title>operator&gt;&gt;()</title>
<indexterm><primary>operator&gt;&gt;</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&gt;&gt;</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&gt;&gt; (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01057">1057</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1afdfd81c1577f21a78a883d78c69e661d"/><section>
    <title>operator&gt;&gt;=()</title>
<indexterm><primary>operator&gt;&gt;=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator&gt;&gt;=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator&gt;&gt;= (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01063">1063</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_afdfd81c1577f21a78a883d78c69e661d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a99c01e95abff85318cb5a4e6c0fba2ae"/><section>
    <title>operator[]()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator[] (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> idx) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00659">659</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a99c01e95abff85318cb5a4e6c0fba2ae_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a953e903e06ac7220399e624582ddfe1f"/><section>
    <title>operator[]()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>operator[]</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator[]</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator[] (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> idx)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00665">665</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a953e903e06ac7220399e624582ddfe1f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a9b74fb6bb9d72c60570c4105ab56894a"/><section>
    <title>operator|()</title>
<indexterm><primary>operator|</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator|</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator| (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; UINT_T, B, L &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01111">1111</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac904337e0a7ca97801a344494172e56e"/><section>
    <title>operator|=()</title>
<indexterm><primary>operator|=</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>operator|=</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> &amp; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::operator|= (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link>&lt; UINT_T, B, L &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>END : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
</para>

<para>BEGIN : OPERATORS | &amp; |= &amp;= </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01104">1104</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ac904337e0a7ca97801a344494172e56e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a6f5cbeb4edc7087fda335fd78b82cc04"/><section>
    <title>postdecrement()</title>
<indexterm><primary>postdecrement</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>postdecrement</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;bool with_result_type&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::postdecrement (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; arg) -&gt; std::conditional&lt;
				with_result_type,
						<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">binop_e::sub</link>&gt;,
						const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link>&amp;
				&gt;
	<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00919">919</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a38c65d55b25b542097093afe2787eb37"/><section>
    <title>postincrement()</title>
<indexterm><primary>postincrement</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>postincrement</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;bool with_result_type&gt; </computeroutput><para><computeroutput>static constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::postincrement (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; arg) -&gt; std::conditional&lt;
					with_result_type,
							<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">binop_e::add</link>&gt;,
							const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;
			&gt;
	<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00796">796</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac67f0700240165427c4bb850d5bb08ba"/><section>
    <title>predecrement()</title>
<indexterm><primary>predecrement</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>predecrement</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;bool with_result_type&gt; </computeroutput><para><computeroutput>constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::predecrement (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; arg) -&gt; std::conditional&lt;
				with_result_type,
						<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a8a68dc3e925eacf92633be230722a140">binop_e::sub</link>&gt;,
						const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link>&amp;
				&gt;
	<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>BORROW INICIAL POR DEFECTO</para>

<para>RESTA 1 A ARG EN IDX == 0</para>

<para>BUCLE FOR QUE RESTA A ARG UN 1 DESDE IDX=1 A IDX=L-1</para>

<para>CREAMOS EL RETORNO RET</para>

<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>

<para>NOMBRE CORTO PARA RET.BORROW</para>

<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>

<para>RESTA 1 A ARG EN IDX == 0</para>

<para>BUCLE FOR QUE RESTA BORROW A ARG [DESDE 1 EN IDX=0] DESDE IDX=1 A IDX=L-1</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00828">828</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ac67f0700240165427c4bb850d5bb08ba_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a50aeb5c3fe8c0b4c63285056e36b4ae6"/><section>
    <title>preincrement()</title>
<indexterm><primary>preincrement</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>preincrement</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;bool with_result_type&gt; </computeroutput><para><computeroutput>static constexpr auto <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::preincrement (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; arg) -&gt; std::conditional_t&lt;
					with_result_type,
						<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a746f29b586f41fa1f3c2ef159158cae8">res_base_op_t</link>&lt;<link linkend="_namespace_num_repr_1af0ffab053045d0f8f4bc9f35a0df1de8a34ec78fcc91ffb1e54cd85e4a0924332">binop_e::add</link>&gt;,
						const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp;
			&gt;
	<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>&lt; PREINCREMENT(OBJ) == ++OBJ SOLO QUE DEVUELVE CARRY TAMBIÉN PREINCREMENT(OBJ) -&gt; CONDICIONALMENTE BIEN RES_BASE_OP_T (con CARRY), BIEN BASE_T (sin CARRY) &lt; result_content_low result_content_high carry borrow result_content_quotient result_content_remainder good_result </para>

<para>true == tipo resultado</para>

<para>CREAMOS EL RETORNO RET DE TIPO RESULTADO</para>

<para>NOMBRE CORTO PARA RET.CARRY</para>

<para>NOMBRE CORTO PARA RET.RESULT_CONTENT_LOW</para>

<para>NOMBRE CORTO PARA RET.GOOD_RESULT</para>

<para>INCREMENTO DEL PRIMER DIGITO</para>

<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>

<para>CARRY INICIAL POR DEFECTO</para>

<para>INCREMENTO DEL PRIMER DIGITO</para>

<para>BUCLE FOR QUE SUMA ARG Y 1 DESDE IDX=1 A IDX=L-1</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00701">701</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a50aeb5c3fe8c0b4c63285056e36b4ae6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a1735c9e1782d2117df23eb12a0feeda2"/><section>
    <title>regd_0()</title>
<indexterm><primary>regd_0</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>regd_0</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::regd_0 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>FUNCIONES INMEDIATAS QUE NOS DAN CONSTANTES DEL TIPO DE LA ACTUAL CLASE SE HACE CREANDO UNA VARIABLE RVALUE TEMPORAL CON LA FUNCION HOMOLOGA PARA BASE_T </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00050">50</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a1735c9e1782d2117df23eb12a0feeda2_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a1735c9e1782d2117df23eb12a0feeda2_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a881321b54a24d12bff09e271e0a505c4"/><section>
    <title>regd_1()</title>
<indexterm><primary>regd_1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>regd_1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::regd_1 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00055">55</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a881321b54a24d12bff09e271e0a505c4_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1adf3405e104a61285b26efab30703513f"/><section>
    <title>regd_B()</title>
<indexterm><primary>regd_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>regd_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::regd_B ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00065">65</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_adf3405e104a61285b26efab30703513f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1adc9a13a06dc19e25b899e7584aa2014e"/><section>
    <title>regd_Bm1()</title>
<indexterm><primary>regd_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>regd_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::regd_Bm1 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00060">60</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_adc9a13a06dc19e25b899e7584aa2014e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a054433a5c6b1119a661844bc20df43e6"/><section>
    <title>regd_pow_n_B()</title>
<indexterm><primary>regd_pow_n_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>regd_pow_n_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n&gt;=0)&amp;&amp;(n &lt; L))</computeroutput><para><computeroutput>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::regd_pow_n_B ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00072">72</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a054433a5c6b1119a661844bc20df43e6_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a8a6ada1089e4ecee20e0438b6a21881e"/><section>
    <title>regd_pow_n_B_m1()</title>
<indexterm><primary>regd_pow_n_B_m1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>regd_pow_n_B_m1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n&gt; <?linebreak?>requires ((n&gt;=0)&amp;&amp;(n &lt; L))</computeroutput><para><computeroutput>static consteval <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::regd_pow_n_B_m1 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00079">79</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a8a6ada1089e4ecee20e0438b6a21881e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac252594b28a4afdacb06de94b1bbdb0d"/><section>
    <title>rem_B()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>rem_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>rem_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::rem_B (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>BEGIN : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= REM_B^n M_REM_B^n MER_B_N M_MER_B_N. </para>
</para>

<para>MULTIPLY BY THE BASE B (10) &lt;&lt; &lt;&lt;= DIVIDE BY THE BASE B (10) &gt;&gt; &gt;&gt;= REMAINDER BY THE BASE B (10) REM_B_N M_REM_B_N MULTIPLICATIVE CARRY BY THE BASE B (10) MER_B_N M_MER_B_N </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01008">1008</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ac252594b28a4afdacb06de94b1bbdb0d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a6647618fb6d484f4c257159dba69c370"/><section>
    <title>rem_B()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>rem_B</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>rem_B</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t">nat_reg_digs_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::rem_B (<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> n) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01070">1070</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a6647618fb6d484f4c257159dba69c370_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ac4f2f52679334d058322e2537881b5fc"/><section>
    <title>set_0()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>set_0</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_0</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_0 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION DE LIMPIEZA A CERO DEL NAT_REG_DIGS_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00436">436</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ac4f2f52679334d058322e2537881b5fc_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ac4f2f52679334d058322e2537881b5fc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aa340d969b6d01c15b8181e542d3a2fef"/><section>
    <title>set_0()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>set_0</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_0</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_0 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00301">301</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aa340d969b6d01c15b8181e542d3a2fef_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aa06e3a55433e98a553d0204ce642f6b8"/><section>
    <title>set_1()</title>
<indexterm><primary>set_1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_1 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00310">310</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_aa06e3a55433e98a553d0204ce642f6b8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a197e63e671e4306b1d6c95cf3dddf122"/><section>
    <title>set_Bm1()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>set_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_Bm1 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION DE LIMPIEZA A B-1 DEL NAT_REG_DIGS_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00442">442</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a197e63e671e4306b1d6c95cf3dddf122_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a197e63e671e4306b1d6c95cf3dddf122_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ae15231d7a8ac742f64c352de56ad42b5"/><section>
    <title>set_Bm1()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>set_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_Bm1 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00320">320</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ae15231d7a8ac742f64c352de56ad42b5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ab5263cf1eaa919874172ed0628db64f0"/><section>
    <title>set_dig()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>set_dig</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_dig</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_dig (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> d)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00330">330</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ab5263cf1eaa919874172ed0628db64f0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de llamadas a esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ab5263cf1eaa919874172ed0628db64f0_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a4ac89cc0daee3cbccf22a42164e99481"/><section>
    <title>set_dig()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>set_dig</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_dig</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_dig (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> arg)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION DE LIMPIEZA A VALOR DIG_T DEL NAT_REG_DIGS_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00448">448</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a4ac89cc0daee3cbccf22a42164e99481_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1af13be3b273d68ffebd6958b6337e62e5"/><section>
    <title>set_fill_1()</title>
<indexterm><primary>set_fill_1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_fill_1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_fill_1 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00349">349</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a75874430d65f1256ed2a78f658a6ae46"/><section>
    <title>set_fill_Bm1()</title>
<indexterm><primary>set_fill_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_fill_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_fill_Bm1 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00358">358</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ab34465d0d6e59a525a12c9977e977817"/><section>
    <title>set_fill_dig()</title>
<indexterm><primary>set_fill_dig</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_fill_dig</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N&gt; <?linebreak?>requires (N&gt;0)</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_fill_dig (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> d)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00340">340</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ad7f694c626b4b9199f0fd299a0c06f54"/><section>
    <title>set_interval_0()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>set_interval_0</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_0</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_0 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION DE PONER A VALOR DIG_0 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00457">457</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ad7f694c626b4b9199f0fd299a0c06f54_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1af0c7e92ac7dad132e23eebc7df96baad"/><section>
    <title>set_interval_0()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>set_interval_0</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_0</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_0 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00370">370</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_af0c7e92ac7dad132e23eebc7df96baad_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a5c4c51a78151c28e0d1e98e5903000bf"/><section>
    <title>set_interval_0()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>set_interval_0</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_0</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_0 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION DE PONER A VALOR DIG_0 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00404">404</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a5c4c51a78151c28e0d1e98e5903000bf_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1af1e049ae99df1afdfaf216efa6877f77"/><section>
    <title>set_interval_Bm1()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>set_interval_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_Bm1 ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION DE PONER A VALOR DIG_Bm1 EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00465">465</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_af1e049ae99df1afdfaf216efa6877f77_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a2277ebda4bff6a2e0730fa1a7c9f99e8"/><section>
    <title>set_interval_Bm1()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>set_interval_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_Bm1 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00381">381</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a2277ebda4bff6a2e0730fa1a7c9f99e8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a800522f724b87f9d645117b982454ecb"/><section>
    <title>set_interval_Bm1()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>set_interval_Bm1</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_Bm1</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_Bm1 (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION DE PONER A VALOR DIG_Bm1 DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00416">416</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a800522f724b87f9d645117b982454ecb_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aa5c626337dffbd87955e6884bc938e4b"/><section>
    <title>set_interval_dig()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>set_interval_dig</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_dig</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= N)&amp;&amp;(N&gt;0))</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_dig (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1ac639f1ab21d2332bfc09dd63746c3358">base_N_t</link>&lt; N &gt; &amp; larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> dig)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_N_T&lt;N&gt; </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00392">392</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a9ec868701da761b978283ba41b2c2828"/><section>
    <title>set_interval_dig()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>set_interval_dig</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_dig</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</computeroutput><para><computeroutput>static constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_dig (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> dig)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[private]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para>
<para>OPERACION DE PONER A VALOR DIG DEL ARRAY DESDE [N_0 , N_1) EN BASE_T ESPECIALIZACION PARA N==L </para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00428">428</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1a5755851c821c5b1a87ab04e4bd7861a0"/><section>
    <title>set_interval_dig()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>set_interval_dig</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>set_interval_dig</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_i, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> N_pf&gt; <?linebreak?>requires ((N_i &lt; N_pf)&amp;&amp;(N_pf &lt;= L))</computeroutput><para><computeroutput>constexpr void <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::set_interval_dig (<link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> dig)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>OPERACION DE PONER A VALOR DIG EN [N_0 , N_1) DEL NAT_REG_DIGS_T. </para>
</para>
<para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00473">473</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_a5755851c821c5b1a87ab04e4bd7861a0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1aebb9ac400ced2eaf90ab5c218b61bffe"/><section>
    <title>sub()</title>
<indexterm><primary>sub</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>sub</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><para><computeroutput>static constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::sub (const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a672d5826194facdec958a6d914808565">base_t</link> &amp; larg, const <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1af0ef47d7041ec4388d9bd68338867f40">dig_t</link> &amp; rarg)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l01282">1282</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
</section>
<anchor xml:id="_struct_num_repr_1_1nat__reg__digs__t_1ae0035860926f7f260553e8bce191066e"/><section>
    <title>subrepr()</title>
<indexterm><primary>subrepr</primary><secondary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</secondary></indexterm>
<indexterm><primary>NumRepr::nat_reg_digs_t&lt; UINT_T, B, L &gt;</primary><secondary>subrepr</secondary></indexterm>
<computeroutput>template&lt;uint_type_for_radix_c UINT_T, UINT_T B, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> L&gt; </computeroutput><computeroutput>template&lt;<link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> ibegin, <link linkend="_namespace_num_repr_1aec1c647ac8c5e62a49e68acde727e3bf">size_t</link> iend&gt; <?linebreak?>requires ((iend &lt;= L)&amp;&amp;(ibegin &lt; iend))</computeroutput><para><computeroutput>constexpr <link linkend="_struct_num_repr_1_1nat__reg__digs__t_1a44ebd2cc3dfba1630868cd0ac286817c">nat_reg_N_digs_t</link>&lt; iend-ibegin &gt; <link linkend="_struct_num_repr_1_1nat__reg__digs__t">NumRepr::nat_reg_digs_t</link>&lt; UINT_T, B, L &gt;::subrepr ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definición en la línea <link linkend="_nat__reg__digs__t_8hpp_source_1l00595">595</link> del archivo <link linkend="_nat__reg__digs__t_8hpp_source">nat_reg_digs_t.hpp</link>.</para>
Gráfico de llamadas para esta función:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="struct_num_repr_1_1nat__reg__digs__t_ae0035860926f7f260553e8bce191066e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
La documentación para esta estructura fue generada a partir del siguiente fichero:</para>
<link linkend="_nat__reg__digs__t_8hpp">nat_reg_digs_t.hpp</link></section>
</section>
