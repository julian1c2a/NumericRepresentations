.TH "NumRepr::auxiliary_functions" 3 "Martes, 29 de Noviembre de 2022" "Version 0.8" "NumericRepresentations" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NumRepr::auxiliary_functions
.SH SYNOPSIS
.br
.PP
.SS "Funciones"

.in +1c
.ti -1c
.RI "constexpr bool \fBis_prime\fP (\fBsize_t\fP n) noexcept"
.br
.ti -1c
.RI "constexpr bool \fBis_power_of_2\fP (\fBuint128_t\fP num) noexcept"
.br
.in -1c
.SH "Documentación de las funciones"
.PP 
.SS "constexpr bool NumRepr::auxiliary_functions::is_power_of_2 (\fBuint128_t\fP num)\fC [inline]\fP, \fC [constexpr]\fP, \fC [noexcept]\fP"

.PP
.nf
116         {
117                 if((num % 2) != 0)
118                         return false;
119                 else
120                         return is_power_of_2(num / 2);
121         }
.fi
.PP
Hace referencia a \fBis_power_of_2()\fP\&.
.PP
Referenciado por \fBis_power_of_2()\fP\&.
.SS "constexpr bool NumRepr::auxiliary_functions::is_prime (\fBsize_t\fP n)\fC [inline]\fP, \fC [constexpr]\fP, \fC [noexcept]\fP"

.PP
.nf
106         {
107                 if (n < 2)
108                         return false;
109                 else if ((n==2)||(n==3))
110                         return true;
111                 else
112                         return (!detail::find_factor(n, 1, (detail::ceilsqrt(n) + 1) / 2));
113         }
.fi
.PP
Hace referencia a \fBNumRepr::detail::ceilsqrt()\fP y \fBNumRepr::detail::find_factor()\fP\&.
.PP
Referenciado por \fBNumRepr::dig_t< UINT_T, B >::is_prime()\fP\&.
.SH "Autor"
.PP 
Generado automáticamente por Doxygen para NumericRepresentations del código fuente\&.
