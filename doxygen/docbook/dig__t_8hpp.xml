<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_dig__t_8hpp" xml:lang="es">
<title>Referencia del Archivo dig_t.hpp</title>
<indexterm><primary>dig_t.hpp</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;auxiliary_functions.hpp&quot;<?linebreak?>#include &quot;auxiliary_types.hpp&quot;<?linebreak?>#include &quot;lexer_parser.hpp&quot;<?linebreak?></programlisting>Dependencia gráfica adjunta para dig_t.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dig__t_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Gráfico de los archivos que directa o indirectamente incluyen a este archivo:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="dig__t_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Clases    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_num_repr_1_1dig__t">NumRepr::dig_t&lt; UINT_T, B &gt;</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para>namespace <link linkend="_namespace_num_repr">NumRepr</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>typedefs    </title>
        <itemizedlist>
            <listitem><para>template&lt;uint128_t B&gt; </para><para>using <link linkend="_namespace_num_repr_1a3a5ba1b030588c94513fdad9a1b44ef1">NumRepr::digit_t</link> = dig_t&lt; type_traits::TypeFromIntNumber_t&lt; static_cast&lt; uint128_t &gt;(B)&gt;, static_cast&lt; type_traits::TypeFromIntNumber_t&lt; static_cast&lt; uint128_t &gt;(B)&gt; &gt;(static_cast&lt; uint128_t &gt;(B)) &gt;</para>

<para>SOLO HAY QUE DECLARAR digit_t&lt;2&gt; o digit_t&lt;10&gt; o ... </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Funciones    </title>
        <itemizedlist>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T B&gt; <?linebreak?>requires (type_traits::suitable_base&lt;UINT_T, B&gt;())</para><para>consteval UINT_T <link linkend="_namespace_num_repr_1a2546ea7fb1f063e87dbb450cfe5e3623">NumRepr::ui_1</link> () noexcept</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T B&gt; <?linebreak?>requires (type_traits::suitable_base&lt;UINT_T, B&gt;())</para><para>consteval dig_t&lt; UINT_T, B &gt; <link linkend="_namespace_num_repr_1a46e6abf96f0de3f606c367f6217adfc5">NumRepr::dig_max</link> () noexcept</para>

<para>DEFINCION DE template&lt;uint128_t Radix&gt; digito_t{};. </para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T Base&gt; <?linebreak?>requires (type_traits::suitable_base&lt;UINT_T,Base&gt;())</para><para>std::istream &amp; <link linkend="_namespace_num_repr_1a8b055ff0ba4ecbadf6045bae114b69ac">NumRepr::operator&gt;&gt;</link> (std::istream &amp;is, dig_t&lt; UINT_T, Base &gt; &amp;arg)</para>
</listitem>
            <listitem><para>template&lt;type_traits::uint_type_for_radix_c UINT_T, UINT_T Base&gt; <?linebreak?>requires (type_traits::suitable_base&lt;UINT_T,Base&gt;())</para><para>std::ostream &amp; <link linkend="_namespace_num_repr_1a193915060bdae5eb3972386dbb6cb9d8">NumRepr::operator&lt;&lt;</link> (std::ostream &amp;os, dig_t&lt; UINT_T, Base &gt; arg)</para>
</listitem>
        </itemizedlist>
</simplesect>
</section>
