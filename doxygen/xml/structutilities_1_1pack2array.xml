<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="es">
  <compounddef id="structutilities_1_1pack2array" kind="struct" language="C++" prot="public">
    <compoundname>utilities::pack2array</compoundname>
    <includes refid="utilities_8hpp" local="no">utilities.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structutilities_1_1pack2array_1a9324c2c8ca1e1161fbbb0c5936d2e671" prot="public" static="no">
        <type>std::array&lt; typename <ref refid="structutilities_1_1pack2tuple" kindref="compound">pack2tuple</ref>&lt; Ts... &gt;<ref refid="structutilities_1_1pack2array_1acfb6243c111b766f9ce1bbfc19e0e819" kindref="member">::elem_type</ref>&lt; 0 &gt;,(sizeof...(Ts)) &gt;</type>
        <definition>using utilities::pack2array&lt; Ts &gt;::array_type =  std::array&lt; typename pack2tuple&lt;Ts...&gt;::elem_type&lt;0&gt;, (sizeof...(Ts)) &gt;</definition>
        <argsstring></argsstring>
        <name>array_type</name>
        <qualifiedname>utilities::pack2array::array_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="106" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structutilities_1_1pack2array_1acfb6243c111b766f9ce1bbfc19e0e819" prot="public" static="no">
        <type>typename <ref refid="structutilities_1_1pack2tuple" kindref="compound">pack2tuple</ref>&lt; Ts... &gt;::elem_type&lt; 0 &gt;</type>
        <definition>using utilities::pack2array&lt; Ts &gt;::elem_type =  typename pack2tuple&lt;Ts...&gt;::elem_type&lt;0&gt;</definition>
        <argsstring></argsstring>
        <name>elem_type</name>
        <qualifiedname>utilities::pack2array::elem_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="119" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structutilities_1_1pack2array_1aa3f4d803238e78c1edb296d5ddc753ca" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>static constexpr std::size_t utilities::pack2array&lt; Ts &gt;::pack_size</definition>
        <argsstring>() noexcept</argsstring>
        <name>pack_size</name>
        <qualifiedname>utilities::pack2array::pack_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="110" column="30" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structutilities_1_1pack2array_1a771595ff4aaf2523a89c4aed11e5c16c" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>J</declname>
            <defname>J</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structutilities_1_1pack2array_1acfb6243c111b766f9ce1bbfc19e0e819" kindref="member">elem_type</ref></type>
        <definition>static constexpr elem_type utilities::pack2array&lt; Ts &gt;::get</definition>
        <argsstring>(Ts &amp;&amp;...args) noexcept</argsstring>
        <name>get</name>
        <qualifiedname>utilities::pack2array::get</qualifiedname>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="122" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structutilities_1_1pack2array_1af8e2f179474b34f00d87b1f670abda42" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t...</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>static constexpr void utilities::pack2array&lt; Ts &gt;::for_each_impl</definition>
        <argsstring>(array_type &amp;iarray, const Ts...args, std::index_sequence&lt; I... &gt;) noexcept</argsstring>
        <name>for_each_impl</name>
        <qualifiedname>utilities::pack2array::for_each_impl</qualifiedname>
        <param>
          <type><ref refid="structutilities_1_1pack2array_1a9324c2c8ca1e1161fbbb0c5936d2e671" kindref="member">array_type</ref> &amp;</type>
          <declname>iarray</declname>
        </param>
        <param>
          <type>const Ts...</type>
          <declname>args</declname>
        </param>
        <param>
          <type>std::index_sequence&lt; I... &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ESTA FUNCION AUXILIAR ES NECESARIA PARA UNA POSTERIOR EXPANSION DEL PARAMETER PACK </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="133" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="133" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structutilities_1_1pack2array_1ac0a1c575813515e6ab144a2652e65832" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr void</type>
        <definition>static constexpr void utilities::pack2array&lt; Ts &gt;::for_each</definition>
        <argsstring>(array_type &amp;iarray, const Ts...args) noexcept</argsstring>
        <name>for_each</name>
        <qualifiedname>utilities::pack2array::for_each</qualifiedname>
        <param>
          <type><ref refid="structutilities_1_1pack2array_1a9324c2c8ca1e1161fbbb0c5936d2e671" kindref="member">array_type</ref> &amp;</type>
          <declname>iarray</declname>
        </param>
        <param>
          <type>const Ts...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="144" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="144" bodyend="152"/>
        <referencedby refid="namespaceutilities_1a0f549ca7e224442069f979e4beaaab88" compoundref="utilities_8hpp" startline="160" endline="167">utilities::assign_with_order</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structutilities_1_1pack2array_1aff5f3e688a6d88206663fac8959e5254" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="structutilities_1_1pack2array_1a9324c2c8ca1e1161fbbb0c5936d2e671" kindref="member">array_type</ref></type>
        <definition>constexpr array_type utilities::pack2array&lt; Ts &gt;::operator()</definition>
        <argsstring>(Ts &amp;&amp;...args) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>utilities::pack2array::operator()</qualifiedname>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="114" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(all_are_the_same_type_c&lt;Ts...&gt;&amp;&amp;there_is_one_or_more_c&lt;Ts...&gt;)    </requiresclause>
    <briefdescription>
<para>END: TEMPLATE GENERICO Y SUS ESPECIALIZACIONES. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" line="105" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/utilities.hpp" bodystart="105" bodyend="153"/>
    <listofallmembers>
      <member refid="structutilities_1_1pack2array_1a9324c2c8ca1e1161fbbb0c5936d2e671" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>array_type</name></member>
      <member refid="structutilities_1_1pack2array_1acfb6243c111b766f9ce1bbfc19e0e819" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>elem_type</name></member>
      <member refid="structutilities_1_1pack2array_1ac0a1c575813515e6ab144a2652e65832" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>for_each</name></member>
      <member refid="structutilities_1_1pack2array_1af8e2f179474b34f00d87b1f670abda42" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>for_each_impl</name></member>
      <member refid="structutilities_1_1pack2array_1a771595ff4aaf2523a89c4aed11e5c16c" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>get</name></member>
      <member refid="structutilities_1_1pack2array_1aff5f3e688a6d88206663fac8959e5254" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>operator()</name></member>
      <member refid="structutilities_1_1pack2array_1aa3f4d803238e78c1edb296d5ddc753ca" prot="public" virt="non-virtual"><scope>utilities::pack2array</scope><name>pack_size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
