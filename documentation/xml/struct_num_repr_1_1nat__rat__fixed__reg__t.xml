<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="es">
  <compounddef id="struct_num_repr_1_1nat__rat__fixed__reg__t" kind="struct" language="C++" prot="public">
    <compoundname>NumRepr::nat_rat_fixed_reg_t</compoundname>
    <includes refid="nat__rat__fixed__reg__t_8hpp" local="no">nat_rat_fixed_reg_t.hpp</includes>
    <templateparamlist>
      <param>
        <type>type_traits::allowable_base_type_c</type>
        <declname>UINT_T</declname>
        <defname>UINT_T</defname>
      </param>
      <param>
        <type>UINT_T</type>
        <declname>B</declname>
        <defname>B</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>LE</declname>
        <defname>LE</defname>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>LF</declname>
        <defname>LF</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_t =  dig_t&lt;UINT_T,B&gt;</definition>
        <argsstring></argsstring>
        <name>dig_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="12" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0c1d6f1882ef00a90de99c7c13538074" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref>&lt; UINT_T, B &gt;, NE+NF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::base_NEXNF_t =  std::array&lt;dig_t&lt;UINT_T,B&gt;,NE+NF&gt;</definition>
        <argsstring></argsstring>
        <name>base_NEXNF_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::base_NEXNF_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="14" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0c1d6f1882ef00a90de99c7c13538074" kindref="member">base_NEXNF_t</ref>&lt; LE, LF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::base_t =  base_NEXNF_t&lt;LE,LF&gt;</definition>
        <argsstring></argsstring>
        <name>base_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::base_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="15" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a022253ded9523d2145125697729f0bc2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; UINT_T, B, NE, NF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_NExNF_digs_t =  pfx_rat_reg_digs_t&lt;UINT_T,B,NE,NF&gt;</definition>
        <argsstring></argsstring>
        <name>pfx_rat_reg_NExNF_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_NExNF_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="18" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a553a93b4e70ebccb1aad563d4433d609" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1aceacfae33a2bdedd9b890f2766f9b5a9" kindref="member">type_traits::sig_UInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::SIG_UINT_T =  typename type_traits::sig_UInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_UINT_T</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::SIG_UINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="19" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa7640d2bf6c36ba7243b2dee7abc0b39" prot="public" static="no">
        <type>typename <ref refid="namespace_num_repr_1_1type__traits_1a9b443da6cd532ae6d0d5482d8f610737" kindref="member">type_traits::sig_SInt_for_UInt_t</ref>&lt; UINT_T &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::SIG_SINT_T =  typename type_traits::sig_SInt_for_UInt_t&lt;UINT_T&gt;</definition>
        <argsstring></argsstring>
        <name>SIG_SINT_T</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::SIG_SINT_T</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="20" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0d08c8fc166476583cb94478965336c3" kindref="member">nat_reg_digs_t</ref>&lt; UINT_T, B, NE+NF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::nat_reg_NExNF_digs_t =  nat_reg_digs_t&lt;UINT_T,B,NE+NF&gt;</definition>
        <argsstring></argsstring>
        <name>nat_reg_NExNF_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::nat_reg_NExNF_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="22" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0d08c8fc166476583cb94478965336c3" prot="public" static="no">
        <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0d08c8fc166476583cb94478965336c3" kindref="member">nat_reg_digs_t</ref>&lt; UINT_T, B, LE+LF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::nat_reg_digs_t =  nat_reg_digs_t&lt;UINT_T,B,LE+LF&gt;</definition>
        <argsstring></argsstring>
        <name>nat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::nat_reg_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="23" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; UINT_T, NE+NF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::reg_ints_t =  typename std::array&lt;UINT_T,NE+NF&gt;</definition>
        <argsstring></argsstring>
        <name>reg_ints_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::reg_ints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="26" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1adf7444ca6fd95c7e1e8e1b0180b269a0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a553a93b4e70ebccb1aad563d4433d609" kindref="member">SIG_UINT_T</ref>, NE+NF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::reg_suints_t =  typename std::array&lt;SIG_UINT_T,NE+NF&gt;</definition>
        <argsstring></argsstring>
        <name>reg_suints_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::reg_suints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="29" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1af0e57e72ead75b530b5efe77928ecdc6" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>typename std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa7640d2bf6c36ba7243b2dee7abc0b39" kindref="member">SIG_SINT_T</ref>, NE+NF &gt;</type>
        <definition>using NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::reg_ssints_t =  typename std::array&lt;SIG_SINT_T,NE+NF&gt;</definition>
        <argsstring></argsstring>
        <name>reg_ssints_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::reg_ssints_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="32" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2649a33cb0440df7967746d93b2ea6d7" prot="private" static="no" mutable="no">
        <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref></type>
        <definition>base_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::m_dc</definition>
        <argsstring></argsstring>
        <name>m_dc</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::m_dc</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="34" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
        <definition>static constexpr dig_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_0</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="36" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="36" bodyend="36"/>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a747abd2210ae2c492b36f277931a8cb6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1454" endline="1470">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::add</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1acf99b1745ac9ee699102236d1a2a79dc" compoundref="nat__rat__fixed__reg__t_8hpp" startline="174" endline="202">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::copy_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a073f393cf63e0e2ee6c651748c35aa05" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1709" endline="1722">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::m_rem_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a43181180eabb8e8ea937db4ba2d7718d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1208" endline="1225">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ace15a99d6b8f4b429bf385e32d9c58d8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="209" endline="220">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::move_arg_N</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae46f34abf55253a3dc0f6774678f57bc" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1372" endline="1400">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mult</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1d2effcd65514535a97572a28c992519" compoundref="nat__rat__fixed__reg__t_8hpp" startline="243" endline="308">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::normalize</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1ad5dbda3b2a1663086f48ccddb0c07d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1136" endline="1155">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af9fbb6e036ca9bd58675e476d43e05a9" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1276" endline="1314">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae87bcfde3ae0324b373aef151db47020" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1166" endline="1178">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator--</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a863b4585d8f4ae407912c98c9273b6d3" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1317" endline="1367">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad44b35a08b59ad0418071711eeed448b" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1631" endline="1643">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;&lt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a197245d11816587e8bbcc82e53a94b45" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1646" endline="1659">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;&lt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad4655dff96fd715063231961682140a8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="386" endline="393">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2059c242611fae3bb6b65e7313bb7ff5" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1663" endline="1675">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;&gt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a04e688baa386601c21f3ad4348205ed8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1678" endline="1690">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;&gt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a02410bb4d27f15f78c3b3e6bed790547" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1107" endline="1112">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator[]</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" compoundref="nat__rat__fixed__reg__t_8hpp" startline="93" endline="99">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6551f10097dd07df063b87fc1a007fd8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1475" endline="1494">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subst</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
        <definition>static constexpr dig_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="37" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="37" bodyend="37"/>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a43181180eabb8e8ea937db4ba2d7718d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1208" endline="1225">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1ad5dbda3b2a1663086f48ccddb0c07d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1136" endline="1155">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af9fbb6e036ca9bd58675e476d43e05a9" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1276" endline="1314">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a863b4585d8f4ae407912c98c9273b6d3" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1317" endline="1367">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4d1b2577021f8594d6efa471234869e0" compoundref="nat__rat__fixed__reg__t_8hpp" startline="57" endline="61">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1afc75739252c5a40b233bd12eace8dd16" compoundref="nat__rat__fixed__reg__t_8hpp" startline="67" endline="71">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0fd73bc1e0e7ef8d7e5cfeb2830da7a5" compoundref="nat__rat__fixed__reg__t_8hpp" startline="75" endline="79">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_pow_n_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9a2b45b2f3d26220d33285794c8128a6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="101" endline="105">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6d97e8aa88ec3d0b9f81c66de861b915" compoundref="nat__rat__fixed__reg__t_8hpp" startline="113" endline="117">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a993ab098e0e7070f2514b0ebd9b9162e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="121" endline="125">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_pow_n_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
        <definition>static constexpr dig_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="38" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="38" bodyend="38"/>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a43181180eabb8e8ea937db4ba2d7718d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1208" endline="1225">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1ad5dbda3b2a1663086f48ccddb0c07d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1136" endline="1155">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af9fbb6e036ca9bd58675e476d43e05a9" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1276" endline="1314">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a863b4585d8f4ae407912c98c9273b6d3" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1317" endline="1367">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad70d405111f74e96957daf7e860f0abd" compoundref="nat__rat__fixed__reg__t_8hpp" startline="62" endline="66">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9c1583db7aec52231103595dc69a2a32" compoundref="nat__rat__fixed__reg__t_8hpp" startline="107" endline="111">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6551f10097dd07df063b87fc1a007fd8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1475" endline="1494">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subst</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1aee17574658ad0e66f3ee133d9f554833" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
        <definition>static constexpr dig_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_max</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="39" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a18ae64dc889b84eea4ca989e9563651a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
        <definition>static constexpr dig_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm2</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_Bm2</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_Bm2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="40" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a67e6e0e59887f528524c4b54e6ba5a2a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
        <definition>static constexpr dig_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_submax</definition>
        <argsstring>() noexcept</argsstring>
        <name>dig_submax</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::dig_submax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="41" column="24" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab9e34bb3a8d955badd3498d51d5e62f4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr UINT_T</type>
        <definition>static constexpr UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::ui_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_0</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::ui_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="42" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1adbeecd9a334cb9c990bca8c7878e19ea" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr UINT_T</type>
        <definition>static constexpr UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::ui_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::ui_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="43" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1abf72096e6dd350d74f05124d4bf07e3a" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr UINT_T</type>
        <definition>static constexpr UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::ui_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_Bm1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::ui_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="44" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a94e5d24230e61c14c2590893f435ef06" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a553a93b4e70ebccb1aad563d4433d609" kindref="member">SIG_UINT_T</ref></type>
        <definition>static constexpr SIG_UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::sui_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::sui_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="45" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab5167455e73179baf8deaccf40901063" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a553a93b4e70ebccb1aad563d4433d609" kindref="member">SIG_UINT_T</ref></type>
        <definition>static constexpr SIG_UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::sui_Bp1</definition>
        <argsstring>() noexcept</argsstring>
        <name>sui_Bp1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::sui_Bp1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="46" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4ca499b70aaa1d53917b468c09ad6968" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr UINT_T</type>
        <definition>static constexpr UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::ui_submax</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_submax</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::ui_submax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="47" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a470670e3e267bb42318f77ed70a7f42d" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr UINT_T</type>
        <definition>static constexpr UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::ui_max</definition>
        <argsstring>() noexcept</argsstring>
        <name>ui_max</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::ui_max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="48" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>static constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_0</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regd_0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="50" column="37" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="50" bodyend="56"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4d1b2577021f8594d6efa471234869e0" compoundref="nat__rat__fixed__reg__t_8hpp" startline="57" endline="61">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1afc75739252c5a40b233bd12eace8dd16" compoundref="nat__rat__fixed__reg__t_8hpp" startline="67" endline="71">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad70d405111f74e96957daf7e860f0abd" compoundref="nat__rat__fixed__reg__t_8hpp" startline="62" endline="66">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0fd73bc1e0e7ef8d7e5cfeb2830da7a5" compoundref="nat__rat__fixed__reg__t_8hpp" startline="75" endline="79">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_pow_n_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a5beb2c8c44ad830017acdac79a4e84ad" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1697" endline="1706">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rem_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4d1b2577021f8594d6efa471234869e0" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>static constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regd_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="57" column="36" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="57" bodyend="61"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad70d405111f74e96957daf7e860f0abd" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>static constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_Bm1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regd_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="62" column="36" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="62" bodyend="66"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1afc75739252c5a40b233bd12eace8dd16" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>static constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regd_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="67" column="36" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="67" bodyend="71"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0fd73bc1e0e7ef8d7e5cfeb2830da7a5" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>static constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regd_pow_n_B</qualifiedname>
    <requiresclause>((n &lt; LE) &amp;&amp; (n &gt; -(LF+1)))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="75" column="36" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="75" bodyend="79"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a010c5902fd8210da63a98c1179be37a7" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>static constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regd_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regd_pow_n_B_m1</qualifiedname>
    <requiresclause>((n &lt; LE) &amp;&amp; (n &gt; -(LF+1)))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="82" column="36" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="82" bodyend="91"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt;</type>
        <definition>static constexpr reg_ints_t&lt; LE+LF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_0</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_0</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regi_0</qualifiedname>
        <briefdescription>
<para>ARRAYS DE ENTEROS QUE SON DE AYUDA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="93" column="29" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="93" bodyend="99"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9a2b45b2f3d26220d33285794c8128a6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="101" endline="105">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6d97e8aa88ec3d0b9f81c66de861b915" compoundref="nat__rat__fixed__reg__t_8hpp" startline="113" endline="117">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9c1583db7aec52231103595dc69a2a32" compoundref="nat__rat__fixed__reg__t_8hpp" startline="107" endline="111">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a993ab098e0e7070f2514b0ebd9b9162e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="121" endline="125">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_pow_n_B</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9a2b45b2f3d26220d33285794c8128a6" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt;</type>
        <definition>static constexpr reg_ints_t&lt; LE+LF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regi_1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="101" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="101" bodyend="105"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" compoundref="nat__rat__fixed__reg__t_8hpp" startline="93" endline="99">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9c1583db7aec52231103595dc69a2a32" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt;</type>
        <definition>static constexpr reg_ints_t&lt; LE+LF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_Bm1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regi_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="107" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="107" bodyend="111"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" compoundref="nat__rat__fixed__reg__t_8hpp" startline="93" endline="99">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6d97e8aa88ec3d0b9f81c66de861b915" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt;</type>
        <definition>static constexpr reg_ints_t&lt; LE+LF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regi_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="113" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="113" bodyend="117"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" compoundref="nat__rat__fixed__reg__t_8hpp" startline="93" endline="99">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a993ab098e0e7070f2514b0ebd9b9162e" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt;</type>
        <definition>static constexpr reg_ints_t&lt; LE+LF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_pow_n_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_pow_n_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regi_pow_n_B</qualifiedname>
    <requiresclause>((n &lt; LE) &amp;&amp; (n &gt; -(LF+1)))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="121" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="121" bodyend="125"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" compoundref="nat__rat__fixed__reg__t_8hpp" startline="93" endline="99">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a86f11292fe859c0c3ef9a580d1b96052" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>n</declname>
            <defname>n</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt;</type>
        <definition>static constexpr reg_ints_t&lt; LE+LF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regi_pow_n_B_m1</definition>
        <argsstring>() noexcept</argsstring>
        <name>regi_pow_n_B_m1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::regi_pow_n_B_m1</qualifiedname>
    <requiresclause>((n &lt; LE) &amp;&amp; (n &gt; -(LF+1)))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="129" column="28" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1d2effcd65514535a97572a28c992519" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref></type>
        <definition>static constexpr base_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::normalize</definition>
        <argsstring>(Ints_type ... digits_pow_i) noexcept</argsstring>
        <name>normalize</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::normalize</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>digits_pow_i</declname>
        </param>
    <requiresclause>((sizeof...(Ints_type))&lt;=L)    </requiresclause>
        <briefdescription>
<para>END : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DE NORMALIZACION A LA BASE B DE UN ARGUMENTOS EN UN PACK DE ENTEROS CUALQUIERA INTERNA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="243" column="8" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="243" bodyend="308"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af205ef58ee00a8d89a5504f3638d2f06" compoundref="nat__rat__fixed__reg__t_8hpp" startline="314" endline="315">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7d591c66320eb144688d13f2f017db83" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>static constexpr std::size_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::cuenta_0s_desde_IZDA</definition>
        <argsstring>(const reg_ints_t&lt; LE+LF &gt; &amp;arg) noexcept</argsstring>
        <name>cuenta_0s_desde_IZDA</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::cuenta_0s_desde_IZDA</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1895" column="13" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1895" bodyend="1907"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab36669ef39e97b9de7b2b1afb11551a7" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>static constexpr std::size_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::cuenta_0s_desde_DRCHA</definition>
        <argsstring>(const reg_ints_t&lt; LE+LF &gt; &amp;arg) noexcept</argsstring>
        <name>cuenta_0s_desde_DRCHA</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::cuenta_0s_desde_DRCHA</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" kindref="member">reg_ints_t</ref>&lt; LE+LF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1910" column="13" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1910" bodyend="1922"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>() noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR POR DEFECTO pfx_rat_reg_digs_t&lt;10,3,2&gt; var(); var == nat#0:0:0:s:0:0#B10 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="151" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="151" bodyend="152"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a747abd2210ae2c492b36f277931a8cb6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1454" endline="1470">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::add</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1adf28ede7d87f952b85ee2e6f13bddd99" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1237" endline="1242">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::C_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a27966e1e6701d534293e7f258e53457b" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1228" endline="1234">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::C_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a8c7d7fb0e6776dd78e993e5fc8fbf8e4" compoundref="nat__rat__fixed__reg__t_8hpp" startline="432" endline="443">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a12229e5a534c8c6f2e4075031ae7ef6c" compoundref="nat__rat__fixed__reg__t_8hpp" startline="465" endline="476">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat_inv</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a43181180eabb8e8ea937db4ba2d7718d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1208" endline="1225">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a82fea75187699b7f253e7a0b76f84816" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1198" endline="1205">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae46f34abf55253a3dc0f6774678f57bc" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1372" endline="1400">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mult</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9f8d01bd90392598f683702bdff3ad45" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1245" endline="1250">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator!</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a44e11dd006b54a63e2fbf7242cf9f273" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1754" endline="1759">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&amp;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1abbd54ac852f5cde9a0ec8ebe34f4ffc9" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1521" endline="1526">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7921aacc123039a503c43bb0590a3816" compoundref="nat__rat__fixed__reg__t_8hpp" startline="2118" endline="2124">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad900c018f6bac8a884c30349154dea10" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1505" endline="1510">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1ad5dbda3b2a1663086f48ccddb0c07d" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1136" endline="1155">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator++</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af9fbb6e036ca9bd58675e476d43e05a9" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1276" endline="1314">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a46c6455a1ef12adaad5d814985d9ee2c" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1253" endline="1258">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae87bcfde3ae0324b373aef151db47020" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1166" endline="1178">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator--</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a863b4585d8f4ae407912c98c9273b6d3" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1317" endline="1367">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad44b35a08b59ad0418071711eeed448b" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1631" endline="1643">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;&lt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a197245d11816587e8bbcc82e53a94b45" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1646" endline="1659">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;&lt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a088384a64c5d34b0286cf4074929585f" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1043" endline="1052">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;=&gt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2059c242611fae3bb6b65e7313bb7ff5" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1663" endline="1675">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;&gt;</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a04e688baa386601c21f3ad4348205ed8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1678" endline="1690">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;&gt;=</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a85a5e8fd4c769947c919010307e3aa93" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1737" endline="1742">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator|</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4d1b2577021f8594d6efa471234869e0" compoundref="nat__rat__fixed__reg__t_8hpp" startline="57" endline="61">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1afc75739252c5a40b233bd12eace8dd16" compoundref="nat__rat__fixed__reg__t_8hpp" startline="67" endline="71">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad70d405111f74e96957daf7e860f0abd" compoundref="nat__rat__fixed__reg__t_8hpp" startline="62" endline="66">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_Bm1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0fd73bc1e0e7ef8d7e5cfeb2830da7a5" compoundref="nat__rat__fixed__reg__t_8hpp" startline="75" endline="79">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_pow_n_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a010c5902fd8210da63a98c1179be37a7" compoundref="nat__rat__fixed__reg__t_8hpp" startline="82" endline="91">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_pow_n_B_m1</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a5beb2c8c44ad830017acdac79a4e84ad" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1697" endline="1706">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rem_B</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a206489e66bc07dd845d00c4a6ccb0bdc" compoundref="nat__rat__fixed__reg__t_8hpp" startline="561" endline="569">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rev_subreg_digs</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a3a821c17ddc821a00db5e00b02ea7f77" compoundref="nat__rat__fixed__reg__t_8hpp" startline="587" endline="595">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rev_subreg_digs_pe</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad5adcbe25e088551ac817004a9320300" compoundref="nat__rat__fixed__reg__t_8hpp" startline="613" endline="621">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rev_subreg_digs_pf</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa93bfacedfc35b410d1eb6f1e74ffe55" compoundref="nat__rat__fixed__reg__t_8hpp" startline="548" endline="556">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subreg_digs</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6fa675710cb0e3a25d2b46b601516149" compoundref="nat__rat__fixed__reg__t_8hpp" startline="574" endline="582">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subreg_digs_pe</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a826d5ada30ddfb3bd85e38a3b9231ed9" compoundref="nat__rat__fixed__reg__t_8hpp" startline="600" endline="608">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subreg_digs_pf</referencedby>
        <referencedby refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6551f10097dd07df063b87fc1a007fd8" compoundref="nat__rat__fixed__reg__t_8hpp" startline="1475" endline="1494">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subst</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a83498b558e3a2707ff1767b5bdf087b4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(const std::initializer_list&lt; dig_t &gt; &amp;arg) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &gt; &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR POR LISTA DE DIGITOS pfx_rat_reg_digs_t&lt;10,3,2&gt; var{<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(1)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(3)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(2)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(5)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(6)</ref>}; var == nat#1:3:2:s:5:6#B10 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="157" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="157" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae679f5015862a68f635d46d8c4a70892" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(const Ts &amp;... args) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type>const Ts &amp;...</type>
          <declname>args</declname>
        </param>
    <requiresclause>(std::is_same_v&lt;Ts,<ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2f1cc69e474f8f2734aef69506857e18" kindref="member">dig_t</ref>&gt;&amp;&amp;...)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR POR ARGUMENTOS DIGITOS SIN LIMITE: DEDUCE EL TIPO pfx_rat_reg_digs_t&lt;10,3,2&gt; var(<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(1)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(3)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(2)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(5)</ref>,<ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(6)</ref>); var == nat#1:3:2:5:6#B10 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="165" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="165" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1acf99b1745ac9ee699102236d1a2a79dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::copy_arg_N</definition>
        <argsstring>(const base_NEXNF_t&lt; NE, NF &gt; &amp;arg)</argsstring>
        <name>copy_arg_N</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::copy_arg_N</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0c1d6f1882ef00a90de99c7c13538074" kindref="member">base_NEXNF_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
<para>BEGIN : CONSTRUCTOR COPIA/MOVIMIENTO DESDE UN ARRAY DE DIGITOS. </para>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA COPIA DE UN ARRAY DE DISTINTO TAMANO O TAMANO CUALQUIERA &quot;N&quot; INTERNO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="174" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="174" bodyend="202"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ace15a99d6b8f4b429bf385e32d9c58d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::move_arg_N</definition>
        <argsstring>(base_N_t&lt; NE, NF &gt; &amp;&amp;arg)</argsstring>
        <name>move_arg_N</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::move_arg_N</qualifiedname>
        <param>
          <type><ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a863e7ee55c02da13512180e546d6fd29" kindref="member">base_N_t</ref>&lt; NE, NF &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FUNCION DELEGADA PARA MOVER DE UN ARRAY DE DISTINTO TAMANO O TAMANO CUALQUIERA &quot;N&quot; INTERNO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="209" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="209" bodyend="220"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae344ba117479d673748d2e4b54a11e20" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(const base_NExNF_t&lt; NE, NF &gt; &amp;arg) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type>const base_NExNF_t&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR COPIA REFERENCIA DESDE UN ARRAY DE DIGITOS INTERNO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="226" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="226" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7afac12b75bf172621e52a8cb1aee74c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(const base_NExNF_t&lt; NE, NF &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type>const base_NExNF_t&lt; NE, NF &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(N&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR MOVIMIENTO DESDE UN ARRAY DE DIGITOS INTERNO </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="233" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="233" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1af205ef58ee00a8d89a5504f3638d2f06" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c ...</type>
            <declname>Ints_type</declname>
            <defname>Ints_type</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(Ints_type ... dig_pow_i) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type>Ints_type ...</type>
          <declname>dig_pow_i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR COPIA DESDE ARGUMENTOS ENTEROS SIN LIMITE : DEDUCE EL TIPO pfx_rat_reg_digs_t&lt;10,3,2&gt; var{1,3,2,5,6}; var == nat#1:3:2:s:5:6#B10 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="314" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="314" bodyend="315"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1d2effcd65514535a97572a28c992519" compoundref="nat__rat__fixed__reg__t_8hpp" startline="243" endline="308">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::normalize</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a57512a8692247ed4c3bfca17504d04bb" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR COPIA pfx_rat_reg_digs_t&lt;10,3,2&gt; var{1,3,2,5,6}; pfx_rat_reg_digs_t&lt;10,3,2&gt; var2(var); </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="321" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="321" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2447e6e4c5bc27036cb5c0c717c57516" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</definition>
        <argsstring>(nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>pfx_rat_reg_digs_t</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::pfx_rat_reg_digs_t</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR MOVIMIENTO pfx_rat_reg_digs_t&lt;10,3,2&gt; var{1,3,2,5,6}; pfx_rat_reg_digs_t&lt;10,3,2&gt; var2(std::move(var)); var queda no sabemos su valor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="329" column="18" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="329" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a40c5401cc7a854a6c9ee7e303b8b605e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</definition>
        <argsstring>(nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION ASIGNACION POR COPIA EN LA QUE SE PUEDE COPIAR reg_N_digs_t == std::array&lt;dig_t,N&gt;; pfx_rat_reg_digs_t&lt;21,5&gt; var{}; pfx_rat_reg_digs_t var2{}; var2 = var; var2 == var </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="340" column="38" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="340" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a01ec3009f1dad14b6a40cd4cffc266d1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</definition>
        <argsstring>(nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION ASIGNACION POR MOVIMIENTO reg_N_digs_t == std::array&lt;dig_t,N&gt;; pfx_rat_reg_digs_t&lt;21,5&gt; var{}; pfx_rat_reg_digs_t var2{}; var2 = std::move(var); var2 == antigua var; var actual no sabemos su valor; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="355" column="38" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="355" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a87a935fc4c1bba1d16ef8fc855ab837d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</definition>
        <argsstring>(const nat_reg_N_digs_t&lt; NE, NF &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a2351264c10e7ecf3ace8a2f8b9bf21f8" kindref="member">nat_reg_N_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA EN LA QUE <emphasis>NO</emphasis> SE PUEDE MODIFICAR EL ARGUMENTO. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="365" column="44" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="365" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae1b1bbc00ba4e1b7cda6d655d0c69713" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</definition>
        <argsstring>(const base_NEXNF_t&lt; NE, NF &gt; &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0c1d6f1882ef00a90de99c7c13538074" kindref="member">base_NEXNF_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
<para>OPERACION ASIGNACION POR COPIA DESDE BASE_N_T. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="375" column="38" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="375" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad4655dff96fd715063231961682140a8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</definition>
        <argsstring>(const dig_t &amp;arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION COPIA DESDE UN DIGITO (CONVERSION) dig_t&lt;13&gt; a{3}; pfx_rat_reg_digs_t&lt;13,16&gt; A{}; A = a; A = nat#0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:3#B13 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="386" column="38" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="386" bodyend="393"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7a8a8164894278d64b0ec3c2534d2837" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator=</definition>
        <argsstring>(Int_Type arg) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator=</qualifiedname>
        <param>
          <type>Int_Type</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACION COPIA DESDE UN ENTERO (CONVERSION A LA BASE B) pfx_rat_reg_digs_t&lt;16,4&gt; var{}; var = 1324; 1324/%16 = 82|12 82/%16 = 5|2 =&gt; var == nat#5:2:12#B16 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="399" column="38" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="399" bodyend="417"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a8c7d7fb0e6776dd78e993e5fc8fbf8e4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; LE+NE, LF+NF &gt;</type>
        <definition>constexpr nat_reg_NExNF_digs_t&lt; LE+NE, LF+NF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>FORMACION DE UN REG_M_DIGS_T&lt;M&gt; DESDE EL THIS REG_DIGS_T (L) Y REG_N_DIGS_T&lt;N&gt; EN SUS DOS FORMAS: (*THIS)SEGUIDO(ARG) Y (ARG)SEGUIDO(*THIS) : OPERACIONES DE CONCATENACION A SU VEZ PUEDEN SER POR COPIA Y POR MOVIMIENTO CONCAT : CONCATENACION pfx_rat_reg_digs_t&lt;23,7&gt; var1{ <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(1)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(2)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(3)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(4)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(5)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(6)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(7)</ref> } pfx_rat_reg_digs_t&lt;23,3&gt; var2{ <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(22)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(21)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(20)</ref> } var1.concat(var2) == nat#1:2:3:4:5:6:7:22:21:20#B23 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="432" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="432" bodyend="443"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a72cce26eea1af99400f760bb683df57f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reg_N_digs_t&lt; LE+LF+1 &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; LE+LF+1 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat</definition>
        <argsstring>(const dig_t &amp;arg) const noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONCAT : CONCATENACION pfx_rat_reg_digs_t&lt;23,7&gt; var1{ <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(1)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(2)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(3)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(4)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(5)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(6)</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t(7)</ref> }; dig_t&lt;23&gt; var2{22}; var1.concat(var2) == nat#1:2:3:4:5:6:7:20#B23 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="451" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="451" bodyend="460"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a12229e5a534c8c6f2e4075031ae7ef6c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; LE+NE, LF+NF &gt;</type>
        <definition>constexpr nat_reg_NExNF_digs_t&lt; LE+NE, LF+NF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat_inv</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>concat_inv</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat_inv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="465" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="465" bodyend="476"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad13f4ece8bd16d01902c852ada645087" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reg_N_digs_t&lt; LE+LF+1 &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; LE+LF+1 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat_inv</definition>
        <argsstring>(const dig_t &amp;arg) const noexcept</argsstring>
        <name>concat_inv</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat_inv</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="479" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="479" bodyend="488"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a5b16b680b8c906452330a8201e3f9966" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; LE+NE, LF+NF &gt;</type>
        <definition>constexpr nat_reg_NExNF_digs_t&lt; LE+NE, LF+NF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat</definition>
        <argsstring>(nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="493" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="493" bodyend="504"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4ea2b34d7a64b91d20a547769fe4c4d5" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reg_N_digs_t&lt; LE+LF+1 &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; LE+LF+1 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat</definition>
        <argsstring>(dig_t &amp;&amp;arg) noexcept</argsstring>
        <name>concat</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="507" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="507" bodyend="516"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9f346d0bbdf300ba36b0b9622a0c2004" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; LE+NE, LF+NF &gt;</type>
        <definition>constexpr nat_reg_NExNF_digs_t&lt; LE+NE, LF+NF &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat_inv</definition>
        <argsstring>(nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;&amp;arg) noexcept</argsstring>
        <name>concat_inv</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat_inv</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="520" column="22" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="520" bodyend="531"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9350d24557721d0a2d25a87b3d993183" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr reg_N_digs_t&lt; LE+LF+1 &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; LE+LF+1 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::concat_inv</definition>
        <argsstring>(dig_t &amp;&amp;arg) noexcept</argsstring>
        <name>concat_inv</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::concat_inv</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;&amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="534" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="534" bodyend="543"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa93bfacedfc35b410d1eb6f1e74ffe55" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr reg_N_digs_t&lt; iend-ibegin &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subreg_digs</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subreg_digs</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::subreg_digs</qualifiedname>
    <requiresclause>((iend-ibegin&gt;0)&amp;&amp;(iend &lt;= LE+LF)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="548" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="548" bodyend="556"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a206489e66bc07dd845d00c4a6ccb0bdc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr reg_N_digs_t&lt; iend-ibegin &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rev_subreg_digs</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rev_subreg_digs</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::rev_subreg_digs</qualifiedname>
    <requiresclause>((iend-ibegin&gt;0)&amp;&amp;(iend &lt;= LE+LF)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="561" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="561" bodyend="569"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6fa675710cb0e3a25d2b46b601516149" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr reg_N_digs_t&lt; iend-ibegin &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subreg_digs_pe</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subreg_digs_pe</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::subreg_digs_pe</qualifiedname>
    <requiresclause>((iend &lt;= LE+LF)&amp;&amp;(ibegin &lt; iend)&amp;&amp;(ibegin &gt;= LF))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="574" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="574" bodyend="582"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a3a821c17ddc821a00db5e00b02ea7f77" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr reg_N_digs_t&lt; iend-ibegin &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rev_subreg_digs_pe</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rev_subreg_digs_pe</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::rev_subreg_digs_pe</qualifiedname>
    <requiresclause>((iend &lt;= LE+LF)&amp;&amp;(ibegin &lt; iend)&amp;&amp;(ibegin &gt;= LF))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="587" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="587" bodyend="595"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a826d5ada30ddfb3bd85e38a3b9231ed9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr reg_N_digs_t&lt; iend-ibegin &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subreg_digs_pf</definition>
        <argsstring>() const noexcept</argsstring>
        <name>subreg_digs_pf</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::subreg_digs_pf</qualifiedname>
    <requiresclause>((iend &lt; LF)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="600" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="600" bodyend="608"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad5adcbe25e088551ac817004a9320300" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>ibegin</declname>
            <defname>ibegin</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>iend</declname>
            <defname>iend</defname>
          </param>
        </templateparamlist>
        <type>constexpr reg_N_digs_t&lt; iend-ibegin &gt;</type>
        <definition>constexpr reg_N_digs_t&lt; iend-ibegin &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rev_subreg_digs_pf</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rev_subreg_digs_pf</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::rev_subreg_digs_pf</qualifiedname>
    <requiresclause>((iend &lt; LF)&amp;&amp;(ibegin &lt; iend))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="613" column="14" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="613" bodyend="621"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a787b682d968d66643631b4e17b191b5a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>type_traits::integral_c</type>
            <declname>Int_Type</declname>
            <defname>Int_Type</defname>
          </param>
        </templateparamlist>
        <type>constexpr Int_Type</type>
        <definition>constexpr Int_Type NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::IntPart</definition>
        <argsstring>() const noexcept</argsstring>
        <name>IntPart</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::IntPart</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="632" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="632" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1dfad6f1cf535bde170572bc3c023c6d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator==</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t&lt;23,12&gt; A; A = ... pfx_rat_reg_digs_t&lt;23,10&gt; B; B = ... A == B =&gt; true or false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="656" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="656" bodyend="697"/>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7d2ee3c6afa41d4d8df88b979612eac8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator==</definition>
        <argsstring>(const pfx_rat_reg_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator==</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator==</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="702" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="702" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a858568dd397e27a65b678be845d2f11d" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator!=</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t&lt;23,12&gt; A; A = ... pfx_rat_reg_digs_t&lt;23,10&gt; B; B = ... A != B =&gt; true or false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="716" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="716" bodyend="763"/>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9ac296171e867711b5eeef9373c97080" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator!=</definition>
        <argsstring>(const pfx_rat_reg_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator!=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="768" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="768" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a674d8af40df8b5fc48eecd0e58c6b844" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;=</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t&lt;23,12&gt; A; A = ... pfx_rat_reg_digs_t&lt;23,10&gt; B; B = ... A &lt;= B =&gt; true or false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="782" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="782" bodyend="831"/>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1af2ce70fc1edd09e642f0d340f752167a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;=</definition>
        <argsstring>(const pfx_rat_reg_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="836" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="836" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a81d967416f67b9a4c30fbca73b4d2a6c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;=</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t&lt;23,12&gt; A; A = ... pfx_rat_reg_digs_t&lt;23,10&gt; B; B = ... A &gt;= B =&gt; true or false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="850" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="850" bodyend="899"/>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4dcd2478d4d0f6930a3bafc5159d7e76" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;=</definition>
        <argsstring>(const pfx_rat_reg_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&gt;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="904" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="904" bodyend="907"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0f8ef4c04d7b0956fb973192e04259c9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t&lt;23,12&gt; A; A = ... pfx_rat_reg_digs_t&lt;23,10&gt; B; B = ... A &lt; B =&gt; true or false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="918" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="918" bodyend="967"/>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7251f075014fe1f5c38694f6b8675b1c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;</definition>
        <argsstring>(const pfx_rat_reg_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="972" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="972" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9a04f43c91d88792c1c6d7369406660a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&gt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t&lt;23,12&gt; A; A = ... pfx_rat_reg_digs_t&lt;23,10&gt; B; B = ... A &gt; B =&gt; true or false </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="986" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="986" bodyend="1035"/>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a088384a64c5d34b0286cf4074929585f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::weak_ordering</type>
        <definition>constexpr std::weak_ordering NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const nat_reg_NExNF_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" kindref="member">nat_reg_NExNF_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CONSTRUCTOR COMPARACION OPERADOR SPACESHIP C++20 Comparaciones con un array estandar de otra longitud La salida devuelta es greater,less,equivalent </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1043" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1043" bodyend="1052"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad4ec8b7755e10bf9fd0d152a6f73be39" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>NE</declname>
            <defname>NE</defname>
          </param>
          <param>
            <type>std::size_t</type>
            <declname>NF</declname>
            <defname>NF</defname>
          </param>
        </templateparamlist>
        <type>constexpr std::strong_ordering</type>
        <definition>constexpr std::strong_ordering NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;=&gt;</definition>
        <argsstring>(const pfx_rat_reg_digs_t&lt; NE, NF &gt; &amp;arg) const noexcept</argsstring>
        <name>operator&lt;=&gt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;=&gt;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>&lt; NE, NF &gt; &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>(NE&gt;0)    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1057" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1057" bodyend="1066"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a66a7379ac00e3519f5c116819ffb34ea" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr const dig_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::get</definition>
        <argsstring>() const noexcept</argsstring>
        <name>get</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::get</qualifiedname>
    <requiresclause>((I &lt; LE)&amp;&amp;(std::abs(I) &lt; LF+1))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t A{}; I en [LE-1,-LF] A.get&lt;LE-1&gt;() [devuelve el digito de peso B^(LE-1)] .......... A.get&lt;2&gt;() [devuelve el digito de peso B^2] A.get&lt;1&gt;() [devuelve el digito de peso B^1] A.get&lt;0&gt;() [devuelve el digito de peso (B^0)==1] A.get&lt;-1&gt;() [devuelve el digito de peso B^-1] A.get&lt;-2&gt;() [devuelve el digito de peso B^-2] ........... A.get&lt;-LF&gt;() [devuelve el digito de peso B^-LF] MSB == MSB_E == LE-1 LSB_E == LF MSB_F == LF-1 LSB_F == 0 == LSB </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1089" column="30" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1089" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1aeb5f53ec7f2fce4b7729ec3a1226c457" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::put</definition>
        <argsstring>(const dig_t &amp;arg) noexcept</argsstring>
        <name>put</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::put</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((I &lt; LE)&amp;&amp;(std::abs(I) &lt; LF+1))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pfx_rat_reg_digs_t A{}; A.put&lt;2&gt;(B-1-A.get&lt;2&gt;()) [pone un valor en un digito por su indice] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1097" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1097" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a69468bfb93c10666ca820da3d1124f33" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::int32_t</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::put</definition>
        <argsstring>(dig_t &amp;&amp;arg) noexcept</argsstring>
        <name>put</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::put</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;&amp;</type>
          <declname>arg</declname>
        </param>
    <requiresclause>((I &lt; LE)&amp;&amp;(std::abs(I) &lt; LF+1))    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1103" column="23" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1103" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a02410bb4d27f15f78c3b3e6bed790547" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr const dig_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator[]</definition>
        <argsstring>(std::int32_t idx) const noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator[]</qualifiedname>
        <param>
          <type>std::int32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1107" column="31" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1107" bodyend="1112"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a66bc74a435ff3ee2f48a779b285b4045" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref> &amp;</type>
        <definition>constexpr dig_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator[]</definition>
        <argsstring>(std::int32_t idx) noexcept</argsstring>
        <name>operator[]</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator[]</qualifiedname>
        <param>
          <type>std::int32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1114" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1114" bodyend="1119"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6a0f8118f2de9491462901891f51bfea" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr UINT_T</type>
        <definition>constexpr UINT_T NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator()</definition>
        <argsstring>(std::int32_t idx) const noexcept</argsstring>
        <name>operator()</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator()</qualifiedname>
        <param>
          <type>std::int32_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1121" column="25" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1121" bodyend="1123"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1ad5dbda3b2a1663086f48ccddb0c07d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator++</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator++</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL ES 1</para>
<para>BUCLE FOR QUE SUMA CTHIS Y 1 DESDE IDX=0 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1136" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1136" bodyend="1155"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1adacc48c5076affbe4719232ba16af6cd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator++</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator++</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator++</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1158" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1158" bodyend="1163"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae87bcfde3ae0324b373aef151db47020" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator--</definition>
        <argsstring>() noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator--</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL ES EL COMPLEMENTO A LA BASE DE 1</para>
<para>BUCLE FOR QUE SUMA CTHIS Y C_B(1) DESDE IDX=0 A IDX=LE+LF-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1166" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1166" bodyend="1178"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ac59dbac090677509ad2290c8af28c5db" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator--</definition>
        <argsstring>(int) noexcept</argsstring>
        <name>operator--</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator--</qualifiedname>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1181" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1181" bodyend="1186"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a82fea75187699b7f253e7a0b76f84816" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_Bm1</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_Bm1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::mC_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1198" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1198" bodyend="1205"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a43181180eabb8e8ea937db4ba2d7718d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mC_B</definition>
        <argsstring>() noexcept</argsstring>
        <name>mC_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::mC_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>BUCLE FOR QUE SUMA CTHIS Y 1 DESDE IDX=0 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1208" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1208" bodyend="1225"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a27966e1e6701d534293e7f258e53457b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::C_Bm1</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_Bm1</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::C_Bm1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1228" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1228" bodyend="1234"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1adf28ede7d87f952b85ee2e6f13bddd99" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::C_B</definition>
        <argsstring>() const noexcept</argsstring>
        <name>C_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::C_B</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1237" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1237" bodyend="1242"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9f8d01bd90392598f683702bdff3ad45" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator!</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator!</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator!</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1245" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1245" bodyend="1250"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a46c6455a1ef12adaad5d814985d9ee2c" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-</definition>
        <argsstring>() const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1253" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1253" bodyend="1258"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1af9fbb6e036ca9bd58675e476d43e05a9" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator+=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL ES 1</para>
<para>CASOS CARRY==0[ULTIMA], CARRY==1[VECES SIGUIENTES], CARRY=ARG [1A VEZ] SI ARG == 0 ENTONCES SE DEVUELVE SIN MÁS SI ARG == 1 ENTONCES ++CTHIS SI ARG &gt; 1 ENTONCES 1a VEZ dig_BmArg 2a VEZ dig_Bm1 Y SIGUIENTES ULTIMA VEZ CARRY ==0</para>
<para>PRIMERA VEZ : ARG &gt; 1 usamos dig_BmArg</para>
<para>SEGUNDA VEZ Y SIGUIENTES BUCLE FOR QUE SUMA CTHIS Y 1 DESDE IDX=0 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1276" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1276" bodyend="1314"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a863b4585d8f4ae407912c98c9273b6d3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</definition>
        <argsstring>(dig_t arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-=</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL ES 1</para>
<para>CASOS CARRY==0[ULTIMA], CARRY==1[VECES SIGUIENTES], CARRY=ARG [1A VEZ] SI ARG == 0 ENTONCES SE DEVUELVE SIN MÁS SI ARG == 1 ENTONCES <ndash/>CTHIS SI ARG &gt; 1 ENTONCES 1a VEZ dig_BmArg 2a VEZ dig_Bm1 Y SIGUIENTES ULTIMA VEZ CARRY ==0</para>
<para>PRIMERA VEZ : SUMAMOS EL COMPLEMENTO A LA BASE DE ARG</para>
<para>SEGUNDA VEZ Y SIGUIENTES BUCLE FOR QUE SUMA CTHIS Y 1 DESDE IDX=0 A IDX=L-1</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1317" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1317" bodyend="1367"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" compoundref="nat__rat__fixed__reg__t_8hpp" startline="37" endline="37">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a540a0e700a266a624a295898de9ff8fc" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3693" endline="3695">is_0</references>
        <references refid="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp_1a3fdf457344d84bef1762417b5f5228d2" compoundref="nat__reg__digs__t_01_07_copia_01en_01conflicto_01de_01_m_s_i_012022-11-24_08_8hpp" startline="3698" endline="3700">is_1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae46f34abf55253a3dc0f6774678f57bc" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>, 2 &gt;</type>
        <definition>constexpr std::array&lt; pfx_rat_reg_digs_t, 2 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::mult</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>mult</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::mult</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>OPERACIONES &apos;@&apos;(REG_DIGS_T,DIG_T)-&gt;STD::ARRAY&lt;REG_DIGS_T,2&gt; &apos;@&apos; = MULT </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1372" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1372" bodyend="1400"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a747abd2210ae2c492b36f277931a8cb6" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>, 2 &gt;</type>
        <definition>constexpr std::array&lt; pfx_rat_reg_digs_t, 2 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::add</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>add</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::add</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>&apos;@&apos; = &apos;+&apos; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1454" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1454" bodyend="1470"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6551f10097dd07df063b87fc1a007fd8" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>, 2 &gt;</type>
        <definition>constexpr std::array&lt; pfx_rat_reg_digs_t, 2 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::subst</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>subst</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::subst</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>TO DO REPASAR &apos;@&apos; = &apos;-&apos; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1475" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1475" bodyend="1494"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" compoundref="nat__rat__fixed__reg__t_8hpp" startline="38" endline="38">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_Bm1</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad900c018f6bac8a884c30349154dea10" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator+</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1505" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1505" bodyend="1510"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a742df4d0f55dc71053ee0cd6722c227e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1513" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1513" bodyend="1518"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1abbd54ac852f5cde9a0ec8ebe34f4ffc9" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*</definition>
        <argsstring>(dig_t arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator*</qualifiedname>
        <param>
          <type><ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1521" column="6" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1521" bodyend="1526"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad44b35a08b59ad0418071711eeed448b" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;&lt;</definition>
        <argsstring>(std::size_t n) const noexcept</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;= MULTIPLY BY THE BASE B (10) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1631" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1631" bodyend="1643"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a197245d11816587e8bbcc82e53a94b45" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&lt;&lt;=</definition>
        <argsstring>(std::size_t n) noexcept</argsstring>
        <name>operator&lt;&lt;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&lt;&lt;=</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1646" column="7" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1646" bodyend="1659"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2059c242611fae3bb6b65e7313bb7ff5" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;&gt;</definition>
        <argsstring>(std::size_t n) const noexcept</argsstring>
        <name>operator&gt;&gt;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&gt;&gt;</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>DIVIDE BY THE BASE B (/10_B) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1663" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1663" bodyend="1675"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a04e688baa386601c21f3ad4348205ed8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&gt;&gt;=</definition>
        <argsstring>(std::size_t n) noexcept</argsstring>
        <name>operator&gt;&gt;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&gt;&gt;=</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1678" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1678" bodyend="1690"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a5beb2c8c44ad830017acdac79a4e84ad" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::rem_B</definition>
        <argsstring>(std::size_t n) const noexcept</argsstring>
        <name>rem_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::rem_B</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS &gt;&gt; &gt;&gt;= &lt;&lt; &lt;&lt;=. </para>
        </briefdescription>
        <detaileddescription>
<para>BEGIN : &quot;OPERATORS&quot; REM_B^n AND M_REM_B^n REMAINDER BY THE BASE B (%10_B) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1697" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1697" bodyend="1706"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" compoundref="nat__rat__fixed__reg__t_8hpp" startline="50" endline="56">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::regd_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a073f393cf63e0e2ee6c651748c35aa05" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::m_rem_B</definition>
        <argsstring>(std::size_t n) noexcept</argsstring>
        <name>m_rem_B</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::m_rem_B</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1709" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1709" bodyend="1722"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" compoundref="nat__rat__fixed__reg__t_8hpp" startline="36" endline="36">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::dig_0</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a90bb25d38ca338df232d9dc14a4134a4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator|=</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator|=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>BEGIN : OPERATORS | &amp; |= &amp;=. </para>
        </briefdescription>
        <detaileddescription>
<para>REMAINDER BY THE BASE B (%10_B) END : &quot;OPERATORS&quot; REM_B^n AND M_REM_B^n </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1728" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1728" bodyend="1734"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a85a5e8fd4c769947c919010307e3aa93" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator|</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator|</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator|</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1737" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1737" bodyend="1742"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa2cd3382829147490da1a24415b06c77" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&amp;=</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&amp;=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1745" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1745" bodyend="1751"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a44e11dd006b54a63e2fbf7242cf9f273" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator&amp;</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1754" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1754" bodyend="1759"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab3cac3beb283fe928dbda805c62a0230" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::pair&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &gt;</type>
        <definition>constexpr std::pair&lt; dig_t, pfx_rat_reg_digs_t &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>END : OPERATORS | &amp; |= &amp;=. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>CARRY INICIAL ES 0</para>
<para>INT_ARRAY TEMPORAL COPIA DE (*THIS) [SUMANDO 0]</para>
<para>INT_ARRAY TEMPORAL COPIA DE ARG [SUMANDO 1]</para>
<para>BUCLE FOR QUE SUMA RETINTS Y ARGINTS DESDE IDX=0 A IDX=L-1</para>
<para>GUARDAMOS EL CARRY FINAL Y RETORNAMOS LA SUMA</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1771" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1771" bodyend="1795"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a11dc06d186a7598661dcf1b8b98736a4" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::pair&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" kindref="member">dig_t</ref>, <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &gt;</type>
        <definition>constexpr std::pair&lt; dig_t, pfx_rat_reg_digs_t &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>INICIALIZAMOS EL CARRY/BORROW A 0</para>
<para>GUARDAMOS EL COMPLEMENTO A LA BASE MENOS 1 DEL MINUENDO</para>
<para>COMPLETAMOS EL COMPLEMENTO A LA BASE SUMANDO 1 [carry_CB vale en el inicio 1]</para>
<para>SE HA COMPLETADO EL COMPLEMENTO A LA BASE</para>
<para>SUMAMOS SUMANDO_0 + C_B(SUMANDO_1)</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1798" column="11" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1798" bodyend="1831"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a589433f890f78faca137757fc3fb8459" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr std::array&lt; <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref>, 2 &gt;</type>
        <definition>constexpr std::array&lt; pfx_rat_reg_digs_t, 2 &gt; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator*</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>BEGIN : DECLARACIONES E INICIALIZACIONES</para>
<para>END : DECLARACIONES E INICIALIZACIONES</para>
<para>BEGIN : OBTENEMOS TODOS LOS SUMANDOS MULTIPLICANDO POR UN DIGITO FIJO COLOCADOS CONVENIENTEMENTE</para>
<para>COLOCADOS CONVENIENTEMENTE END : OBTENEMOS TODOS LOS SUMANDOS MULTIPLICANDO POR UN DIGITO FIJO</para>
<para>BEGIN : SUMAMOS TODOS LOS SUMANDOS</para>
<para>END : SUMAMOS TODOS LOS SUMANDOS BEGIN : PREPARAMOS EL PAR DE RETORNO</para>
<para>END : PREPARAMOS EL PAR DE RETORNO</para>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="1834" column="12" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="1834" bodyend="1892"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a00a90e2240080937a5bf0fbf6f6cfde1" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+</definition>
        <argsstring>(const base_t &amp;arg) const noexcept</argsstring>
        <name>operator+</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator+</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2047" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2047" bodyend="2053"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1aff1f98a5fef7912f98b23032061c4d2a" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-</definition>
        <argsstring>(const base_t &amp;arg) const noexcept</argsstring>
        <name>operator-</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2056" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2056" bodyend="2062"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0240da6219232b6431dc4355cbbfe7ac" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref></type>
        <definition>constexpr pfx_rat_reg_digs_t NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*</definition>
        <argsstring>(const base_t &amp;arg) const noexcept</argsstring>
        <name>operator*</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator*</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2065" column="20" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2065" bodyend="2071"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a268bcec2ba1b58bfca7f3c499bcb4bdd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2100" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2100" bodyend="2106"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2afb2e3153171736b62c2eb7a831f22c" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2109" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2109" bodyend="2115"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7921aacc123039a503c43bb0590a3816" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*=</definition>
        <argsstring>(const base_t &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" kindref="member">base_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2118" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2118" bodyend="2124"/>
        <references refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" compoundref="nat__rat__fixed__reg__t_8hpp" startline="151" endline="152">NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::pfx_rat_reg_digs_t</references>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a886ba43fc3221dd828cc5305f641bb6e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator+=</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator+=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2127" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2127" bodyend="2131"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1a06c385a088293d118abf24e1145b2d61" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator-=</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator-=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2134" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2134" bodyend="2138"/>
      </memberdef>
      <memberdef kind="function" id="struct_num_repr_1_1nat__rat__fixed__reg__t_1adba3e7b2345403dcf9558285e13f18a4" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>constexpr const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
        <definition>constexpr const pfx_rat_reg_digs_t &amp; NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;::operator*=</definition>
        <argsstring>(const pfx_rat_reg_digs_t &amp;arg) noexcept</argsstring>
        <name>operator*=</name>
        <qualifiedname>NumRepr::nat_rat_fixed_reg_t::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" kindref="member">pfx_rat_reg_digs_t</ref> &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="2141" column="27" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="2141" bodyend="2145"/>
      </memberdef>
      </sectiondef>
    <requiresclause>(<ref refid="namespace_num_repr_1_1type__traits_1ae7b0da6237614a2d93ed8d40ee5596a5" kindref="member">type_traits::suitable_base</ref>&lt;UINT_T,B&gt;() &amp;&amp; (LE&gt;0))    </requiresclause>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>NumRepr::nat_rat_fixed_reg_t&lt; UINT_T, B, LE, LF &gt;</label>
        <link refid="struct_num_repr_1_1nat__rat__fixed__reg__t"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" line="11" column="1" bodyfile="C:/Users/julia/Dropbox/GitHub/NumericRepresentations/src/nat_rat_fixed_reg_t.hpp" bodystart="11" bodyend="2162"/>
    <listofallmembers>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a747abd2210ae2c492b36f277931a8cb6" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>add</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0c1d6f1882ef00a90de99c7c13538074" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>base_NEXNF_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9703976cda8e32e393f3acb637fac01a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>base_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1adf28ede7d87f952b85ee2e6f13bddd99" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>C_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a27966e1e6701d534293e7f258e53457b" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>C_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a8c7d7fb0e6776dd78e993e5fc8fbf8e4" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a72cce26eea1af99400f760bb683df57f" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a5b16b680b8c906452330a8201e3f9966" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4ea2b34d7a64b91d20a547769fe4c4d5" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a12229e5a534c8c6f2e4075031ae7ef6c" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad13f4ece8bd16d01902c852ada645087" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9f346d0bbdf300ba36b0b9622a0c2004" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9350d24557721d0a2d25a87b3d993183" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>concat_inv</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1acf99b1745ac9ee699102236d1a2a79dc" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>copy_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab36669ef39e97b9de7b2b1afb11551a7" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>cuenta_0s_desde_DRCHA</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7d591c66320eb144688d13f2f017db83" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>cuenta_0s_desde_IZDA</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a235bc4a9ae726bbf7c7d5933d9a62b2e" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_0</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a960faa8c0828a9a6680526e7a9bfbc59" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a487d6b76d2e1cb0c18afaf54288e6029" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a18ae64dc889b84eea4ca989e9563651a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_Bm2</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aee17574658ad0e66f3ee133d9f554833" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_max</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a67e6e0e59887f528524c4b54e6ba5a2a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_submax</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a996554f9f2bd46c8f3e36fc176997644" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>dig_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a66a7379ac00e3519f5c116819ffb34ea" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>get</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a787b682d968d66643631b4e17b191b5a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>IntPart</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2649a33cb0440df7967746d93b2ea6d7" prot="private" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>m_dc</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a073f393cf63e0e2ee6c651748c35aa05" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>m_rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a43181180eabb8e8ea937db4ba2d7718d" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>mC_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a82fea75187699b7f253e7a0b76f84816" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>mC_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ace15a99d6b8f4b429bf385e32d9c58d8" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>move_arg_N</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae46f34abf55253a3dc0f6774678f57bc" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>mult</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0d08c8fc166476583cb94478965336c3" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>nat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab1d1cdb286a3d34d491fe8834c4946fe" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>nat_reg_NExNF_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1d2effcd65514535a97572a28c992519" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>normalize</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9f8d01bd90392598f683702bdff3ad45" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator!</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a858568dd397e27a65b678be845d2f11d" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9ac296171e867711b5eeef9373c97080" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator!=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a44e11dd006b54a63e2fbf7242cf9f273" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&amp;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa2cd3382829147490da1a24415b06c77" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&amp;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6a0f8118f2de9491462901891f51bfea" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator()</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1abbd54ac852f5cde9a0ec8ebe34f4ffc9" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a589433f890f78faca137757fc3fb8459" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0240da6219232b6431dc4355cbbfe7ac" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator*</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7921aacc123039a503c43bb0590a3816" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator*=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1adba3e7b2345403dcf9558285e13f18a4" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator*=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad900c018f6bac8a884c30349154dea10" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab3cac3beb283fe928dbda805c62a0230" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a00a90e2240080937a5bf0fbf6f6cfde1" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator+</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1ad5dbda3b2a1663086f48ccddb0c07d" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1adacc48c5076affbe4719232ba16af6cd" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator++</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af9fbb6e036ca9bd58675e476d43e05a9" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a268bcec2ba1b58bfca7f3c499bcb4bdd" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a886ba43fc3221dd828cc5305f641bb6e" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator+=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a46c6455a1ef12adaad5d814985d9ee2c" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a742df4d0f55dc71053ee0cd6722c227e" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a11dc06d186a7598661dcf1b8b98736a4" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aff1f98a5fef7912f98b23032061c4d2a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae87bcfde3ae0324b373aef151db47020" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ac59dbac090677509ad2290c8af28c5db" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator--</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a863b4585d8f4ae407912c98c9273b6d3" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2afb2e3153171736b62c2eb7a831f22c" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a06c385a088293d118abf24e1145b2d61" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator-=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0f8ef4c04d7b0956fb973192e04259c9" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7251f075014fe1f5c38694f6b8675b1c" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad44b35a08b59ad0418071711eeed448b" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;&lt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a197245d11816587e8bbcc82e53a94b45" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a674d8af40df8b5fc48eecd0e58c6b844" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af2ce70fc1edd09e642f0d340f752167a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a088384a64c5d34b0286cf4074929585f" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad4ec8b7755e10bf9fd0d152a6f73be39" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&lt;=&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a40c5401cc7a854a6c9ee7e303b8b605e" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a01ec3009f1dad14b6a40cd4cffc266d1" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a87a935fc4c1bba1d16ef8fc855ab837d" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae1b1bbc00ba4e1b7cda6d655d0c69713" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad4655dff96fd715063231961682140a8" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7a8a8164894278d64b0ec3c2534d2837" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a1dfad6f1cf535bde170572bc3c023c6d" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7d2ee3c6afa41d4d8df88b979612eac8" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator==</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9a04f43c91d88792c1c6d7369406660a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a81d967416f67b9a4c30fbca73b4d2a6c" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4dcd2478d4d0f6930a3bafc5159d7e76" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2059c242611fae3bb6b65e7313bb7ff5" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&gt;&gt;</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a04e688baa386601c21f3ad4348205ed8" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator&gt;&gt;=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a02410bb4d27f15f78c3b3e6bed790547" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a66bc74a435ff3ee2f48a779b285b4045" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator[]</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a85a5e8fd4c769947c919010307e3aa93" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator|</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a90bb25d38ca338df232d9dc14a4134a4" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>operator|=</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a05f3a766ce29786655fc99812d550fa6" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a83498b558e3a2707ff1767b5bdf087b4" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae679f5015862a68f635d46d8c4a70892" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ae344ba117479d673748d2e4b54a11e20" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a7afac12b75bf172621e52a8cb1aee74c" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af205ef58ee00a8d89a5504f3638d2f06" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a57512a8692247ed4c3bfca17504d04bb" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2447e6e4c5bc27036cb5c0c717c57516" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a022253ded9523d2145125697729f0bc2" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>pfx_rat_reg_NExNF_digs_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aeb5f53ec7f2fce4b7729ec3a1226c457" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>put</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a69468bfb93c10666ca820da3d1124f33" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>put</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4611ac7b27e61eeb36892ac67877e22e" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>reg_ints_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1af0e57e72ead75b530b5efe77928ecdc6" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>reg_ssints_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1adf7444ca6fd95c7e1e8e1b0180b269a0" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>reg_suints_t</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a300ccd4144f9f2cdb9979897e14ded03" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regd_0</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4d1b2577021f8594d6efa471234869e0" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regd_1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1afc75739252c5a40b233bd12eace8dd16" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regd_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad70d405111f74e96957daf7e860f0abd" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regd_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a0fd73bc1e0e7ef8d7e5cfeb2830da7a5" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regd_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a010c5902fd8210da63a98c1179be37a7" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regd_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a2b72b79cdc0bf99d420fa9ffc812b274" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regi_0</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9a2b45b2f3d26220d33285794c8128a6" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regi_1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6d97e8aa88ec3d0b9f81c66de861b915" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regi_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a9c1583db7aec52231103595dc69a2a32" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regi_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a993ab098e0e7070f2514b0ebd9b9162e" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regi_pow_n_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a86f11292fe859c0c3ef9a580d1b96052" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>regi_pow_n_B_m1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a5beb2c8c44ad830017acdac79a4e84ad" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>rem_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a206489e66bc07dd845d00c4a6ccb0bdc" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>rev_subreg_digs</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a3a821c17ddc821a00db5e00b02ea7f77" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>rev_subreg_digs_pe</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ad5adcbe25e088551ac817004a9320300" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>rev_subreg_digs_pf</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa7640d2bf6c36ba7243b2dee7abc0b39" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>SIG_SINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a553a93b4e70ebccb1aad563d4433d609" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>SIG_UINT_T</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1aa93bfacedfc35b410d1eb6f1e74ffe55" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>subreg_digs</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6fa675710cb0e3a25d2b46b601516149" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>subreg_digs_pe</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a826d5ada30ddfb3bd85e38a3b9231ed9" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>subreg_digs_pf</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a6551f10097dd07df063b87fc1a007fd8" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>subst</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a94e5d24230e61c14c2590893f435ef06" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>sui_B</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab5167455e73179baf8deaccf40901063" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>sui_Bp1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1ab9e34bb3a8d955badd3498d51d5e62f4" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>ui_0</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1adbeecd9a334cb9c990bca8c7878e19ea" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>ui_1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1abf72096e6dd350d74f05124d4bf07e3a" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>ui_Bm1</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a470670e3e267bb42318f77ed70a7f42d" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>ui_max</name></member>
      <member refid="struct_num_repr_1_1nat__rat__fixed__reg__t_1a4ca499b70aaa1d53917b468c09ad6968" prot="public" virt="non-virtual"><scope>NumRepr::nat_rat_fixed_reg_t</scope><name>ui_submax</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
